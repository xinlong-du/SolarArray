# -*- coding: mbcs -*-
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=200.0)
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(100.0, 100.0), 
    point2=(133.0, 100.0))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[2])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(133.0, 100.0), 
    point2=(133.0, 101.42))
mdb.models['Model-1'].sketches['__profile__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__profile__'].geometry[3])
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[2], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[3])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(133.0, 101.42), 
    point2=(115.14, 101.42))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[4])
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[3], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[4])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(115.14, 101.42), 
    point2=(115.14, 125.03))
mdb.models['Model-1'].sketches['__profile__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__profile__'].geometry[5])
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[4], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[5])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(115.14, 125.03), 
    point2=(101.36, 125.03))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[6])
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[5], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[6])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(101.36, 125.03), 
    point2=(101.36, 129.99))
mdb.models['Model-1'].sketches['__profile__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__profile__'].geometry[7])
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[6], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[7])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(101.36, 129.99), 
    point2=(111.96, 129.99))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[8])
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[7], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[8])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(111.96, 129.99), 
    point2=(111.96, 132.0))
mdb.models['Model-1'].sketches['__profile__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__profile__'].geometry[9])
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[8], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[9])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(111.96, 132.0), 
    point2=(100.0, 132.0))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[10])
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[9], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[10])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(100.0, 132.0), 
    point2=(100.0, 100.0))
mdb.models['Model-1'].sketches['__profile__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__profile__'].geometry[11])
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[10], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[11])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(101.37, 101.42), 
    point2=(113.47, 101.42))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[12])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(113.47, 101.42), 
    point2=(113.47, 123.36))
mdb.models['Model-1'].sketches['__profile__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__profile__'].geometry[13])
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[12], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[13])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(113.47, 123.36), 
    point2=(101.37, 123.36))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[14])
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[13], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[14])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(101.37, 123.36), 
    point2=(101.37, 101.42))
mdb.models['Model-1'].sketches['__profile__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__profile__'].geometry[15])
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[14], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[15])
mdb.models['Model-1'].Part(dimensionality=THREE_D, name='moduleFrame', type=
    DEFORMABLE_BODY)
mdb.models['Model-1'].parts['moduleFrame'].BaseSolidExtrude(depth=533.4, 
    sketch=mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
# Save by xinlo on 2023_07_08-00.29.15; build 2017 2016_09_27-14.54.59 126836
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='moduleFrame-1', 
    part=mdb.models['Model-1'].parts['moduleFrame'])
# Save by xinlo on 2023_07_08-00.40.04; build 2017 2016_09_27-14.54.59 126836
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].parts['moduleFrame'].DatumPlaneByOffset(flip=SIDE1, 
    offset=12.7, plane=mdb.models['Model-1'].parts['moduleFrame'].faces[9])
mdb.models['Model-1'].parts['moduleFrame'].Mirror(keepOriginal=ON, mirrorPlane=
    mdb.models['Model-1'].parts['moduleFrame'].datums[2])
# Save by xinlo on 2023_07_08-00.45.42; build 2017 2016_09_27-14.54.59 126836
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].rootAssembly.regenerate()
# Save by xinlo on 2023_07_08-00.49.15; build 2017 2016_09_27-14.54.59 126836
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=400.0)
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(111.0, 132.0), 
    point2=(111.0, 134.0))
mdb.models['Model-1'].sketches['__profile__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__profile__'].geometry[2])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(111.0, 134.0), 
    point2=(107.0, 136.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(107.0, 136.0), 
    point2=(96.5, 136.0))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[4])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(96.5, 136.0), 
    point2=(96.5, 121.0))
mdb.models['Model-1'].sketches['__profile__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__profile__'].geometry[5])
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[4], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[5])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(96.5, 121.0), 
    point2=(78.1, 121.0))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[6])
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[5], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[6])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(78.1, 121.0), 
    point2=(78.1, 136.0))
mdb.models['Model-1'].sketches['__profile__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__profile__'].geometry[7])
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[6], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[7])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(78.1, 136.0), 
    point2=(67.6, 136.0))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[8])
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[7], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[8])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(67.6, 136.0), 
    point2=(63.6, 134.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(63.6, 134.0), 
    point2=(63.6, 132.0))
mdb.models['Model-1'].sketches['__profile__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__profile__'].geometry[10])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(63.6, 132.0), 
    point2=(74.6, 132.0))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[11])
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[10], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[11])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(74.6, 132.0), 
    point2=(74.6, 117.0))
mdb.models['Model-1'].sketches['__profile__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__profile__'].geometry[12])
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[11], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[12])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(74.6, 117.0), 
    point2=(100.0, 117.0))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[13])
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[12], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[13])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(100.0, 117.0), 
    point2=(100.0, 132.0))
mdb.models['Model-1'].sketches['__profile__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__profile__'].geometry[14])
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[13], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[14])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(100.0, 132.0), 
    point2=(111.0, 132.0))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[15])
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[14], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[15])
mdb.models['Model-1'].Part(dimensionality=THREE_D, name='clamp', type=
    DEFORMABLE_BODY)
mdb.models['Model-1'].parts['clamp'].BaseSolidExtrude(depth=60.0, sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='clamp-1', part=
    mdb.models['Model-1'].parts['clamp'])
# Save by xinlo on 2023_07_08-15.40.49; build 2017 2016_09_27-14.54.59 126836
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].parts['moduleFrame'].features['Solid extrude-1'].setValues(
    depth=60.0)
mdb.models['Model-1'].parts['moduleFrame'].regenerate()
mdb.models['Model-1'].rootAssembly.regenerate()
# Save by xinlo on 2023_07_08-15.55.53; build 2017 2016_09_27-14.54.59 126836
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=500.0)
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(216.5, 80.4), 
    point2=(216.5, 100.0))
mdb.models['Model-1'].sketches['__profile__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__profile__'].geometry[2])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(216.5, 100.0), 
    point2=(153.0, 100.0))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[3])
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[2], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[3])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(153.0, 100.0), 
    point2=(153.0, -103.2))
mdb.models['Model-1'].sketches['__profile__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__profile__'].geometry[4])
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[3], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[4])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(153.0, -103.2), 
    point2=(216.5, -103.2))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[5])
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[4], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[5])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(216.5, -103.2), 
    point2=(216.5, -83.6))
mdb.models['Model-1'].sketches['__profile__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__profile__'].geometry[6])
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[5], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[6])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(216.5, -83.6), 
    point2=(215.0, -83.6))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[7])
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[6], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[7])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(215.0, -83.6), 
    point2=(215.0, -101.7))
mdb.models['Model-1'].sketches['__profile__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__profile__'].geometry[8])
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[7], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[8])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(215.0, -101.7), 
    point2=(154.5, -101.7))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[9])
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[8], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[9])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(154.5, -101.7), 
    point2=(154.5, 98.5))
mdb.models['Model-1'].sketches['__profile__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__profile__'].geometry[10])
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[9], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[10])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(154.5, 98.5), 
    point2=(215.0, 98.5))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[11])
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[10], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[11])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(215.0, 98.5), 
    point2=(215.0, 80.4))
mdb.models['Model-1'].sketches['__profile__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__profile__'].geometry[12])
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[11], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[12])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(215.0, 80.4), 
    point2=(216.5, 80.4))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[13])
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[12], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[13])
mdb.models['Model-1'].Part(dimensionality=THREE_D, name='purlin', type=
    DEFORMABLE_BODY)
mdb.models['Model-1'].parts['purlin'].BaseSolidExtrude(depth=120.0, sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
# Save by xinlo on 2023_07_08-16.58.26; build 2017 2016_09_27-14.54.59 126836
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='purlin-1', 
    part=mdb.models['Model-1'].parts['purlin'])
mdb.models['Model-1'].rootAssembly.rotate(angle=-90.0, axisDirection=(0.0, 
    203.2, 0.0), axisPoint=(153.0, -103.2, 120.0), instanceList=('purlin-1', ))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('purlin-1', ), 
    vector=(-140.0, 0.0, -121.75))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('purlin-1', ), 
    vector=(14.3, 0.0, 0.0))
# Save by xinlo on 2023_07_08-17.10.35; build 2017 2016_09_27-14.54.59 126836
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].parts['moduleFrame'].features['Solid extrude-1'].setValues(
    depth=80.0)
mdb.models['Model-1'].parts['moduleFrame'].regenerate()
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.models['Model-1'].rootAssembly.translate(instanceList=('moduleFrame-1', ), 
    vector=(0.0, 0.0, -10.0))
# Save by xinlo on 2023_07_08-17.29.09; build 2017 2016_09_27-14.54.59 126836
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].parts['clamp'].HoleThruAllFromEdges(diameter=6.35, 
    distance1=30.0, distance2=9.2, edge1=
    mdb.models['Model-1'].parts['clamp'].edges[25], edge2=
    mdb.models['Model-1'].parts['clamp'].edges[23], plane=
    mdb.models['Model-1'].parts['clamp'].faces[8], planeSide=SIDE1)
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.models['Model-1'].parts['purlin'].HoleThruAllFromEdges(diameter=6.35, 
    distance1=60.0, distance2=31.75, edge1=
    mdb.models['Model-1'].parts['purlin'].edges[28], edge2=
    mdb.models['Model-1'].parts['purlin'].edges[26], plane=
    mdb.models['Model-1'].parts['purlin'].faces[9], planeSide=SIDE1)
del mdb.models['Model-1'].parts['purlin'].features['Cut circular hole-1']
mdb.models['Model-1'].parts['purlin'].HoleBlindFromEdges(depth=1.5, diameter=
    6.35, distance1=60.0, distance2=31.75, edge1=
    mdb.models['Model-1'].parts['purlin'].edges[28], edge2=
    mdb.models['Model-1'].parts['purlin'].edges[26], plane=
    mdb.models['Model-1'].parts['purlin'].faces[9], planeSide=SIDE1)
mdb.models['Model-1'].rootAssembly.regenerate()
# Save by xinlo on 2023_07_08-18.11.38; build 2017 2016_09_27-14.54.59 126836
# Save by xinlo on 2023_07_08-18.12.40; build 2017 2016_09_27-14.54.59 126836
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].parts['clamp'].features['Cut circular hole-1'].setValues(
    diameter=6.0)
mdb.models['Model-1'].parts['clamp'].regenerate()
mdb.models['Model-1'].parts['purlin'].features['Cut circular hole-1'].setValues(
    diameter=6.0)
mdb.models['Model-1'].parts['purlin'].regenerate()
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=30.0)
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    0.0, 0.0), point1=(11.5, 0.0))
mdb.models['Model-1'].Part(dimensionality=THREE_D, name='bolt', type=
    DEFORMABLE_BODY)
mdb.models['Model-1'].parts['bolt'].BaseSolidExtrude(depth=4.0, sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].ConstrainedSketch(gridSpacing=1.63, name='__profile__', 
    sheetSize=65.36, transform=
    mdb.models['Model-1'].parts['bolt'].MakeSketchTransform(
    sketchPlane=mdb.models['Model-1'].parts['bolt'].faces[1], 
    sketchPlaneSide=SIDE1, 
    sketchUpEdge=mdb.models['Model-1'].parts['bolt'].edges[0], 
    sketchOrientation=RIGHT, origin=(0.0, 0.0, 4.0)))
mdb.models['Model-1'].parts['bolt'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__profile__'])
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    0.0, 0.0), point1=(3.0, 0.0))
mdb.models['Model-1'].parts['bolt'].SolidExtrude(depth=22.5, 
    flipExtrudeDirection=OFF, sketch=
    mdb.models['Model-1'].sketches['__profile__'], sketchOrientation=RIGHT, 
    sketchPlane=mdb.models['Model-1'].parts['bolt'].faces[1], sketchPlaneSide=
    SIDE1, sketchUpEdge=mdb.models['Model-1'].parts['bolt'].edges[0])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].ConstrainedSketch(gridSpacing=1.97, name='__profile__', 
    sheetSize=78.95, transform=
    mdb.models['Model-1'].parts['bolt'].MakeSketchTransform(
    sketchPlane=mdb.models['Model-1'].parts['bolt'].faces[1], 
    sketchPlaneSide=SIDE1, 
    sketchUpEdge=mdb.models['Model-1'].parts['bolt'].edges[0], 
    sketchOrientation=RIGHT, origin=(0.0, 0.0, 26.5)))
mdb.models['Model-1'].parts['bolt'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__profile__'])
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    0.0, 0.0), point1=(11.5, 0.0))
mdb.models['Model-1'].parts['bolt'].SolidExtrude(depth=4.0, 
    flipExtrudeDirection=OFF, sketch=
    mdb.models['Model-1'].sketches['__profile__'], sketchOrientation=RIGHT, 
    sketchPlane=mdb.models['Model-1'].parts['bolt'].faces[1], sketchPlaneSide=
    SIDE1, sketchUpEdge=mdb.models['Model-1'].parts['bolt'].edges[0])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['bolt'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['bolt'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['bolt'].features['Solid extrude-1'])
mdb.models['Model-1'].sketches['__edit__'].HorizontalDimension(textPoint=(
    6.67731094360352, -2.13617324829102), value=5.75, vertex1=
    mdb.models['Model-1'].sketches['__edit__'].vertices[0], vertex2=
    mdb.models['Model-1'].sketches['__edit__'].vertices[1])
mdb.models['Model-1'].parts['bolt'].features['Solid extrude-1'].setValues(
    sketch=mdb.models['Model-1'].sketches['__edit__'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].parts['bolt'].regenerate()
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['bolt'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['bolt'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['bolt'].features['Solid extrude-1'])
mdb.models['Model-1'].sketches['__edit__'].ObliqueDimension(textPoint=(
    18.3492851257324, 4.53985261917114), value=11.5, vertex1=
    mdb.models['Model-1'].sketches['__edit__'].vertices[0], vertex2=
    mdb.models['Model-1'].sketches['__edit__'].vertices[1])
mdb.models['Model-1'].sketches['__edit__'].dimensions[1].setValues(value=5.75)
mdb.models['Model-1'].parts['bolt'].features['Solid extrude-1'].setValues(
    sketch=mdb.models['Model-1'].sketches['__edit__'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].parts['bolt'].regenerate()
del mdb.models['Model-1'].parts['bolt']
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=30.0)
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    0.0, 0.0), point1=(5.75, 0.0))
mdb.models['Model-1'].Part(dimensionality=THREE_D, name='bolt', type=
    DEFORMABLE_BODY)
mdb.models['Model-1'].parts['bolt'].BaseSolidExtrude(depth=4.0, sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].ConstrainedSketch(gridSpacing=0.83, name='__profile__', 
    sheetSize=33.4, transform=
    mdb.models['Model-1'].parts['bolt'].MakeSketchTransform(
    sketchPlane=mdb.models['Model-1'].parts['bolt'].faces[1], 
    sketchPlaneSide=SIDE1, 
    sketchUpEdge=mdb.models['Model-1'].parts['bolt'].edges[0], 
    sketchOrientation=RIGHT, origin=(0.0, 0.0, 4.0)))
mdb.models['Model-1'].parts['bolt'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__profile__'])
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    0.0, 0.0), point1=(3.0, 0.0))
mdb.models['Model-1'].parts['bolt'].SolidExtrude(depth=22.5, 
    flipExtrudeDirection=OFF, sketch=
    mdb.models['Model-1'].sketches['__profile__'], sketchOrientation=RIGHT, 
    sketchPlane=mdb.models['Model-1'].parts['bolt'].faces[1], sketchPlaneSide=
    SIDE1, sketchUpEdge=mdb.models['Model-1'].parts['bolt'].edges[0])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].ConstrainedSketch(gridSpacing=1.38, name='__profile__', 
    sheetSize=55.47, transform=
    mdb.models['Model-1'].parts['bolt'].MakeSketchTransform(
    sketchPlane=mdb.models['Model-1'].parts['bolt'].faces[1], 
    sketchPlaneSide=SIDE1, 
    sketchUpEdge=mdb.models['Model-1'].parts['bolt'].edges[0], 
    sketchOrientation=RIGHT, origin=(0.0, 0.0, 26.5)))
mdb.models['Model-1'].parts['bolt'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__profile__'])
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    0.0, 0.0), point1=(5.75, 0.0))
mdb.models['Model-1'].parts['bolt'].SolidExtrude(depth=4.0, 
    flipExtrudeDirection=OFF, sketch=
    mdb.models['Model-1'].sketches['__profile__'], sketchOrientation=RIGHT, 
    sketchPlane=mdb.models['Model-1'].parts['bolt'].faces[1], sketchPlaneSide=
    SIDE1, sketchUpEdge=mdb.models['Model-1'].parts['bolt'].edges[0])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='bolt-1', part=
    mdb.models['Model-1'].parts['bolt'])
mdb.models['Model-1'].rootAssembly.rotate(angle=90.0, axisDirection=(1.0, 0.0, 
    0.0), axisPoint=(0.0, 0.0, 0.0), instanceList=('bolt-1', ))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('bolt-1', ), vector=
    (0.0, 0.0, 10.0))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('bolt-1', ), vector=
    (87.3, 121.0, 20.0))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('bolt-1', ), vector=
    (0.0, 4.0, 0.0))
# Save by xinlo on 2023_07_08-22.46.43; build 2017 2016_09_27-14.54.59 126836
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].Material(name='steel')
mdb.models['Model-1'].materials['steel'].Elastic(table=((200000.0, 0.3), ))
mdb.models['Model-1'].Material(name='aluminum')
mdb.models['Model-1'].materials['aluminum'].Elastic(table=((68300.0, 0.33), ))
mdb.models['Model-1'].HomogeneousSolidSection(material='steel', name='steel', 
    thickness=None)
mdb.models['Model-1'].HomogeneousSolidSection(material='aluminum', name=
    'aluminum', thickness=None)
mdb.models['Model-1'].parts['bolt'].SectionAssignment(offset=0.0, offsetField=
    '', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-1'].parts['bolt'].cells.getSequenceFromMask(mask=(
    '[#1 ]', ), )), sectionName='aluminum', thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].parts['clamp'].SectionAssignment(offset=0.0, offsetField=
    '', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-1'].parts['clamp'].cells.getSequenceFromMask(mask=(
    '[#1 ]', ), )), sectionName='aluminum', thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].parts['moduleFrame'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-1'].parts['moduleFrame'].cells.getSequenceFromMask(
    mask=('[#3 ]', ), )), sectionName='aluminum', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-1'].parts['purlin'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-1'].parts['purlin'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )), sectionName='steel', thicknessAssignment=
    FROM_SECTION)
# Save by xinlo on 2023_07_08-23.05.52; build 2017 2016_09_27-14.54.59 126836
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].rootAssembly.regenerate()
# Save by xinlo on 2023_07_08-23.12.55; build 2017 2016_09_27-14.54.59 126836
# Save by xinlo on 2023_07_08-23.12.58; build 2017 2016_09_27-14.54.59 126836
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].StaticStep(name='pretension', nlgeom=ON, previous=
    'Initial')
mdb.models['Model-1'].StaticStep(name='cyclicLoading', previous='pretension')
mdb.models['Model-1'].ContactProperty('bolt2clampProp')
mdb.models['Model-1'].interactionProperties['bolt2clampProp'].TangentialBehavior(
    dependencies=0, directionality=ISOTROPIC, elasticSlipStiffness=None, 
    formulation=PENALTY, fraction=0.005, maximumElasticSlip=FRACTION, 
    pressureDependency=OFF, shearStressLimit=None, slipRateDependency=OFF, 
    table=((0.2, ), ), temperatureDependency=OFF)
mdb.models['Model-1'].rootAssembly.Surface(name='bolt', side1Faces=
    mdb.models['Model-1'].rootAssembly.instances['bolt-1'].faces.getSequenceFromMask(
    ('[#7f ]', ), ))
mdb.models['Model-1'].rootAssembly.Surface(name='clamp', side1Faces=
    mdb.models['Model-1'].rootAssembly.instances['clamp-1'].faces.getSequenceFromMask(
    ('[#1ffff ]', ), ))
mdb.models['Model-1'].SurfaceToSurfaceContactStd(adjustMethod=NONE, 
    clearanceRegion=None, createStepName='Initial', datumAxis=None, 
    initialClearance=OMIT, interactionProperty='bolt2clampProp', master=
    mdb.models['Model-1'].rootAssembly.surfaces['bolt'], name='bolt2clamp', 
    slave=mdb.models['Model-1'].rootAssembly.surfaces['clamp'], sliding=FINITE, 
    thickness=ON)
# Save by xinlo on 2023_07_09-17.58.01; build 2017 2016_09_27-14.54.59 126836
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].parts['bolt'].PartitionCellByExtendFace(cells=
    mdb.models['Model-1'].parts['bolt'].cells.getSequenceFromMask(('[#1 ]', ), 
    ), extendFace=mdb.models['Model-1'].parts['bolt'].faces[0])
mdb.models['Model-1'].parts['bolt'].PartitionCellByExtendFace(cells=
    mdb.models['Model-1'].parts['bolt'].cells.getSequenceFromMask(('[#2 ]', ), 
    ), extendFace=mdb.models['Model-1'].parts['bolt'].faces[6])
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.models['Model-1'].parts['clamp'].PartitionCellByExtendFace(cells=
    mdb.models['Model-1'].parts['clamp'].cells.getSequenceFromMask(('[#1 ]', ), 
    ), extendFace=mdb.models['Model-1'].parts['clamp'].faces[9])
del mdb.models['Model-1'].parts['clamp'].features['Partition cell-1']
mdb.models['Model-1'].parts['clamp'].PartitionCellByExtendFace(cells=
    mdb.models['Model-1'].parts['clamp'].cells.getSequenceFromMask(('[#1 ]', ), 
    ), extendFace=mdb.models['Model-1'].parts['clamp'].faces[14])
mdb.models['Model-1'].parts['clamp'].PartitionCellByExtendFace(cells=
    mdb.models['Model-1'].parts['clamp'].cells.getSequenceFromMask(('[#2 ]', ), 
    ), extendFace=mdb.models['Model-1'].parts['clamp'].faces[17])
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.models['Model-1'].parts['clamp'].PartitionCellByPlanePointNormal(cells=
    mdb.models['Model-1'].parts['clamp'].cells.getSequenceFromMask(('[#10 ]', 
    ), ), normal=mdb.models['Model-1'].parts['clamp'].edges[31], point=
    mdb.models['Model-1'].parts['clamp'].vertices[21])
mdb.models['Model-1'].parts['clamp'].PartitionCellByPlanePointNormal(cells=
    mdb.models['Model-1'].parts['clamp'].cells.getSequenceFromMask(('[#8 ]', ), 
    ), normal=mdb.models['Model-1'].parts['clamp'].edges[62], point=
    mdb.models['Model-1'].parts['clamp'].vertices[37])
mdb.models['Model-1'].parts['moduleFrame'].PartitionCellByExtendFace(cells=
    mdb.models['Model-1'].parts['moduleFrame'].cells.getSequenceFromMask((
    '[#1 ]', ), ), extendFace=
    mdb.models['Model-1'].parts['moduleFrame'].faces[2])
del mdb.models['Model-1'].parts['moduleFrame'].features['Partition cell-1']
mdb.models['Model-1'].parts['moduleFrame'].PartitionCellByExtendFace(cells=
    mdb.models['Model-1'].parts['moduleFrame'].cells.getSequenceFromMask((
    '[#3 ]', ), ), extendFace=
    mdb.models['Model-1'].parts['moduleFrame'].faces[2])
mdb.models['Model-1'].parts['moduleFrame'].PartitionCellByExtendFace(cells=
    mdb.models['Model-1'].parts['moduleFrame'].cells.getSequenceFromMask((
    '[#9 ]', ), ), extendFace=
    mdb.models['Model-1'].parts['moduleFrame'].faces[8])
mdb.models['Model-1'].parts['moduleFrame'].PartitionCellByExtendFace(cells=
    mdb.models['Model-1'].parts['moduleFrame'].cells.getSequenceFromMask((
    '[#22 ]', ), ), extendFace=
    mdb.models['Model-1'].parts['moduleFrame'].faces[20])
mdb.models['Model-1'].parts['moduleFrame'].PartitionCellByExtendFace(cells=
    mdb.models['Model-1'].parts['moduleFrame'].cells.getSequenceFromMask((
    '[#84 ]', ), ), extendFace=
    mdb.models['Model-1'].parts['moduleFrame'].faces[20])
mdb.models['Model-1'].parts['purlin'].PartitionCellByExtendFace(cells=
    mdb.models['Model-1'].parts['purlin'].cells.getSequenceFromMask(('[#1 ]', 
    ), ), extendFace=mdb.models['Model-1'].parts['purlin'].faces[3])
del mdb.models['Model-1'].parts['purlin'].features['Partition cell-1']
mdb.models['Model-1'].parts['purlin'].PartitionCellByExtendFace(cells=
    mdb.models['Model-1'].parts['purlin'].cells.getSequenceFromMask(('[#1 ]', 
    ), ), extendFace=mdb.models['Model-1'].parts['purlin'].faces[1])
mdb.models['Model-1'].parts['purlin'].PartitionCellByExtendFace(cells=
    mdb.models['Model-1'].parts['purlin'].cells.getSequenceFromMask(('[#4 ]', 
    ), ), extendFace=mdb.models['Model-1'].parts['purlin'].faces[11])
# Save by xinlo on 2023_07_09-18.28.25; build 2017 2016_09_27-14.54.59 126836
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.models['Model-1'].interactions['bolt2clamp'].setValues(adjustMethod=NONE, 
    bondingSet=None, contactTracking=TWO_CONFIG, enforcement=SURFACE_TO_SURFACE
    , initialClearance=OMIT, sliding=FINITE, thickness=ON)
mdb.models['Model-1'].interactions['bolt2clamp'].swapSurfaces()
mdb.models['Model-1'].rootAssembly.Surface(name='clamp', side1Faces=
    mdb.models['Model-1'].rootAssembly.instances['clamp-1'].faces.getSequenceFromMask(
    ('[#fffcfcee #1ff ]', ), ))
mdb.models['Model-1'].interactionProperties.changeKey(fromName='bolt2clampProp'
    , toName='clamp2boltProp')
mdb.models['Model-1'].ContactProperty('purlin2boltProp')
mdb.models['Model-1'].interactionProperties['purlin2boltProp'].TangentialBehavior(
    dependencies=0, directionality=ISOTROPIC, elasticSlipStiffness=None, 
    formulation=PENALTY, fraction=0.005, maximumElasticSlip=FRACTION, 
    pressureDependency=OFF, shearStressLimit=None, slipRateDependency=OFF, 
    table=((0.2, ), ), temperatureDependency=OFF)
mdb.models['Model-1'].interactionProperties['purlin2boltProp'].NormalBehavior(
    allowSeparation=ON, constraintEnforcementMethod=DEFAULT, 
    pressureOverclosure=HARD)
mdb.models['Model-1'].interactionProperties['clamp2boltProp'].tangentialBehavior.setValues(
    dependencies=0, directionality=ISOTROPIC, elasticSlipStiffness=None, 
    formulation=PENALTY, fraction=0.005, maximumElasticSlip=FRACTION, 
    pressureDependency=OFF, shearStressLimit=None, slipRateDependency=OFF, 
    table=((0.2, ), ), temperatureDependency=OFF)
mdb.models['Model-1'].interactionProperties['clamp2boltProp'].NormalBehavior(
    allowSeparation=ON, constraintEnforcementMethod=DEFAULT, 
    pressureOverclosure=HARD)
mdb.models['Model-1'].ContactProperty('moduleFrame2clampProp')
mdb.models['Model-1'].interactionProperties['moduleFrame2clampProp'].TangentialBehavior(
    dependencies=0, directionality=ISOTROPIC, elasticSlipStiffness=None, 
    formulation=PENALTY, fraction=0.005, maximumElasticSlip=FRACTION, 
    pressureDependency=OFF, shearStressLimit=None, slipRateDependency=OFF, 
    table=((0.2, ), ), temperatureDependency=OFF)
mdb.models['Model-1'].interactionProperties['moduleFrame2clampProp'].tangentialBehavior.setValues(
    dependencies=0, directionality=ISOTROPIC, elasticSlipStiffness=None, 
    formulation=PENALTY, fraction=0.005, maximumElasticSlip=FRACTION, 
    pressureDependency=OFF, shearStressLimit=None, slipRateDependency=OFF, 
    table=((0.2, ), ), temperatureDependency=OFF)
mdb.models['Model-1'].interactionProperties['moduleFrame2clampProp'].NormalBehavior(
    allowSeparation=ON, constraintEnforcementMethod=DEFAULT, 
    pressureOverclosure=HARD)
mdb.models['Model-1'].ContactProperty('purlin2moduleFrameProp')
mdb.models['Model-1'].interactionProperties['purlin2moduleFrameProp'].TangentialBehavior(
    dependencies=0, directionality=ISOTROPIC, elasticSlipStiffness=None, 
    formulation=PENALTY, fraction=0.005, maximumElasticSlip=FRACTION, 
    pressureDependency=OFF, shearStressLimit=None, slipRateDependency=OFF, 
    table=((0.2, ), ), temperatureDependency=OFF)
mdb.models['Model-1'].interactionProperties['purlin2moduleFrameProp'].NormalBehavior(
    allowSeparation=ON, constraintEnforcementMethod=DEFAULT, 
    pressureOverclosure=HARD)
mdb.models['Model-1'].rootAssembly.Surface(name='moduleFrame', side1Faces=
    mdb.models['Model-1'].rootAssembly.instances['moduleFrame-1'].faces.getSequenceFromMask(
    ('[#fffdde7c #ffbbcf9f #3ff ]', ), ))
mdb.models['Model-1'].SurfaceToSurfaceContactStd(adjustMethod=NONE, 
    clearanceRegion=None, createStepName='Initial', datumAxis=None, 
    initialClearance=OMIT, interactionProperty='moduleFrame2clampProp', master=
    mdb.models['Model-1'].rootAssembly.surfaces['moduleFrame'], name=
    'moduleFrame2clamp', slave=
    mdb.models['Model-1'].rootAssembly.surfaces['clamp'], sliding=FINITE, 
    thickness=ON)
mdb.models['Model-1'].rootAssembly.Surface(name='purlin', side1Faces=
    mdb.models['Model-1'].rootAssembly.instances['purlin-1'].faces.getSequenceFromMask(
    ('[#7ffffcfc ]', ), ))
mdb.models['Model-1'].SurfaceToSurfaceContactStd(adjustMethod=NONE, 
    clearanceRegion=None, createStepName='Initial', datumAxis=None, 
    initialClearance=OMIT, interactionProperty='purlin2boltProp', master=
    mdb.models['Model-1'].rootAssembly.surfaces['purlin'], name='purlin2bolt', 
    slave=mdb.models['Model-1'].rootAssembly.surfaces['bolt'], sliding=FINITE, 
    thickness=ON)
mdb.models['Model-1'].SurfaceToSurfaceContactStd(adjustMethod=NONE, 
    clearanceRegion=None, createStepName='Initial', datumAxis=None, 
    initialClearance=OMIT, interactionProperty='purlin2moduleFrameProp', 
    master=mdb.models['Model-1'].rootAssembly.surfaces['purlin'], name=
    'purlin2moduleFrame', slave=
    mdb.models['Model-1'].rootAssembly.surfaces['moduleFrame'], sliding=FINITE, 
    thickness=ON)
# Save by xinlo on 2023_07_09-18.47.40; build 2017 2016_09_27-14.54.59 126836
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].interactions['bolt2clamp'].setValues(adjustMethod=NONE, 
    bondingSet=None, contactTracking=TWO_CONFIG, enforcement=SURFACE_TO_SURFACE
    , initialClearance=OMIT, interactionProperty='clamp2boltProp', sliding=
    FINITE, thickness=ON)
mdb.models['Model-1'].interactions.changeKey(fromName='bolt2clamp', toName=
    'clamp2bolt')
# Save by xinlo on 2023_07_09-18.51.25; build 2017 2016_09_27-14.54.59 126836
# Save by xinlo on 2023_07_09-18.55.24; build 2017 2016_09_27-14.54.59 126836
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].rootAssembly.Surface(name='boltCut', side2Faces=
    mdb.models['Model-1'].rootAssembly.instances['bolt-1'].faces.getSequenceFromMask(
    ('[#1 ]', ), ))
mdb.models['Model-1'].BoltLoad(boltMethod=APPLY_FORCE, createStepName=
    'pretension', datumAxis=mdb.models['Model-1'].rootAssembly.datums[1].axis2, 
    magnitude=4448.22, name='pretension', region=
    mdb.models['Model-1'].rootAssembly.surfaces['boltCut'])
# Save by xinlo on 2023_07_09-19.10.23; build 2017 2016_09_27-14.54.59 126836
# Save by xinlo on 2023_07_09-19.12.43; build 2017 2016_09_27-14.54.59 126836
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].rootAssembly.DatumPointByOffset(point=
    mdb.models['Model-1'].rootAssembly.instances['purlin-1'].InterestingPoint(
    mdb.models['Model-1'].rootAssembly.instances['purlin-1'].edges[17], MIDDLE)
    , vector=(0.0, 101.6, 0.0))
del mdb.models['Model-1'].rootAssembly.features['Datum pt-1']
mdb.models['Model-1'].rootAssembly.DatumPointByOffset(point=
    mdb.models['Model-1'].rootAssembly.instances['purlin-1'].InterestingPoint(
    mdb.models['Model-1'].rootAssembly.instances['purlin-1'].edges[17], MIDDLE)
    , vector=(0.0, 101.6, 0.0))
mdb.models['Model-1'].rootAssembly.DatumPointByOffset(point=
    mdb.models['Model-1'].rootAssembly.instances['purlin-1'].InterestingPoint(
    mdb.models['Model-1'].rootAssembly.instances['purlin-1'].edges[11], MIDDLE)
    , vector=(0.0, 101.6, 0.0))
mdb.models['Model-1'].rootAssembly.ReferencePoint(point=
    mdb.models['Model-1'].rootAssembly.datums[17])
mdb.models['Model-1'].rootAssembly.ReferencePoint(point=
    mdb.models['Model-1'].rootAssembly.datums[18])
mdb.models['Model-1'].rootAssembly.ReferencePoint(point=
    mdb.models['Model-1'].rootAssembly.instances['moduleFrame-1'].vertices[16])
mdb.models['Model-1'].rootAssembly.ReferencePoint(point=
    mdb.models['Model-1'].rootAssembly.instances['moduleFrame-1'].vertices[10])
mdb.models['Model-1'].rootAssembly.ReferencePoint(point=
    mdb.models['Model-1'].rootAssembly.instances['moduleFrame-1'].vertices[48])
mdb.models['Model-1'].rootAssembly.ReferencePoint(point=
    mdb.models['Model-1'].rootAssembly.instances['moduleFrame-1'].vertices[54])
mdb.models['Model-1'].rootAssembly.Surface(name='purlinEnd1', side1Faces=
    mdb.models['Model-1'].rootAssembly.instances['purlin-1'].faces.getSequenceFromMask(
    ('[#400018c0 ]', ), ))
mdb.models['Model-1'].Coupling(controlPoint=Region(referencePoints=(
    mdb.models['Model-1'].rootAssembly.referencePoints[19], )), couplingType=
    KINEMATIC, influenceRadius=WHOLE_SURFACE, localCsys=None, name=
    'purlinCoupling1', surface=
    mdb.models['Model-1'].rootAssembly.surfaces['purlinEnd1'], u1=ON, u2=ON, 
    u3=ON, ur1=ON, ur2=ON, ur3=ON)
mdb.models['Model-1'].rootAssembly.Surface(name='purlinEnd2', side1Faces=
    mdb.models['Model-1'].rootAssembly.instances['purlin-1'].faces.getSequenceFromMask(
    ('[#20006018 ]', ), ))
mdb.models['Model-1'].Coupling(controlPoint=Region(referencePoints=(
    mdb.models['Model-1'].rootAssembly.referencePoints[20], )), couplingType=
    KINEMATIC, influenceRadius=WHOLE_SURFACE, localCsys=None, name=
    'purlinCoupling2', surface=
    mdb.models['Model-1'].rootAssembly.surfaces['purlinEnd2'], u1=ON, u2=ON, 
    u3=ON, ur1=ON, ur2=ON, ur3=ON)
mdb.models['Model-1'].rootAssembly.Surface(name='mfEnd3', side1Faces=
    mdb.models['Model-1'].rootAssembly.instances['moduleFrame-1'].faces.getSequenceFromMask(
    ('[#91060 #8 ]', ), ))
mdb.models['Model-1'].Coupling(controlPoint=Region(referencePoints=(
    mdb.models['Model-1'].rootAssembly.referencePoints[21], )), couplingType=
    KINEMATIC, influenceRadius=WHOLE_SURFACE, localCsys=None, name=
    'mfCoupling3', surface=
    mdb.models['Model-1'].rootAssembly.surfaces['mfEnd3'], u1=ON, u2=ON, u3=ON, 
    ur1=ON, ur2=ON, ur3=ON)
mdb.models['Model-1'].constraints.changeKey(fromName='mfCoupling3', toName=
    'mfCoupling1')
mdb.models['Model-1'].rootAssembly.surfaces.changeKey(fromName='mfEnd3', 
    toName='mfEnd1')
mdb.models['Model-1'].constraints['mfCoupling1'].setValues(surface=
    mdb.models['Model-1'].rootAssembly.surfaces['mfEnd1'])
mdb.models['Model-1'].rootAssembly.Surface(name='mfEnd2', side1Faces=
    mdb.models['Model-1'].rootAssembly.instances['moduleFrame-1'].faces.getSequenceFromMask(
    ('[#44418 #10 ]', ), ))
mdb.models['Model-1'].Coupling(controlPoint=Region(referencePoints=(
    mdb.models['Model-1'].rootAssembly.referencePoints[22], )), couplingType=
    KINEMATIC, influenceRadius=WHOLE_SURFACE, localCsys=None, name=
    'mfCoupling2', surface=
    mdb.models['Model-1'].rootAssembly.surfaces['mfEnd2'], u1=ON, u2=ON, u3=ON, 
    ur1=ON, ur2=ON, ur3=ON)
mdb.models['Model-1'].rootAssembly.Surface(name='mfCoupling3', side1Faces=
    mdb.models['Model-1'].rootAssembly.instances['moduleFrame-1'].faces.getSequenceFromMask(
    ('[#0 #910300 #100 ]', ), ))
mdb.models['Model-1'].Coupling(controlPoint=Region(referencePoints=(
    mdb.models['Model-1'].rootAssembly.referencePoints[23], )), couplingType=
    KINEMATIC, influenceRadius=WHOLE_SURFACE, localCsys=None, name=
    'mfCoupling3', surface=
    mdb.models['Model-1'].rootAssembly.surfaces['mfCoupling3'], u1=ON, u2=ON, 
    u3=ON, ur1=ON, ur2=ON, ur3=ON)
mdb.models['Model-1'].rootAssembly.Surface(name='mfEnd4', side1Faces=
    mdb.models['Model-1'].rootAssembly.instances['moduleFrame-1'].faces.getSequenceFromMask(
    ('[#0 #1088c00 #200 ]', ), ))
mdb.models['Model-1'].Coupling(controlPoint=Region(referencePoints=(
    mdb.models['Model-1'].rootAssembly.referencePoints[24], )), couplingType=
    KINEMATIC, influenceRadius=WHOLE_SURFACE, localCsys=None, name=
    'mfCoupling4', surface=
    mdb.models['Model-1'].rootAssembly.surfaces['mfEnd4'], u1=ON, u2=ON, u3=ON, 
    ur1=ON, ur2=ON, ur3=ON)
mdb.models['Model-1'].rootAssembly.surfaces.changeKey(fromName='mfCoupling3', 
    toName='mfEnd3')
mdb.models['Model-1'].constraints['mfCoupling3'].setValues(surface=
    mdb.models['Model-1'].rootAssembly.surfaces['mfEnd3'])
# Save by xinlo on 2023_07_09-23.42.42; build 2017 2016_09_27-14.54.59 126836
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].EncastreBC(createStepName='Initial', localCsys=None, 
    name='purlinEnd1', region=Region(referencePoints=(
    mdb.models['Model-1'].rootAssembly.referencePoints[19], )))
mdb.models['Model-1'].boundaryConditions['purlinEnd1'].setValues(region=Region(
    referencePoints=(mdb.models['Model-1'].rootAssembly.referencePoints[19], 
    mdb.models['Model-1'].rootAssembly.referencePoints[20], )))
mdb.models['Model-1'].boundaryConditions['purlinEnd1'].setValues(region=Region(
    referencePoints=(mdb.models['Model-1'].rootAssembly.referencePoints[19], 
    )))
mdb.models['Model-1'].EncastreBC(createStepName='Initial', localCsys=None, 
    name='purlinEnd2', region=Region(referencePoints=(
    mdb.models['Model-1'].rootAssembly.referencePoints[20], )))
mdb.models['Model-1'].DisplacementBC(amplitude=UNSET, createStepName=
    'cyclicLoading', distributionType=UNIFORM, fieldName='', fixed=OFF, 
    localCsys=None, name='mfEnd1', region=Region(referencePoints=(
    mdb.models['Model-1'].rootAssembly.referencePoints[21], )), u1=UNSET, u2=
    5.0, u3=UNSET, ur1=UNSET, ur2=UNSET, ur3=UNSET)
mdb.models['Model-1'].DisplacementBC(amplitude=UNSET, createStepName=
    'cyclicLoading', distributionType=UNIFORM, fieldName='', fixed=OFF, 
    localCsys=None, name='mfEnd2', region=Region(referencePoints=(
    mdb.models['Model-1'].rootAssembly.referencePoints[23], )), u1=UNSET, u2=
    -5.0, u3=UNSET, ur1=UNSET, ur2=UNSET, ur3=UNSET)
mdb.models['Model-1'].EncastreBC(createStepName='Initial', localCsys=None, 
    name='mfEnd3', region=Region(referencePoints=(
    mdb.models['Model-1'].rootAssembly.referencePoints[22], )))
mdb.models['Model-1'].EncastreBC(createStepName='Initial', localCsys=None, 
    name='mfEnd4', region=Region(referencePoints=(
    mdb.models['Model-1'].rootAssembly.referencePoints[24], )))
# Save by xinlo on 2023_07_09-23.51.03; build 2017 2016_09_27-14.54.59 126836
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].parts['bolt'].setElementType(elemTypes=(ElemType(
    elemCode=C3D8R, elemLibrary=STANDARD, secondOrderAccuracy=OFF, 
    kinematicSplit=AVERAGE_STRAIN, hourglassControl=DEFAULT, 
    distortionControl=DEFAULT), ElemType(elemCode=C3D6, elemLibrary=STANDARD), 
    ElemType(elemCode=C3D4, elemLibrary=STANDARD)), regions=(
    mdb.models['Model-1'].parts['bolt'].cells.getSequenceFromMask(('[#7 ]', ), 
    ), ))
mdb.models['Model-1'].parts['bolt'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=1.6)
mdb.models['Model-1'].parts['bolt'].generateMesh()
mdb.models['Model-1'].parts['clamp'].setElementType(elemTypes=(ElemType(
    elemCode=C3D8R, elemLibrary=STANDARD, secondOrderAccuracy=OFF, 
    kinematicSplit=AVERAGE_STRAIN, hourglassControl=DEFAULT, 
    distortionControl=DEFAULT), ElemType(elemCode=C3D6, elemLibrary=STANDARD), 
    ElemType(elemCode=C3D4, elemLibrary=STANDARD)), regions=(
    mdb.models['Model-1'].parts['clamp'].cells.getSequenceFromMask(('[#7f ]', 
    ), ), ))
mdb.models['Model-1'].parts['clamp'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=3.0)
mdb.models['Model-1'].parts['clamp'].generateMesh()
mdb.models['Model-1'].parts['moduleFrame'].setElementType(elemTypes=(ElemType(
    elemCode=C3D8R, elemLibrary=STANDARD, secondOrderAccuracy=OFF, 
    kinematicSplit=AVERAGE_STRAIN, hourglassControl=DEFAULT, 
    distortionControl=DEFAULT), ElemType(elemCode=C3D6, elemLibrary=STANDARD), 
    ElemType(elemCode=C3D4, elemLibrary=STANDARD)), regions=(
    mdb.models['Model-1'].parts['moduleFrame'].cells.getSequenceFromMask((
    '[#fff ]', ), ), ))
mdb.models['Model-1'].parts['moduleFrame'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=4.0)
mdb.models['Model-1'].parts['moduleFrame'].generateMesh()
mdb.models['Model-1'].parts['purlin'].setElementType(elemTypes=(ElemType(
    elemCode=C3D8R, elemLibrary=STANDARD, secondOrderAccuracy=OFF, 
    kinematicSplit=AVERAGE_STRAIN, hourglassControl=DEFAULT, 
    distortionControl=DEFAULT), ElemType(elemCode=C3D6, elemLibrary=STANDARD), 
    ElemType(elemCode=C3D4, elemLibrary=STANDARD)), regions=(
    mdb.models['Model-1'].parts['purlin'].cells.getSequenceFromMask(('[#1f ]', 
    ), ), ))
mdb.models['Model-1'].parts['purlin'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=10.0)
mdb.models['Model-1'].parts['purlin'].generateMesh()
mdb.models['Model-1'].parts['bolt'].deleteMesh()
mdb.models['Model-1'].parts['bolt'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=1.0)
mdb.models['Model-1'].parts['bolt'].generateMesh()
mdb.models['Model-1'].parts['clamp'].deleteMesh(regions=
    mdb.models['Model-1'].parts['clamp'].cells.getSequenceFromMask(('[#40 ]', 
    ), ))
mdb.models['Model-1'].parts['clamp'].seedEdgeByNumber(constraint=FINER, edges=
    mdb.models['Model-1'].parts['clamp'].edges.getSequenceFromMask((
    '[#200000 ]', ), ), number=4)
mdb.models['Model-1'].parts['clamp'].deleteMesh()
mdb.models['Model-1'].parts['clamp'].seedEdgeByNumber(constraint=FINER, edges=
    mdb.models['Model-1'].parts['clamp'].edges.getSequenceFromMask((
    '[#200020 #940900 ]', ), ), number=4)
mdb.models['Model-1'].parts['clamp'].generateMesh()
mdb.models['Model-1'].parts['clamp'].deleteMesh()
mdb.models['Model-1'].parts['clamp'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=1.0)
mdb.models['Model-1'].parts['clamp'].generateMesh()
mdb.models['Model-1'].parts['moduleFrame'].deleteMesh()
mdb.models['Model-1'].parts['moduleFrame'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=1.0)
mdb.models['Model-1'].parts['moduleFrame'].generateMesh()
mdb.models['Model-1'].parts['moduleFrame'].deleteMesh()
mdb.models['Model-1'].parts['moduleFrame'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=0.5)
mdb.models['Model-1'].parts['moduleFrame'].generateMesh()
mdb.models['Model-1'].parts['purlin'].deleteMesh()
mdb.models['Model-1'].parts['purlin'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=1.0)
mdb.models['Model-1'].parts['purlin'].generateMesh()
mdb.models['Model-1'].parts['purlin'].deleteMesh()
mdb.models['Model-1'].parts['purlin'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=0.5)
mdb.models['Model-1'].parts['purlin'].generateMesh()
mdb.models['Model-1'].rootAssembly.regenerate()
# Save by xinlo on 2023_07_10-00.03.50; build 2017 2016_09_27-14.54.59 126836
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].boundaryConditions['mfEnd1'].setValues(u2=1.0)
mdb.models['Model-1'].boundaryConditions['mfEnd2'].setValues(u2=-1.0)
# Save by xinlo on 2023_07_10-00.18.56; build 2017 2016_09_27-14.54.59 126836
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.Job(atTime=None, contactPrint=OFF, description='', echoPrint=OFF, 
    explicitPrecision=SINGLE, getMemoryFromAnalysis=True, historyPrint=OFF, 
    memory=90, memoryUnits=PERCENTAGE, model='Model-1', modelPrint=OFF, 
    multiprocessingMode=DEFAULT, name='Job20230710topDownClamp', 
    nodalOutputPrecision=SINGLE, numCpus=4, numDomains=4, numGPUs=0, queue=None
    , resultsFormat=ODB, scratch='', type=ANALYSIS, userSubroutine='', 
    waitHours=0, waitMinutes=0)
# Save by xinlo on 2023_07_10-00.21.47; build 2017 2016_09_27-14.54.59 126836
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['Job20230710topDownClamp'].submit(consistencyChecking=OFF)
#* Academic Teaching license is restricted to 250000 nodes.
#* Academic Teaching license is restricted to 250000 nodes.
#* Academic Teaching license is restricted to 250000 nodes.
mdb.jobs['Job20230710topDownClamp'].submit(consistencyChecking=OFF)
#* Academic Teaching license is restricted to 250000 nodes.
#* Academic Teaching license is restricted to 250000 nodes.
#* Academic Teaching license is restricted to 250000 nodes.
mdb.models['Model-1'].parts['moduleFrame'].deleteMesh()
mdb.models['Model-1'].parts['moduleFrame'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=1.0)
mdb.models['Model-1'].parts['moduleFrame'].generateMesh()
mdb.models['Model-1'].parts['moduleFrame'].deleteMesh()
mdb.models['Model-1'].parts['moduleFrame'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=0.8)
mdb.models['Model-1'].parts['moduleFrame'].generateMesh()
mdb.models['Model-1'].parts['moduleFrame'].deleteMesh()
mdb.models['Model-1'].parts['moduleFrame'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=0.7)
mdb.models['Model-1'].parts['moduleFrame'].generateMesh()
mdb.models['Model-1'].parts['moduleFrame'].deleteMesh()
mdb.models['Model-1'].parts['moduleFrame'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=0.6)
mdb.models['Model-1'].parts['moduleFrame'].generateMesh()
mdb.models['Model-1'].parts['purlin'].deleteMesh()
mdb.models['Model-1'].parts['purlin'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=0.8)
mdb.models['Model-1'].parts['purlin'].generateMesh()
mdb.models['Model-1'].parts['purlin'].deleteMesh()
mdb.models['Model-1'].parts['purlin'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=0.9)
mdb.models['Model-1'].parts['purlin'].generateMesh()
mdb.models['Model-1'].parts['clamp'].deleteMesh(regions=
    mdb.models['Model-1'].parts['clamp'].cells.getSequenceFromMask(('[#7f ]', 
    ), ))
mdb.models['Model-1'].parts['clamp'].deleteSeeds(regions=
    mdb.models['Model-1'].parts['clamp'].edges.getSequenceFromMask((
    '[#ffffffff:2 #3ff ]', ), ))
mdb.models['Model-1'].parts['clamp'].generateMesh()
mdb.models['Model-1'].parts['clamp'].deleteMesh()
mdb.models['Model-1'].parts['clamp'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=1.5)
mdb.models['Model-1'].parts['clamp'].generateMesh()
mdb.models['Model-1'].parts['clamp'].deleteMesh()
mdb.models['Model-1'].parts['clamp'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=1.2)
mdb.models['Model-1'].parts['clamp'].generateMesh()
mdb.models['Model-1'].parts['clamp'].deleteMesh()
mdb.models['Model-1'].parts['clamp'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=1.1)
mdb.models['Model-1'].parts['clamp'].generateMesh()
mdb.models['Model-1'].rootAssembly.regenerate()
# Save by xinlo on 2023_07_10-00.37.21; build 2017 2016_09_27-14.54.59 126836
# Save by xinlo on 2023_07_10-00.37.33; build 2017 2016_09_27-14.54.59 126836
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['Job20230710topDownClamp'].submit(consistencyChecking=OFF)
#* Academic Teaching license is restricted to 250000 nodes.
#* Academic Teaching license is restricted to 250000 nodes.
#* Academic Teaching license is restricted to 250000 nodes.
mdb.models['Model-1'].parts['moduleFrame'].deleteMesh()
mdb.models['Model-1'].parts['moduleFrame'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=0.7)
mdb.models['Model-1'].parts['moduleFrame'].generateMesh()
mdb.models['Model-1'].parts['purlin'].deleteMesh()
mdb.models['Model-1'].parts['purlin'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=1.0)
mdb.models['Model-1'].parts['purlin'].generateMesh()
mdb.models['Model-1'].parts['purlin'].deleteMesh()
mdb.models['Model-1'].parts['purlin'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=0.95)
mdb.models['Model-1'].parts['purlin'].generateMesh()
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.models['Model-1'].parts['purlin'].deleteMesh()
mdb.models['Model-1'].parts['purlin'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=1.0)
mdb.models['Model-1'].parts['purlin'].generateMesh()
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.models['Model-1'].parts['moduleFrame'].deleteMesh()
mdb.models['Model-1'].parts['moduleFrame'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=0.8)
mdb.models['Model-1'].parts['moduleFrame'].generateMesh()
mdb.models['Model-1'].rootAssembly.regenerate()
# Save by xinlo on 2023_07_10-00.50.13; build 2017 2016_09_27-14.54.59 126836
# Save by xinlo on 2023_07_10-00.50.38; build 2017 2016_09_27-14.54.59 126836
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['Job20230710topDownClamp'].submit(consistencyChecking=OFF)
mdb.jobs['Job20230710topDownClamp']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-A24BAF5', 'handle': 0, 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'WHENEVER A TRANSLATION (ROTATION) DOF AT A NODE IS CONSTRAINED BY A KINEMATIC COUPLING DEFINITION THE TRANSLATION (ROTATION) DOFS FOR THAT NODE CANNOT BE INCLUDED IN ANY OTHER CONSTRAINT INCLUDING MPCS, RIGID BODIES, ETC.', 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'MPCS (EXTERNAL or INTERNAL, including those generated from rigid body definitions), KINEMATIC COUPLINGS, AND/OR EQUATIONS WILL ACTIVATE ADDITIONAL DEGREES OF FREEDOM', 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(ODB_FILE, {
    'phase': BATCHPRE_PHASE, 'file': 'C:\\temp\\Job20230710topDownClamp.odb', 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(COMPLETED, {
    'phase': BATCHPRE_PHASE, 'message': 'Analysis phase complete', 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-A24BAF5', 'handle': 39316, 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(STEP, {'phase': STANDARD_PHASE, 
    'stepId': 1, 'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 0, 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(MEMORY_ESTIMATE, {
    'phase': STANDARD_PHASE, 'jobName': 'Job20230710topDownClamp', 
    'memory': 4802.0})
mdb.jobs['Job20230710topDownClamp']._Message(PHYSICAL_MEMORY, {
    'phase': STANDARD_PHASE, 'physical_memory': 32620.0, 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(MINIMUM_MEMORY, {
    'minimum_memory': 751.0, 'phase': STANDARD_PHASE, 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(ERROR, {'phase': STANDARD_PHASE, 
    'message': 'Process terminated by external request (SIGTERM or SIGINT received).', 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(INTERRUPTED, {
    'phase': STANDARD_PHASE, 
    'message': 'Analysis interrupted by external signal', 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(ERROR, {
    'message': 'Abaqus/Standard Analysis exited with an error - Please see the  message file for possible error messages if the file exists.', 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(JOB_ABORTED, {
    'message': 'Abaqus/Standard Analysis exited with an error - Please see the  message file for possible error messages if the file exists.', 
    'jobName': 'Job20230710topDownClamp'})
mdb.models['Model-1'].steps['pretension'].setValues(nlgeom=OFF)
mdb.models['Model-1'].steps['cyclicLoading'].setValues(nlgeom=OFF)
mdb.models['Model-1'].steps['pretension'].setValues(maxNumInc=1, noStop=OFF, 
    timeIncrementationMethod=FIXED)
mdb.models['Model-1'].steps['cyclicLoading'].setValues(maxNumInc=1, noStop=OFF, 
    timeIncrementationMethod=FIXED)
# Save by xinlo on 2023_07_10-00.57.29; build 2017 2016_09_27-14.54.59 126836
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['Job20230710topDownClamp'].submit(consistencyChecking=OFF)
mdb.jobs['Job20230710topDownClamp']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-A24BAF5', 'handle': 0, 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'WHENEVER A TRANSLATION (ROTATION) DOF AT A NODE IS CONSTRAINED BY A KINEMATIC COUPLING DEFINITION THE TRANSLATION (ROTATION) DOFS FOR THAT NODE CANNOT BE INCLUDED IN ANY OTHER CONSTRAINT INCLUDING MPCS, RIGID BODIES, ETC.', 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'MPCS (EXTERNAL or INTERNAL, including those generated from rigid body definitions), KINEMATIC COUPLINGS, AND/OR EQUATIONS WILL ACTIVATE ADDITIONAL DEGREES OF FREEDOM', 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(ODB_FILE, {
    'phase': BATCHPRE_PHASE, 'file': 'C:\\temp\\Job20230710topDownClamp.odb', 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(COMPLETED, {
    'phase': BATCHPRE_PHASE, 'message': 'Analysis phase complete', 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-A24BAF5', 'handle': 10600, 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(STEP, {'phase': STANDARD_PHASE, 
    'stepId': 1, 'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 0, 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(MEMORY_ESTIMATE, {
    'phase': STANDARD_PHASE, 'jobName': 'Job20230710topDownClamp', 
    'memory': 4802.0})
mdb.jobs['Job20230710topDownClamp']._Message(PHYSICAL_MEMORY, {
    'phase': STANDARD_PHASE, 'physical_memory': 32620.0, 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(MINIMUM_MEMORY, {
    'minimum_memory': 751.0, 'phase': STANDARD_PHASE, 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(ERROR, {'phase': STANDARD_PHASE, 
    'message': 'Process terminated by external request (SIGTERM or SIGINT received).', 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(INTERRUPTED, {
    'phase': STANDARD_PHASE, 
    'message': 'Analysis interrupted by external signal', 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(ERROR, {
    'message': 'Abaqus/Standard Analysis exited with an error - Please see the  message file for possible error messages if the file exists.', 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(JOB_ABORTED, {
    'message': 'Abaqus/Standard Analysis exited with an error - Please see the  message file for possible error messages if the file exists.', 
    'jobName': 'Job20230710topDownClamp'})
mdb.models['Model-1'].steps['pretension'].setValues(maxNumInc=100, 
    timeIncrementationMethod=AUTOMATIC)
mdb.models['Model-1'].steps['cyclicLoading'].setValues(maxNumInc=100, 
    timeIncrementationMethod=AUTOMATIC)
# Save by xinlo on 2023_07_10-01.03.37; build 2017 2016_09_27-14.54.59 126836
# Save by xinlo on 2023_07_10-01.03.48; build 2017 2016_09_27-14.54.59 126836
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].interactionProperties['moduleFrame2clampProp'].tangentialBehavior.setValues(
    dependencies=0, directionality=ISOTROPIC, elasticSlipStiffness=None, 
    formulation=PENALTY, fraction=0.005, maximumElasticSlip=FRACTION, 
    pressureDependency=OFF, shearStressLimit=None, slipRateDependency=OFF, 
    table=((0.3, ), ), temperatureDependency=OFF)
mdb.models['Model-1'].interactionProperties['clamp2boltProp'].tangentialBehavior.setValues(
    dependencies=0, directionality=ISOTROPIC, elasticSlipStiffness=None, 
    formulation=PENALTY, fraction=0.005, maximumElasticSlip=FRACTION, 
    pressureDependency=OFF, shearStressLimit=None, slipRateDependency=OFF, 
    table=((0.18, ), ), temperatureDependency=OFF)
mdb.models['Model-1'].interactionProperties['purlin2boltProp'].tangentialBehavior.setValues(
    dependencies=0, directionality=ISOTROPIC, elasticSlipStiffness=None, 
    formulation=PENALTY, fraction=0.005, maximumElasticSlip=FRACTION, 
    pressureDependency=OFF, shearStressLimit=None, slipRateDependency=OFF, 
    table=((0.18, ), ), temperatureDependency=OFF)
mdb.models['Model-1'].interactionProperties['purlin2moduleFrameProp'].tangentialBehavior.setValues(
    dependencies=0, directionality=ISOTROPIC, elasticSlipStiffness=None, 
    formulation=PENALTY, fraction=0.005, maximumElasticSlip=FRACTION, 
    pressureDependency=OFF, shearStressLimit=None, slipRateDependency=OFF, 
    table=((0.18, ), ), temperatureDependency=OFF)
mdb.models['Model-1'].parts['moduleFrame'].features['Datum plane-1'].setValues(
    offset=13.7)
mdb.models['Model-1'].parts['moduleFrame'].regenerate()
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.models['Model-1'].rootAssembly.translate(instanceList=('moduleFrame-1', ), 
    vector=(1.0, 0.0, 0.0))
mdb.models['Model-1'].loads['pretension'].setValues(magnitude=11120.55)
mdb.models['Model-1'].parts['moduleFrame'].generateMesh()
mdb.models['Model-1'].rootAssembly.regenerate()
# Save by xinlo on 2023_07_19-18.08.13; build 2017 2016_09_27-14.54.59 126836
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].boundaryConditions['mfEnd2'].move('cyclicLoading', 
    'pretension')
mdb.models['Model-1'].boundaryConditions['mfEnd2'].move('pretension', 
    'Initial')
#* ValueError: Non-zero boundary condition in initial step.
mdb.models['Model-1'].boundaryConditions['mfEnd2'].setValues(u1=0.0, u2=0.0, 
    u3=0.0, ur1=0.0, ur2=0.0, ur3=0.0)
mdb.models['Model-1'].boundaryConditions['mfEnd2'].move('pretension', 
    'Initial')
mdb.models['Model-1'].boundaryConditions['mfEnd3'].move('Initial', 
    'pretension')
mdb.models['Model-1'].boundaryConditions['mfEnd3'].move('pretension', 
    'cyclicLoading')
del mdb.models['Model-1'].boundaryConditions['mfEnd3']
mdb.models['Model-1'].boundaryConditions.changeKey(fromName='mfEnd1', toName=
    'mfEnd3')
mdb.models['Model-1'].boundaryConditions.changeKey(fromName='mfEnd2', toName=
    'mfEnd5')
mdb.models['Model-1'].boundaryConditions.changeKey(fromName='mfEnd4', toName=
    'mfEnd6')
mdb.models['Model-1'].DisplacementBC(amplitude=UNSET, createStepName=
    'cyclicLoading', distributionType=UNIFORM, fieldName='', fixed=OFF, 
    localCsys=None, name='mfEnd4', region=Region(referencePoints=(
    mdb.models['Model-1'].rootAssembly.referencePoints[22], )), u1=0.0, u2=1.0, 
    u3=0.0, ur1=0.0, ur2=0.0, ur3=0.0)
mdb.models['Model-1'].boundaryConditions['mfEnd3'].setValues(u1=0.0, u3=0.0, 
    ur1=0.0, ur2=0.0, ur3=0.0)
mdb.models['Model-1'].boundaryConditions['mfEnd3'].move('cyclicLoading', 
    'pretension')
mdb.models['Model-1'].boundaryConditions['mfEnd3'].move('pretension', 
    'Initial')
#* ValueError: Non-zero boundary condition in initial step.
mdb.models['Model-1'].boundaryConditions['mfEnd3'].setValues(u2=0.0)
mdb.models['Model-1'].boundaryConditions['mfEnd3'].move('pretension', 
    'Initial')
mdb.models['Model-1'].boundaryConditions['mfEnd3'].setValuesInStep(stepName=
    'cyclicLoading', u2=1.0)
mdb.models['Model-1'].boundaryConditions['mfEnd4'].setValues(u2=0.0)
mdb.models['Model-1'].boundaryConditions['mfEnd4'].move('cyclicLoading', 
    'pretension')
mdb.models['Model-1'].boundaryConditions['mfEnd4'].move('pretension', 
    'Initial')
mdb.models['Model-1'].boundaryConditions['mfEnd4'].setValuesInStep(stepName=
    'cyclicLoading', u2=1.0)
del mdb.models['Model-1'].boundaryConditions['mfEnd6']
mdb.models['Model-1'].DisplacementBC(amplitude=UNSET, createStepName='Initial', 
    distributionType=UNIFORM, fieldName='', localCsys=None, name='mfEnd6', 
    region=Region(referencePoints=(
    mdb.models['Model-1'].rootAssembly.referencePoints[24], )), u1=SET, u2=SET, 
    u3=SET, ur1=SET, ur2=SET, ur3=SET)
# Save by xinlo on 2023_07_19-18.22.50; build 2017 2016_09_27-14.54.59 126836
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].steps['pretension'].setValues(initialInc=0.1)
mdb.models['Model-1'].steps['cyclicLoading'].setValues(initialInc=0.1, 
    maxNumInc=1000)
# Save by xinlo on 2023_07_19-18.24.44; build 2017 2016_09_27-14.54.59 126836
# Save by xinlo on 2023_07_19-18.25.04; build 2017 2016_09_27-14.54.59 126836
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['Job20230710topDownClamp'].submit(consistencyChecking=OFF)
mdb.jobs['Job20230710topDownClamp']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-A24BAF5', 'handle': 0, 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'WHENEVER A TRANSLATION (ROTATION) DOF AT A NODE IS CONSTRAINED BY A KINEMATIC COUPLING DEFINITION THE TRANSLATION (ROTATION) DOFS FOR THAT NODE CANNOT BE INCLUDED IN ANY OTHER CONSTRAINT INCLUDING MPCS, RIGID BODIES, ETC.', 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'MPCS (EXTERNAL or INTERNAL, including those generated from rigid body definitions), KINEMATIC COUPLINGS, AND/OR EQUATIONS WILL ACTIVATE ADDITIONAL DEGREES OF FREEDOM', 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(ODB_FILE, {
    'phase': BATCHPRE_PHASE, 'file': 'C:\\temp\\Job20230710topDownClamp.odb', 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(COMPLETED, {
    'phase': BATCHPRE_PHASE, 'message': 'Analysis phase complete', 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-A24BAF5', 'handle': 27456, 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(STEP, {'phase': STANDARD_PHASE, 
    'stepId': 1, 'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 0, 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(MEMORY_ESTIMATE, {
    'phase': STANDARD_PHASE, 'jobName': 'Job20230710topDownClamp', 
    'memory': 7975.0})
mdb.jobs['Job20230710topDownClamp']._Message(PHYSICAL_MEMORY, {
    'phase': STANDARD_PHASE, 'physical_memory': 32620.0, 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(MINIMUM_MEMORY, {
    'minimum_memory': 844.0, 'phase': STANDARD_PHASE, 
    'jobName': 'Job20230710topDownClamp'})
# Save by xinlo on 2023_07_19-18.30.10; build 2017 2016_09_27-14.54.59 126836
# Save by xinlo on 2023_07_19-18.30.25; build 2017 2016_09_27-14.54.59 126836
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['Job20230710topDownClamp']._Message(STATUS, {'totalTime': 0.0, 
    'attempts': ' 1U', 'timeIncrement': 0.1, 'increment': 1, 'stepTime': 0.0, 
    'step': 1, 'jobName': 'Job20230710topDownClamp', 'severe': 14, 
    'iterations': 14, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job20230710topDownClamp']._Message(STATUS, {'totalTime': 0.025, 
    'attempts': 2, 'timeIncrement': 0.025, 'increment': 1, 'stepTime': 0.025, 
    'step': 1, 'jobName': 'Job20230710topDownClamp', 'severe': 23, 
    'iterations': 23, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job20230710topDownClamp']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 1, 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(STATUS, {'totalTime': 0.05, 
    'attempts': 1, 'timeIncrement': 0.025, 'increment': 2, 'stepTime': 0.05, 
    'step': 1, 'jobName': 'Job20230710topDownClamp', 'severe': 13, 
    'iterations': 13, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job20230710topDownClamp']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 2, 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(STATUS, {'totalTime': 0.0875, 
    'attempts': 1, 'timeIncrement': 0.0375, 'increment': 3, 'stepTime': 0.0875, 
    'step': 1, 'jobName': 'Job20230710topDownClamp', 'severe': 11, 
    'iterations': 12, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230710topDownClamp']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 3, 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(STATUS, {'totalTime': 0.14375, 
    'attempts': 1, 'timeIncrement': 0.05625, 'increment': 4, 
    'stepTime': 0.14375, 'step': 1, 'jobName': 'Job20230710topDownClamp', 
    'severe': 11, 'iterations': 12, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230710topDownClamp']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 4, 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(STATUS, {'totalTime': 0.228125, 
    'attempts': 1, 'timeIncrement': 0.084375, 'increment': 5, 
    'stepTime': 0.228125, 'step': 1, 'jobName': 'Job20230710topDownClamp', 
    'severe': 3, 'iterations': 4, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230710topDownClamp']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 5, 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(STATUS, {'totalTime': 0.3546875, 
    'attempts': 1, 'timeIncrement': 0.1265625, 'increment': 6, 
    'stepTime': 0.3546875, 'step': 1, 'jobName': 'Job20230710topDownClamp', 
    'severe': 3, 'iterations': 4, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230710topDownClamp']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 6, 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(STATUS, {'totalTime': 0.54453125, 
    'attempts': 1, 'timeIncrement': 0.18984375, 'increment': 7, 
    'stepTime': 0.54453125, 'step': 1, 'jobName': 'Job20230710topDownClamp', 
    'severe': 2, 'iterations': 3, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230710topDownClamp']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 7, 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(STATUS, {'totalTime': 0.829296875, 
    'attempts': 1, 'timeIncrement': 0.284765625, 'increment': 8, 
    'stepTime': 0.829296875, 'step': 1, 'jobName': 'Job20230710topDownClamp', 
    'severe': 1, 'iterations': 3, 'phase': STANDARD_PHASE, 'equilibrium': 2})
mdb.jobs['Job20230710topDownClamp']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 8, 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 9, 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(STATUS, {'totalTime': 1.0, 
    'attempts': 1, 'timeIncrement': 0.170703125, 'increment': 9, 
    'stepTime': 1.0, 'step': 1, 'jobName': 'Job20230710topDownClamp', 
    'severe': 2, 'iterations': 3, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230710topDownClamp']._Message(END_STEP, {
    'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(STEP, {'phase': STANDARD_PHASE, 
    'stepId': 2, 'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 0, 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(MEMORY_ESTIMATE, {
    'phase': STANDARD_PHASE, 'jobName': 'Job20230710topDownClamp', 
    'memory': 7124.0})
mdb.jobs['Job20230710topDownClamp']._Message(PHYSICAL_MEMORY, {
    'phase': STANDARD_PHASE, 'physical_memory': 32620.0, 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(MINIMUM_MEMORY, {
    'minimum_memory': 800.0, 'phase': STANDARD_PHASE, 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(STATUS, {'totalTime': 1.1, 
    'attempts': 1, 'timeIncrement': 0.1, 'increment': 1, 'stepTime': 0.1, 
    'step': 2, 'jobName': 'Job20230710topDownClamp', 'severe': 8, 
    'iterations': 9, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230710topDownClamp']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 1, 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(STATUS, {'totalTime': 1.2, 
    'attempts': 1, 'timeIncrement': 0.1, 'increment': 2, 'stepTime': 0.2, 
    'step': 2, 'jobName': 'Job20230710topDownClamp', 'severe': 3, 
    'iterations': 4, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230710topDownClamp']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 2, 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(STATUS, {'totalTime': 1.35, 
    'attempts': 1, 'timeIncrement': 0.15, 'increment': 3, 'stepTime': 0.35, 
    'step': 2, 'jobName': 'Job20230710topDownClamp', 'severe': 4, 
    'iterations': 4, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job20230710topDownClamp']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 3, 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(STATUS, {'totalTime': 1.575, 
    'attempts': 1, 'timeIncrement': 0.225, 'increment': 4, 'stepTime': 0.575, 
    'step': 2, 'jobName': 'Job20230710topDownClamp', 'severe': 3, 
    'iterations': 4, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230710topDownClamp']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 4, 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(STATUS, {'totalTime': 1.9125, 
    'attempts': 1, 'timeIncrement': 0.3375, 'increment': 5, 'stepTime': 0.9125, 
    'step': 2, 'jobName': 'Job20230710topDownClamp', 'severe': 4, 
    'iterations': 5, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230710topDownClamp']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 5, 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 6, 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(STATUS, {'totalTime': 2.0, 
    'attempts': 1, 'timeIncrement': 0.0874999999999999, 'increment': 6, 
    'stepTime': 1.0, 'step': 2, 'jobName': 'Job20230710topDownClamp', 
    'severe': 2, 'iterations': 3, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230710topDownClamp']._Message(END_STEP, {
    'phase': STANDARD_PHASE, 'stepId': 2, 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(COMPLETED, {
    'phase': STANDARD_PHASE, 'message': 'Analysis phase complete', 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(JOB_COMPLETED, {
    'time': 'Wed Jul 19 19:36:00 2023', 'jobName': 'Job20230710topDownClamp'})
mdb.models['Model-1'].TabularAmplitude(data=((0.0, 0.0), (0.25, 1.0), (0.5, 
    0.0), (0.75, -1.0), (1.0, 0.0)), name='cyclic', smooth=SOLVER_DEFAULT, 
    timeSpan=STEP)
mdb.models['Model-1'].boundaryConditions['mfEnd3'].setValuesInStep(amplitude=
    'cyclic', stepName='cyclicLoading')
mdb.models['Model-1'].boundaryConditions['mfEnd4'].setValuesInStep(amplitude=
    'cyclic', stepName='cyclicLoading')
mdb.models['Model-1'].Material(name='purlin', objectToCopy=
    mdb.models['Model-1'].materials['steel'])
mdb.models['Model-1'].materials['purlin'].Plastic(hardening=KINEMATIC, table=((
    550.0, 0.0), (570.0, 0.0001)))
mdb.models['Model-1'].materials.changeKey(fromName='purlin', toName=
    'ASTMa653Gr80')
mdb.models['Model-1'].HomogeneousSolidSection(material='ASTMa653Gr80', name=
    'ASTMa653Gr80', thickness=None)
del mdb.models['Model-1'].parts['purlin'].sectionAssignments[0]
mdb.models['Model-1'].parts['purlin'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-1'].parts['purlin'].cells.getSequenceFromMask(
    mask=('[#1f ]', ), )), sectionName='ASTMa653Gr80', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-1'].parts['bolt'].sectionAssignments[0].setValues(
    sectionName='steel')
mdb.models['Model-1'].parts['clamp'].sectionAssignments[0].setValues(
    sectionName='steel')
# Save by xinlo on 2023_07_19-22.58.32; build 2017 2016_09_27-14.54.59 126836
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.models['Model-1'].steps['cyclicLoading'].setValues(maxInc=0.1)
mdb.models['Model-1'].boundaryConditions['mfEnd3'].setValuesInStep(stepName=
    'cyclicLoading', u2=5.0)
mdb.models['Model-1'].boundaryConditions['mfEnd4'].setValuesInStep(stepName=
    'cyclicLoading', u2=5.0)
mdb.models['Model-1'].steps['cyclicLoading'].setValues(initialInc=0.05, maxInc=
    0.05)
# Save by xinlo on 2023_07_19-23.06.25; build 2017 2016_09_27-14.54.59 126836
# Save by xinlo on 2023_07_19-23.06.41; build 2017 2016_09_27-14.54.59 126836
# Save by xinlo on 2023_07_19-23.06.53; build 2017 2016_09_27-14.54.59 126836
# Save by xinlo on 2023_07_19-23.06.54; build 2017 2016_09_27-14.54.59 126836
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['Job20230710topDownClamp'].submit(consistencyChecking=OFF)
mdb.jobs['Job20230710topDownClamp']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-A24BAF5', 'handle': 0, 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'WHENEVER A TRANSLATION (ROTATION) DOF AT A NODE IS CONSTRAINED BY A KINEMATIC COUPLING DEFINITION THE TRANSLATION (ROTATION) DOFS FOR THAT NODE CANNOT BE INCLUDED IN ANY OTHER CONSTRAINT INCLUDING MPCS, RIGID BODIES, ETC.', 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'MPCS (EXTERNAL or INTERNAL, including those generated from rigid body definitions), KINEMATIC COUPLINGS, AND/OR EQUATIONS WILL ACTIVATE ADDITIONAL DEGREES OF FREEDOM', 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(ODB_FILE, {
    'phase': BATCHPRE_PHASE, 'file': 'C:\\temp\\Job20230710topDownClamp.odb', 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(COMPLETED, {
    'phase': BATCHPRE_PHASE, 'message': 'Analysis phase complete', 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-A24BAF5', 'handle': 8156, 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(STEP, {'phase': STANDARD_PHASE, 
    'stepId': 1, 'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 0, 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(MEMORY_ESTIMATE, {
    'phase': STANDARD_PHASE, 'jobName': 'Job20230710topDownClamp', 
    'memory': 7975.0})
mdb.jobs['Job20230710topDownClamp']._Message(PHYSICAL_MEMORY, {
    'phase': STANDARD_PHASE, 'physical_memory': 32620.0, 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(MINIMUM_MEMORY, {
    'minimum_memory': 844.0, 'phase': STANDARD_PHASE, 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(STATUS, {'totalTime': 0.1, 
    'attempts': 1, 'timeIncrement': 0.1, 'increment': 1, 'stepTime': 0.1, 
    'step': 1, 'jobName': 'Job20230710topDownClamp', 'severe': 27, 
    'iterations': 27, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job20230710topDownClamp']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 1, 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(STATUS, {'totalTime': 0.2, 
    'attempts': 1, 'timeIncrement': 0.1, 'increment': 2, 'stepTime': 0.2, 
    'step': 1, 'jobName': 'Job20230710topDownClamp', 'severe': 9, 
    'iterations': 10, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230710topDownClamp']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 2, 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(STATUS, {'totalTime': 0.3, 
    'attempts': 1, 'timeIncrement': 0.1, 'increment': 3, 'stepTime': 0.3, 
    'step': 1, 'jobName': 'Job20230710topDownClamp', 'severe': 7, 
    'iterations': 8, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230710topDownClamp']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 3, 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(STATUS, {'totalTime': 0.45, 
    'attempts': 1, 'timeIncrement': 0.15, 'increment': 4, 'stepTime': 0.45, 
    'step': 1, 'jobName': 'Job20230710topDownClamp', 'severe': 4, 
    'iterations': 5, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230710topDownClamp']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 4, 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(STATUS, {'totalTime': 0.675, 
    'attempts': 1, 'timeIncrement': 0.225, 'increment': 5, 'stepTime': 0.675, 
    'step': 1, 'jobName': 'Job20230710topDownClamp', 'severe': 2, 
    'iterations': 3, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230710topDownClamp']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 5, 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 6, 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(STATUS, {'totalTime': 1.0, 
    'attempts': 1, 'timeIncrement': 0.325, 'increment': 6, 'stepTime': 1.0, 
    'step': 1, 'jobName': 'Job20230710topDownClamp', 'severe': 7, 
    'iterations': 8, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230710topDownClamp']._Message(END_STEP, {
    'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(STEP, {'phase': STANDARD_PHASE, 
    'stepId': 2, 'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 0, 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(MEMORY_ESTIMATE, {
    'phase': STANDARD_PHASE, 'jobName': 'Job20230710topDownClamp', 
    'memory': 7424.0})
mdb.jobs['Job20230710topDownClamp']._Message(PHYSICAL_MEMORY, {
    'phase': STANDARD_PHASE, 'physical_memory': 32620.0, 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(MINIMUM_MEMORY, {
    'minimum_memory': 822.0, 'phase': STANDARD_PHASE, 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'DISPLACEMENT INCREMENT FOR CONTACT IS TOO BIG.', 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'DISPLACEMENT INCREMENT FOR CONTACT IS TOO BIG.', 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(STATUS, {'totalTime': 1.0, 
    'attempts': ' 1U', 'timeIncrement': 0.05, 'increment': 1, 'stepTime': 0.0, 
    'step': 2, 'jobName': 'Job20230710topDownClamp', 'severe': 5, 
    'iterations': 6, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230710topDownClamp']._Message(STATUS, {'totalTime': 1.0, 
    'attempts': ' 2U', 'timeIncrement': 0.0125, 'increment': 1, 
    'stepTime': 0.0, 'step': 2, 'jobName': 'Job20230710topDownClamp', 
    'severe': 9, 'iterations': 13, 'phase': STANDARD_PHASE, 'equilibrium': 4})
mdb.jobs['Job20230710topDownClamp']._Message(STATUS, {'totalTime': 1.0, 
    'attempts': ' 3U', 'timeIncrement': 0.003125, 'increment': 1, 
    'stepTime': 0.0, 'step': 2, 'jobName': 'Job20230710topDownClamp', 
    'severe': 7, 'iterations': 11, 'phase': STANDARD_PHASE, 'equilibrium': 4})
mdb.jobs['Job20230710topDownClamp']._Message(STATUS, {'totalTime': 1.00078125, 
    'attempts': 4, 'timeIncrement': 0.00078125, 'increment': 1, 
    'stepTime': 0.00078125, 'step': 2, 'jobName': 'Job20230710topDownClamp', 
    'severe': 5, 'iterations': 5, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job20230710topDownClamp']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 1, 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(STATUS, {'totalTime': 1.0015625, 
    'attempts': 1, 'timeIncrement': 0.00078125, 'increment': 2, 
    'stepTime': 0.0015625, 'step': 2, 'jobName': 'Job20230710topDownClamp', 
    'severe': 2, 'iterations': 3, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230710topDownClamp']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 2, 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(STATUS, {'totalTime': 1.002734375, 
    'attempts': 1, 'timeIncrement': 0.001171875, 'increment': 3, 
    'stepTime': 0.002734375, 'step': 2, 'jobName': 'Job20230710topDownClamp', 
    'severe': 2, 'iterations': 3, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230710topDownClamp']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 3, 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(STATUS, {
    'totalTime': 1.0044921875, 'attempts': 1, 'timeIncrement': 0.0017578125, 
    'increment': 4, 'stepTime': 0.0044921875, 'step': 2, 
    'jobName': 'Job20230710topDownClamp', 'severe': 3, 'iterations': 4, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230710topDownClamp']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 4, 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(STATUS, {
    'totalTime': 1.00712890625, 'attempts': 1, 'timeIncrement': 0.00263671875, 
    'increment': 5, 'stepTime': 0.00712890625, 'step': 2, 
    'jobName': 'Job20230710topDownClamp', 'severe': 3, 'iterations': 4, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230710topDownClamp']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 5, 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(STATUS, {
    'totalTime': 1.011083984375, 'attempts': 1, 
    'timeIncrement': 0.003955078125, 'increment': 6, 
    'stepTime': 0.011083984375, 'step': 2, 
    'jobName': 'Job20230710topDownClamp', 'severe': 2, 'iterations': 3, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230710topDownClamp']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 6, 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(STATUS, {
    'totalTime': 1.0170166015625, 'attempts': 1, 
    'timeIncrement': 0.0059326171875, 'increment': 7, 
    'stepTime': 0.0170166015625, 'step': 2, 
    'jobName': 'Job20230710topDownClamp', 'severe': 6, 'iterations': 7, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230710topDownClamp']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 7, 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(STATUS, {
    'totalTime': 1.02591552734375, 'attempts': 1, 
    'timeIncrement': 0.00889892578125, 'increment': 8, 
    'stepTime': 0.02591552734375, 'step': 2, 
    'jobName': 'Job20230710topDownClamp', 'severe': 7, 'iterations': 8, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230710topDownClamp']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 8, 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(STATUS, {
    'totalTime': 1.02591552734375, 'attempts': ' 1U', 
    'timeIncrement': 0.013348388671875, 'increment': 9, 
    'stepTime': 0.02591552734375, 'step': 2, 
    'jobName': 'Job20230710topDownClamp', 'severe': 7, 'iterations': 7, 
    'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job20230710topDownClamp']._Message(STATUS, {
    'totalTime': 1.02925262451172, 'attempts': 2, 
    'timeIncrement': 0.00333709716796875, 'increment': 9, 
    'stepTime': 0.0292526245117188, 'step': 2, 
    'jobName': 'Job20230710topDownClamp', 'severe': 3, 'iterations': 3, 
    'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job20230710topDownClamp']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 9, 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(STATUS, {
    'totalTime': 1.03425827026367, 'attempts': 1, 
    'timeIncrement': 0.00500564575195313, 'increment': 10, 
    'stepTime': 0.0342582702636719, 'step': 2, 
    'jobName': 'Job20230710topDownClamp', 'severe': 4, 'iterations': 5, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230710topDownClamp']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 10, 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(STATUS, {
    'totalTime': 1.0417667388916, 'attempts': 1, 
    'timeIncrement': 0.00750846862792969, 'increment': 11, 
    'stepTime': 0.0417667388916016, 'step': 2, 
    'jobName': 'Job20230710topDownClamp', 'severe': 3, 'iterations': 4, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230710topDownClamp']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 11, 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(STATUS, {
    'totalTime': 1.0530294418335, 'attempts': 1, 
    'timeIncrement': 0.0112627029418945, 'increment': 12, 
    'stepTime': 0.0530294418334961, 'step': 2, 
    'jobName': 'Job20230710topDownClamp', 'severe': 3, 'iterations': 4, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230710topDownClamp']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 12, 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(STATUS, {
    'totalTime': 1.06992349624634, 'attempts': 1, 
    'timeIncrement': 0.0168940544128418, 'increment': 13, 
    'stepTime': 0.0699234962463379, 'step': 2, 
    'jobName': 'Job20230710topDownClamp', 'severe': 3, 'iterations': 4, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230710topDownClamp']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 13, 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'DISPLACEMENT INCREMENT FOR CONTACT IS TOO BIG.', 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'DISPLACEMENT INCREMENT FOR CONTACT IS TOO BIG.', 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'DISPLACEMENT INCREMENT FOR CONTACT IS TOO BIG.', 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'DISPLACEMENT INCREMENT FOR CONTACT IS TOO BIG.', 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'THE STRAIN INCREMENT HAS EXCEEDED FIFTY TIMES THE STRAIN TO CAUSE FIRST YIELD AT 1353 POINTS', 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(STATUS, {
    'totalTime': 1.06992349624634, 'attempts': ' 1U', 
    'timeIncrement': 0.0253410816192627, 'increment': 14, 
    'stepTime': 0.0699234962463379, 'step': 2, 
    'jobName': 'Job20230710topDownClamp', 'severe': 1, 'iterations': 2, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230710topDownClamp']._Message(STATUS, {
    'totalTime': 1.07625876665115, 'attempts': 2, 
    'timeIncrement': 0.00633527040481567, 'increment': 14, 
    'stepTime': 0.0762587666511536, 'step': 2, 
    'jobName': 'Job20230710topDownClamp', 'severe': 7, 'iterations': 9, 
    'phase': STANDARD_PHASE, 'equilibrium': 2})
mdb.jobs['Job20230710topDownClamp']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 14, 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(STATUS, {
    'totalTime': 1.08576167225838, 'attempts': 1, 
    'timeIncrement': 0.00950290560722351, 'increment': 15, 
    'stepTime': 0.0857616722583771, 'step': 2, 
    'jobName': 'Job20230710topDownClamp', 'severe': 4, 'iterations': 5, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230710topDownClamp']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 15, 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(STATUS, {
    'totalTime': 1.10001603066921, 'attempts': 1, 
    'timeIncrement': 0.0142543584108353, 'increment': 16, 
    'stepTime': 0.100016030669212, 'step': 2, 
    'jobName': 'Job20230710topDownClamp', 'severe': 7, 'iterations': 8, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230710topDownClamp']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 16, 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(STATUS, {
    'totalTime': 1.12139756828547, 'attempts': 1, 
    'timeIncrement': 0.0213815376162529, 'increment': 17, 
    'stepTime': 0.121397568285465, 'step': 2, 
    'jobName': 'Job20230710topDownClamp', 'severe': 4, 'iterations': 5, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230710topDownClamp']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 17, 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(STATUS, {
    'totalTime': 1.12139756828547, 'attempts': ' 1U', 
    'timeIncrement': 0.0320723064243794, 'increment': 18, 
    'stepTime': 0.121397568285465, 'step': 2, 
    'jobName': 'Job20230710topDownClamp', 'severe': 7, 'iterations': 7, 
    'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job20230710topDownClamp']._Message(STATUS, {
    'totalTime': 1.12941564489156, 'attempts': 2, 
    'timeIncrement': 0.00801807660609484, 'increment': 18, 
    'stepTime': 0.12941564489156, 'step': 2, 
    'jobName': 'Job20230710topDownClamp', 'severe': 2, 'iterations': 3, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230710topDownClamp']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 18, 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(STATUS, {
    'totalTime': 1.1414427598007, 'attempts': 1, 
    'timeIncrement': 0.0120271149091423, 'increment': 19, 
    'stepTime': 0.141442759800702, 'step': 2, 
    'jobName': 'Job20230710topDownClamp', 'severe': 3, 'iterations': 4, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230710topDownClamp']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 19, 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(ERROR, {'phase': STANDARD_PHASE, 
    'message': 'Process terminated by external request (SIGTERM or SIGINT received).', 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(INTERRUPTED, {
    'phase': STANDARD_PHASE, 
    'message': 'Analysis interrupted by external signal', 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(ERROR, {
    'message': 'Abaqus/Standard Analysis exited with an error - Please see the  message file for possible error messages if the file exists.', 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(JOB_ABORTED, {
    'message': 'Abaqus/Standard Analysis exited with an error - Please see the  message file for possible error messages if the file exists.', 
    'jobName': 'Job20230710topDownClamp'})
# Save by xinlo on 2023_07_20-00.51.27; build 2017 2016_09_27-14.54.59 126836
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['Job20230710topDownClamp'].submit(consistencyChecking=OFF)
mdb.jobs['Job20230710topDownClamp']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-A24BAF5', 'handle': 0, 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'WHENEVER A TRANSLATION (ROTATION) DOF AT A NODE IS CONSTRAINED BY A KINEMATIC COUPLING DEFINITION THE TRANSLATION (ROTATION) DOFS FOR THAT NODE CANNOT BE INCLUDED IN ANY OTHER CONSTRAINT INCLUDING MPCS, RIGID BODIES, ETC.', 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'MPCS (EXTERNAL or INTERNAL, including those generated from rigid body definitions), KINEMATIC COUPLINGS, AND/OR EQUATIONS WILL ACTIVATE ADDITIONAL DEGREES OF FREEDOM', 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(ODB_FILE, {
    'phase': BATCHPRE_PHASE, 'file': 'C:\\temp\\Job20230710topDownClamp.odb', 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(COMPLETED, {
    'phase': BATCHPRE_PHASE, 'message': 'Analysis phase complete', 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-A24BAF5', 'handle': 11592, 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(STEP, {'phase': STANDARD_PHASE, 
    'stepId': 1, 'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 0, 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(MEMORY_ESTIMATE, {
    'phase': STANDARD_PHASE, 'jobName': 'Job20230710topDownClamp', 
    'memory': 7975.0})
mdb.jobs['Job20230710topDownClamp']._Message(PHYSICAL_MEMORY, {
    'phase': STANDARD_PHASE, 'physical_memory': 32620.0, 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(MINIMUM_MEMORY, {
    'minimum_memory': 844.0, 'phase': STANDARD_PHASE, 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(STATUS, {'totalTime': 0.1, 
    'attempts': 1, 'timeIncrement': 0.1, 'increment': 1, 'stepTime': 0.1, 
    'step': 1, 'jobName': 'Job20230710topDownClamp', 'severe': 27, 
    'iterations': 27, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job20230710topDownClamp']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 1, 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(STATUS, {'totalTime': 0.2, 
    'attempts': 1, 'timeIncrement': 0.1, 'increment': 2, 'stepTime': 0.2, 
    'step': 1, 'jobName': 'Job20230710topDownClamp', 'severe': 9, 
    'iterations': 10, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230710topDownClamp']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 2, 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(STATUS, {'totalTime': 0.3, 
    'attempts': 1, 'timeIncrement': 0.1, 'increment': 3, 'stepTime': 0.3, 
    'step': 1, 'jobName': 'Job20230710topDownClamp', 'severe': 7, 
    'iterations': 8, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230710topDownClamp']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 3, 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(STATUS, {'totalTime': 0.45, 
    'attempts': 1, 'timeIncrement': 0.15, 'increment': 4, 'stepTime': 0.45, 
    'step': 1, 'jobName': 'Job20230710topDownClamp', 'severe': 4, 
    'iterations': 5, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230710topDownClamp']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 4, 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(STATUS, {'totalTime': 0.675, 
    'attempts': 1, 'timeIncrement': 0.225, 'increment': 5, 'stepTime': 0.675, 
    'step': 1, 'jobName': 'Job20230710topDownClamp', 'severe': 2, 
    'iterations': 3, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230710topDownClamp']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 5, 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 6, 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(STATUS, {'totalTime': 1.0, 
    'attempts': 1, 'timeIncrement': 0.325, 'increment': 6, 'stepTime': 1.0, 
    'step': 1, 'jobName': 'Job20230710topDownClamp', 'severe': 7, 
    'iterations': 8, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230710topDownClamp']._Message(END_STEP, {
    'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(STEP, {'phase': STANDARD_PHASE, 
    'stepId': 2, 'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 0, 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(MEMORY_ESTIMATE, {
    'phase': STANDARD_PHASE, 'jobName': 'Job20230710topDownClamp', 
    'memory': 7424.0})
mdb.jobs['Job20230710topDownClamp']._Message(PHYSICAL_MEMORY, {
    'phase': STANDARD_PHASE, 'physical_memory': 32620.0, 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(MINIMUM_MEMORY, {
    'minimum_memory': 822.0, 'phase': STANDARD_PHASE, 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'DISPLACEMENT INCREMENT FOR CONTACT IS TOO BIG.', 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'DISPLACEMENT INCREMENT FOR CONTACT IS TOO BIG.', 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(STATUS, {'totalTime': 1.0, 
    'attempts': ' 1U', 'timeIncrement': 0.05, 'increment': 1, 'stepTime': 0.0, 
    'step': 2, 'jobName': 'Job20230710topDownClamp', 'severe': 5, 
    'iterations': 6, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230710topDownClamp']._Message(STATUS, {'totalTime': 1.0, 
    'attempts': ' 2U', 'timeIncrement': 0.0125, 'increment': 1, 
    'stepTime': 0.0, 'step': 2, 'jobName': 'Job20230710topDownClamp', 
    'severe': 9, 'iterations': 13, 'phase': STANDARD_PHASE, 'equilibrium': 4})
mdb.jobs['Job20230710topDownClamp']._Message(STATUS, {'totalTime': 1.0, 
    'attempts': ' 3U', 'timeIncrement': 0.003125, 'increment': 1, 
    'stepTime': 0.0, 'step': 2, 'jobName': 'Job20230710topDownClamp', 
    'severe': 7, 'iterations': 11, 'phase': STANDARD_PHASE, 'equilibrium': 4})
mdb.jobs['Job20230710topDownClamp']._Message(STATUS, {'totalTime': 1.00078125, 
    'attempts': 4, 'timeIncrement': 0.00078125, 'increment': 1, 
    'stepTime': 0.00078125, 'step': 2, 'jobName': 'Job20230710topDownClamp', 
    'severe': 5, 'iterations': 5, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job20230710topDownClamp']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 1, 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(STATUS, {'totalTime': 1.0015625, 
    'attempts': 1, 'timeIncrement': 0.00078125, 'increment': 2, 
    'stepTime': 0.0015625, 'step': 2, 'jobName': 'Job20230710topDownClamp', 
    'severe': 2, 'iterations': 3, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230710topDownClamp']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 2, 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(STATUS, {'totalTime': 1.002734375, 
    'attempts': 1, 'timeIncrement': 0.001171875, 'increment': 3, 
    'stepTime': 0.002734375, 'step': 2, 'jobName': 'Job20230710topDownClamp', 
    'severe': 2, 'iterations': 3, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230710topDownClamp']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 3, 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(STATUS, {
    'totalTime': 1.0044921875, 'attempts': 1, 'timeIncrement': 0.0017578125, 
    'increment': 4, 'stepTime': 0.0044921875, 'step': 2, 
    'jobName': 'Job20230710topDownClamp', 'severe': 3, 'iterations': 4, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230710topDownClamp']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 4, 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(STATUS, {
    'totalTime': 1.00712890625, 'attempts': 1, 'timeIncrement': 0.00263671875, 
    'increment': 5, 'stepTime': 0.00712890625, 'step': 2, 
    'jobName': 'Job20230710topDownClamp', 'severe': 3, 'iterations': 4, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230710topDownClamp']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 5, 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(STATUS, {
    'totalTime': 1.011083984375, 'attempts': 1, 
    'timeIncrement': 0.003955078125, 'increment': 6, 
    'stepTime': 0.011083984375, 'step': 2, 
    'jobName': 'Job20230710topDownClamp', 'severe': 2, 'iterations': 3, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230710topDownClamp']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 6, 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(STATUS, {
    'totalTime': 1.0170166015625, 'attempts': 1, 
    'timeIncrement': 0.0059326171875, 'increment': 7, 
    'stepTime': 0.0170166015625, 'step': 2, 
    'jobName': 'Job20230710topDownClamp', 'severe': 6, 'iterations': 7, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230710topDownClamp']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 7, 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(STATUS, {
    'totalTime': 1.02591552734375, 'attempts': 1, 
    'timeIncrement': 0.00889892578125, 'increment': 8, 
    'stepTime': 0.02591552734375, 'step': 2, 
    'jobName': 'Job20230710topDownClamp', 'severe': 7, 'iterations': 8, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230710topDownClamp']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 8, 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(STATUS, {
    'totalTime': 1.02591552734375, 'attempts': ' 1U', 
    'timeIncrement': 0.013348388671875, 'increment': 9, 
    'stepTime': 0.02591552734375, 'step': 2, 
    'jobName': 'Job20230710topDownClamp', 'severe': 7, 'iterations': 7, 
    'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job20230710topDownClamp']._Message(STATUS, {
    'totalTime': 1.02925262451172, 'attempts': 2, 
    'timeIncrement': 0.00333709716796875, 'increment': 9, 
    'stepTime': 0.0292526245117188, 'step': 2, 
    'jobName': 'Job20230710topDownClamp', 'severe': 3, 'iterations': 3, 
    'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job20230710topDownClamp']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 9, 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(STATUS, {
    'totalTime': 1.03425827026367, 'attempts': 1, 
    'timeIncrement': 0.00500564575195313, 'increment': 10, 
    'stepTime': 0.0342582702636719, 'step': 2, 
    'jobName': 'Job20230710topDownClamp', 'severe': 4, 'iterations': 5, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230710topDownClamp']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 10, 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(STATUS, {
    'totalTime': 1.0417667388916, 'attempts': 1, 
    'timeIncrement': 0.00750846862792969, 'increment': 11, 
    'stepTime': 0.0417667388916016, 'step': 2, 
    'jobName': 'Job20230710topDownClamp', 'severe': 3, 'iterations': 4, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230710topDownClamp']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 11, 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(STATUS, {
    'totalTime': 1.0530294418335, 'attempts': 1, 
    'timeIncrement': 0.0112627029418945, 'increment': 12, 
    'stepTime': 0.0530294418334961, 'step': 2, 
    'jobName': 'Job20230710topDownClamp', 'severe': 3, 'iterations': 4, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230710topDownClamp']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 12, 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(STATUS, {
    'totalTime': 1.06992349624634, 'attempts': 1, 
    'timeIncrement': 0.0168940544128418, 'increment': 13, 
    'stepTime': 0.0699234962463379, 'step': 2, 
    'jobName': 'Job20230710topDownClamp', 'severe': 3, 'iterations': 4, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230710topDownClamp']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 13, 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'DISPLACEMENT INCREMENT FOR CONTACT IS TOO BIG.', 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'DISPLACEMENT INCREMENT FOR CONTACT IS TOO BIG.', 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'DISPLACEMENT INCREMENT FOR CONTACT IS TOO BIG.', 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'DISPLACEMENT INCREMENT FOR CONTACT IS TOO BIG.', 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'THE STRAIN INCREMENT HAS EXCEEDED FIFTY TIMES THE STRAIN TO CAUSE FIRST YIELD AT 1353 POINTS', 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(STATUS, {
    'totalTime': 1.06992349624634, 'attempts': ' 1U', 
    'timeIncrement': 0.0253410816192627, 'increment': 14, 
    'stepTime': 0.0699234962463379, 'step': 2, 
    'jobName': 'Job20230710topDownClamp', 'severe': 1, 'iterations': 2, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230710topDownClamp']._Message(STATUS, {
    'totalTime': 1.07625876665115, 'attempts': 2, 
    'timeIncrement': 0.00633527040481567, 'increment': 14, 
    'stepTime': 0.0762587666511536, 'step': 2, 
    'jobName': 'Job20230710topDownClamp', 'severe': 7, 'iterations': 9, 
    'phase': STANDARD_PHASE, 'equilibrium': 2})
mdb.jobs['Job20230710topDownClamp']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 14, 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(STATUS, {
    'totalTime': 1.08576167225838, 'attempts': 1, 
    'timeIncrement': 0.00950290560722351, 'increment': 15, 
    'stepTime': 0.0857616722583771, 'step': 2, 
    'jobName': 'Job20230710topDownClamp', 'severe': 4, 'iterations': 5, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230710topDownClamp']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 15, 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(STATUS, {
    'totalTime': 1.10001603066921, 'attempts': 1, 
    'timeIncrement': 0.0142543584108353, 'increment': 16, 
    'stepTime': 0.100016030669212, 'step': 2, 
    'jobName': 'Job20230710topDownClamp', 'severe': 7, 'iterations': 8, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230710topDownClamp']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 16, 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(STATUS, {
    'totalTime': 1.12139756828547, 'attempts': 1, 
    'timeIncrement': 0.0213815376162529, 'increment': 17, 
    'stepTime': 0.121397568285465, 'step': 2, 
    'jobName': 'Job20230710topDownClamp', 'severe': 4, 'iterations': 5, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230710topDownClamp']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 17, 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(STATUS, {
    'totalTime': 1.12139756828547, 'attempts': ' 1U', 
    'timeIncrement': 0.0320723064243794, 'increment': 18, 
    'stepTime': 0.121397568285465, 'step': 2, 
    'jobName': 'Job20230710topDownClamp', 'severe': 7, 'iterations': 7, 
    'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job20230710topDownClamp']._Message(STATUS, {
    'totalTime': 1.12941564489156, 'attempts': 2, 
    'timeIncrement': 0.00801807660609484, 'increment': 18, 
    'stepTime': 0.12941564489156, 'step': 2, 
    'jobName': 'Job20230710topDownClamp', 'severe': 2, 'iterations': 3, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230710topDownClamp']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 18, 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(STATUS, {
    'totalTime': 1.1414427598007, 'attempts': 1, 
    'timeIncrement': 0.0120271149091423, 'increment': 19, 
    'stepTime': 0.141442759800702, 'step': 2, 
    'jobName': 'Job20230710topDownClamp', 'severe': 3, 'iterations': 4, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230710topDownClamp']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 19, 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(STATUS, {
    'totalTime': 1.15948343216442, 'attempts': 1, 
    'timeIncrement': 0.0180406723637134, 'increment': 20, 
    'stepTime': 0.159483432164416, 'step': 2, 
    'jobName': 'Job20230710topDownClamp', 'severe': 4, 'iterations': 6, 
    'phase': STANDARD_PHASE, 'equilibrium': 2})
mdb.jobs['Job20230710topDownClamp']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 20, 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(STATUS, {
    'totalTime': 1.18654444070999, 'attempts': 1, 
    'timeIncrement': 0.0270610085455701, 'increment': 21, 
    'stepTime': 0.186544440709986, 'step': 2, 
    'jobName': 'Job20230710topDownClamp', 'severe': 5, 'iterations': 6, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230710topDownClamp']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 21, 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(STATUS, {
    'totalTime': 1.22713595352834, 'attempts': 1, 
    'timeIncrement': 0.0405915128183551, 'increment': 22, 
    'stepTime': 0.227135953528341, 'step': 2, 
    'jobName': 'Job20230710topDownClamp', 'severe': 3, 'iterations': 5, 
    'phase': STANDARD_PHASE, 'equilibrium': 2})
mdb.jobs['Job20230710topDownClamp']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 22, 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(STATUS, {
    'totalTime': 1.27713595352834, 'attempts': 1, 'timeIncrement': 0.05, 
    'increment': 23, 'stepTime': 0.277135953528341, 'step': 2, 
    'jobName': 'Job20230710topDownClamp', 'severe': 9, 'iterations': 11, 
    'phase': STANDARD_PHASE, 'equilibrium': 2})
mdb.jobs['Job20230710topDownClamp']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 23, 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(STATUS, {
    'totalTime': 1.32713595352834, 'attempts': 1, 'timeIncrement': 0.05, 
    'increment': 24, 'stepTime': 0.327135953528341, 'step': 2, 
    'jobName': 'Job20230710topDownClamp', 'severe': 4, 'iterations': 5, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230710topDownClamp']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 24, 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'THE STRAIN INCREMENT HAS EXCEEDED FIFTY TIMES THE STRAIN TO CAUSE FIRST YIELD AT 1 POINTS', 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'THE STRAIN INCREMENT HAS EXCEEDED FIFTY TIMES THE STRAIN TO CAUSE FIRST YIELD AT 5 POINTS', 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'THE STRAIN INCREMENT HAS EXCEEDED FIFTY TIMES THE STRAIN TO CAUSE FIRST YIELD AT 22 POINTS', 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'DISPLACEMENT INCREMENT FOR CONTACT IS TOO BIG.', 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'DISPLACEMENT INCREMENT FOR CONTACT IS TOO BIG.', 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'THE STRAIN INCREMENT HAS EXCEEDED FIFTY TIMES THE STRAIN TO CAUSE FIRST YIELD AT 281 POINTS', 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'THE STRAIN INCREMENT IS SO LARGE THAT THE PROGRAM WILL NOT ATTEMPT THE PLASTICITY CALCULATION AT 4 POINTS', 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(STATUS, {
    'totalTime': 1.32713595352834, 'attempts': ' 1U', 'timeIncrement': 0.05, 
    'increment': 25, 'stepTime': 0.327135953528341, 'step': 2, 
    'jobName': 'Job20230710topDownClamp', 'severe': 3, 'iterations': 4, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230710topDownClamp']._Message(STATUS, {
    'totalTime': 1.33963595352834, 'attempts': 2, 'timeIncrement': 0.0125, 
    'increment': 25, 'stepTime': 0.339635953528341, 'step': 2, 
    'jobName': 'Job20230710topDownClamp', 'severe': 5, 'iterations': 6, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230710topDownClamp']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 25, 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(STATUS, {
    'totalTime': 1.35838595352834, 'attempts': 1, 'timeIncrement': 0.01875, 
    'increment': 26, 'stepTime': 0.358385953528341, 'step': 2, 
    'jobName': 'Job20230710topDownClamp', 'severe': 2, 'iterations': 4, 
    'phase': STANDARD_PHASE, 'equilibrium': 2})
mdb.jobs['Job20230710topDownClamp']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 26, 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(STATUS, {
    'totalTime': 1.38651095352834, 'attempts': 1, 'timeIncrement': 0.028125, 
    'increment': 27, 'stepTime': 0.386510953528341, 'step': 2, 
    'jobName': 'Job20230710topDownClamp', 'severe': 7, 'iterations': 9, 
    'phase': STANDARD_PHASE, 'equilibrium': 2})
mdb.jobs['Job20230710topDownClamp']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 27, 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(STATUS, {
    'totalTime': 1.42869845352834, 'attempts': 1, 'timeIncrement': 0.0421875, 
    'increment': 28, 'stepTime': 0.428698453528341, 'step': 2, 
    'jobName': 'Job20230710topDownClamp', 'severe': 12, 'iterations': 13, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230710topDownClamp']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 28, 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'DISPLACEMENT INCREMENT FOR CONTACT IS TOO BIG.', 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'DISPLACEMENT INCREMENT FOR CONTACT IS TOO BIG.', 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(STATUS, {
    'totalTime': 1.42869845352834, 'attempts': ' 1U', 'timeIncrement': 0.05, 
    'increment': 29, 'stepTime': 0.428698453528341, 'step': 2, 
    'jobName': 'Job20230710topDownClamp', 'severe': 3, 'iterations': 4, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230710topDownClamp']._Message(STATUS, {
    'totalTime': 1.42869845352834, 'attempts': ' 2U', 'timeIncrement': 0.0125, 
    'increment': 29, 'stepTime': 0.428698453528341, 'step': 2, 
    'jobName': 'Job20230710topDownClamp', 'severe': 4, 'iterations': 4, 
    'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job20230710topDownClamp']._Message(STATUS, {
    'totalTime': 1.43182345352834, 'attempts': 3, 'timeIncrement': 0.003125, 
    'increment': 29, 'stepTime': 0.431823453528341, 'step': 2, 
    'jobName': 'Job20230710topDownClamp', 'severe': 6, 'iterations': 7, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230710topDownClamp']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 29, 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(STATUS, {
    'totalTime': 1.43651095352834, 'attempts': 1, 'timeIncrement': 0.0046875, 
    'increment': 30, 'stepTime': 0.436510953528341, 'step': 2, 
    'jobName': 'Job20230710topDownClamp', 'severe': 9, 'iterations': 10, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230710topDownClamp']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 30, 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(STATUS, {
    'totalTime': 1.44354220352834, 'attempts': 1, 'timeIncrement': 0.00703125, 
    'increment': 31, 'stepTime': 0.443542203528341, 'step': 2, 
    'jobName': 'Job20230710topDownClamp', 'severe': 4, 'iterations': 5, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230710topDownClamp']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 31, 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'DISPLACEMENT INCREMENT FOR CONTACT IS TOO BIG.', 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'DISPLACEMENT INCREMENT FOR CONTACT IS TOO BIG.', 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'DISPLACEMENT INCREMENT FOR CONTACT IS TOO BIG.', 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(STATUS, {
    'totalTime': 1.44354220352834, 'attempts': ' 1U', 
    'timeIncrement': 0.010546875, 'increment': 32, 
    'stepTime': 0.443542203528341, 'step': 2, 
    'jobName': 'Job20230710topDownClamp', 'severe': 3, 'iterations': 4, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230710topDownClamp']._Message(STATUS, {
    'totalTime': 1.44617892227834, 'attempts': 2, 
    'timeIncrement': 0.00263671875, 'increment': 32, 
    'stepTime': 0.446178922278341, 'step': 2, 
    'jobName': 'Job20230710topDownClamp', 'severe': 7, 'iterations': 8, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230710topDownClamp']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 32, 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(STATUS, {
    'totalTime': 1.45013400040334, 'attempts': 1, 
    'timeIncrement': 0.003955078125, 'increment': 33, 
    'stepTime': 0.450134000403341, 'step': 2, 
    'jobName': 'Job20230710topDownClamp', 'severe': 3, 'iterations': 4, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230710topDownClamp']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 33, 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(STATUS, {
    'totalTime': 1.45606661759084, 'attempts': 1, 
    'timeIncrement': 0.0059326171875, 'increment': 34, 
    'stepTime': 0.456066617590841, 'step': 2, 
    'jobName': 'Job20230710topDownClamp', 'severe': 4, 'iterations': 5, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230710topDownClamp']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 34, 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(STATUS, {
    'totalTime': 1.46496554337209, 'attempts': 1, 
    'timeIncrement': 0.00889892578125, 'increment': 35, 
    'stepTime': 0.464965543372091, 'step': 2, 
    'jobName': 'Job20230710topDownClamp', 'severe': 4, 'iterations': 5, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230710topDownClamp']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 35, 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(STATUS, {
    'totalTime': 1.47831393204397, 'attempts': 1, 
    'timeIncrement': 0.013348388671875, 'increment': 36, 
    'stepTime': 0.478313932043966, 'step': 2, 
    'jobName': 'Job20230710topDownClamp', 'severe': 4, 'iterations': 5, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230710topDownClamp']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 36, 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(STATUS, {
    'totalTime': 1.49833651505178, 'attempts': 1, 
    'timeIncrement': 0.0200225830078125, 'increment': 37, 
    'stepTime': 0.498336515051778, 'step': 2, 
    'jobName': 'Job20230710topDownClamp', 'severe': 16, 'iterations': 17, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230710topDownClamp']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 37, 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(STATUS, {
    'totalTime': 1.51335345230764, 'attempts': 1, 
    'timeIncrement': 0.0150169372558594, 'increment': 38, 
    'stepTime': 0.513353452307638, 'step': 2, 
    'jobName': 'Job20230710topDownClamp', 'severe': 24, 'iterations': 25, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230710topDownClamp']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 38, 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(STATUS, {
    'totalTime': 1.52461615524953, 'attempts': 1, 
    'timeIncrement': 0.0112627029418945, 'increment': 39, 
    'stepTime': 0.524616155249532, 'step': 2, 
    'jobName': 'Job20230710topDownClamp', 'severe': 10, 'iterations': 11, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230710topDownClamp']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 39, 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(STATUS, {
    'totalTime': 1.53587885819143, 'attempts': 1, 
    'timeIncrement': 0.0112627029418945, 'increment': 40, 
    'stepTime': 0.535878858191427, 'step': 2, 
    'jobName': 'Job20230710topDownClamp', 'severe': 9, 'iterations': 9, 
    'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job20230710topDownClamp']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 40, 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(STATUS, {
    'totalTime': 1.55277291260427, 'attempts': 1, 
    'timeIncrement': 0.0168940544128418, 'increment': 41, 
    'stepTime': 0.552772912604269, 'step': 2, 
    'jobName': 'Job20230710topDownClamp', 'severe': 6, 'iterations': 7, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230710topDownClamp']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 41, 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(STATUS, {
    'totalTime': 1.57811399422353, 'attempts': 1, 
    'timeIncrement': 0.0253410816192627, 'increment': 42, 
    'stepTime': 0.578113994223531, 'step': 2, 
    'jobName': 'Job20230710topDownClamp', 'severe': 5, 'iterations': 6, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230710topDownClamp']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 42, 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'DISPLACEMENT INCREMENT FOR CONTACT IS TOO BIG.', 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(STATUS, {
    'totalTime': 1.57811399422353, 'attempts': ' 1U', 
    'timeIncrement': 0.038011622428894, 'increment': 43, 
    'stepTime': 0.578113994223531, 'step': 2, 
    'jobName': 'Job20230710topDownClamp', 'severe': 1, 'iterations': 2, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230710topDownClamp']._Message(STATUS, {
    'totalTime': 1.58761689983075, 'attempts': 2, 
    'timeIncrement': 0.00950290560722351, 'increment': 43, 
    'stepTime': 0.587616899830755, 'step': 2, 
    'jobName': 'Job20230710topDownClamp', 'severe': 10, 'iterations': 11, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230710topDownClamp']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 43, 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(STATUS, {
    'totalTime': 1.58761689983075, 'attempts': ' 1U', 
    'timeIncrement': 0.0142543584108353, 'increment': 44, 
    'stepTime': 0.587616899830755, 'step': 2, 
    'jobName': 'Job20230710topDownClamp', 'severe': 12, 'iterations': 12, 
    'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job20230710topDownClamp']._Message(STATUS, {
    'totalTime': 1.59118048943346, 'attempts': 2, 
    'timeIncrement': 0.00356358960270882, 'increment': 44, 
    'stepTime': 0.591180489433464, 'step': 2, 
    'jobName': 'Job20230710topDownClamp', 'severe': 2, 'iterations': 3, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230710topDownClamp']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 44, 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(STATUS, {
    'totalTime': 1.59652587383753, 'attempts': 1, 
    'timeIncrement': 0.00534538440406323, 'increment': 45, 
    'stepTime': 0.596525873837527, 'step': 2, 
    'jobName': 'Job20230710topDownClamp', 'severe': 2, 'iterations': 4, 
    'phase': STANDARD_PHASE, 'equilibrium': 2})
mdb.jobs['Job20230710topDownClamp']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 45, 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'THE STRAIN INCREMENT HAS EXCEEDED FIFTY TIMES THE STRAIN TO CAUSE FIRST YIELD AT 2 POINTS', 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(STATUS, {
    'totalTime': 1.59652587383753, 'attempts': ' 1U', 
    'timeIncrement': 0.00801807660609484, 'increment': 46, 
    'stepTime': 0.596525873837527, 'step': 2, 
    'jobName': 'Job20230710topDownClamp', 'severe': 5, 'iterations': 5, 
    'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job20230710topDownClamp']._Message(STATUS, {
    'totalTime': 1.59853039298905, 'attempts': 2, 
    'timeIncrement': 0.00200451915152371, 'increment': 46, 
    'stepTime': 0.598530392989051, 'step': 2, 
    'jobName': 'Job20230710topDownClamp', 'severe': 2, 'iterations': 3, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230710topDownClamp']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 46, 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(STATUS, {
    'totalTime': 1.60153717171634, 'attempts': 1, 
    'timeIncrement': 0.00300677872728556, 'increment': 47, 
    'stepTime': 0.601537171716336, 'step': 2, 
    'jobName': 'Job20230710topDownClamp', 'severe': 3, 'iterations': 8, 
    'phase': STANDARD_PHASE, 'equilibrium': 5})
mdb.jobs['Job20230710topDownClamp']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 47, 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(STATUS, {
    'totalTime': 1.60153717171634, 'attempts': ' 1U', 
    'timeIncrement': 0.00300677872728556, 'increment': 48, 
    'stepTime': 0.601537171716336, 'step': 2, 
    'jobName': 'Job20230710topDownClamp', 'severe': 15, 'iterations': 15, 
    'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job20230710topDownClamp']._Message(STATUS, {
    'totalTime': 1.60228886639816, 'attempts': 2, 
    'timeIncrement': 0.000751694681821391, 'increment': 48, 
    'stepTime': 0.602288866398158, 'step': 2, 
    'jobName': 'Job20230710topDownClamp', 'severe': 1, 'iterations': 7, 
    'phase': STANDARD_PHASE, 'equilibrium': 6})
mdb.jobs['Job20230710topDownClamp']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 48, 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(STATUS, {
    'totalTime': 1.60304056107998, 'attempts': 1, 
    'timeIncrement': 0.000751694681821391, 'increment': 49, 
    'stepTime': 0.603040561079979, 'step': 2, 
    'jobName': 'Job20230710topDownClamp', 'severe': 2, 'iterations': 7, 
    'phase': STANDARD_PHASE, 'equilibrium': 5})
mdb.jobs['Job20230710topDownClamp']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 49, 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(STATUS, {
    'totalTime': 1.6037922557618, 'attempts': 1, 
    'timeIncrement': 0.000751694681821391, 'increment': 50, 
    'stepTime': 0.6037922557618, 'step': 2, 
    'jobName': 'Job20230710topDownClamp', 'severe': 2, 'iterations': 9, 
    'phase': STANDARD_PHASE, 'equilibrium': 7})
mdb.jobs['Job20230710topDownClamp']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 50, 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(STATUS, {
    'totalTime': 1.60454395044362, 'attempts': 1, 
    'timeIncrement': 0.000751694681821391, 'increment': 51, 
    'stepTime': 0.604543950443622, 'step': 2, 
    'jobName': 'Job20230710topDownClamp', 'severe': 3, 'iterations': 12, 
    'phase': STANDARD_PHASE, 'equilibrium': 9})
mdb.jobs['Job20230710topDownClamp']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 51, 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'FORCE equilibrium accepted using the alternate tolerance.', 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(STATUS, {
    'totalTime': 1.60529564512544, 'attempts': 1, 
    'timeIncrement': 0.000751694681821391, 'increment': 52, 
    'stepTime': 0.605295645125443, 'step': 2, 
    'jobName': 'Job20230710topDownClamp', 'severe': 1, 'iterations': 14, 
    'phase': STANDARD_PHASE, 'equilibrium': 13})
mdb.jobs['Job20230710topDownClamp']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 52, 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(STATUS, {
    'totalTime': 1.60529564512544, 'attempts': ' 1U', 
    'timeIncrement': 0.000563771011366043, 'increment': 53, 
    'stepTime': 0.605295645125443, 'step': 2, 
    'jobName': 'Job20230710topDownClamp', 'severe': 1, 'iterations': 5, 
    'phase': STANDARD_PHASE, 'equilibrium': 4})
mdb.jobs['Job20230710topDownClamp']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'FORCE equilibrium accepted using the alternate tolerance.', 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(STATUS, {
    'totalTime': 1.60543658787828, 'attempts': 2, 
    'timeIncrement': 0.000140942752841511, 'increment': 53, 
    'stepTime': 0.605436587878284, 'step': 2, 
    'jobName': 'Job20230710topDownClamp', 'severe': 1, 'iterations': 11, 
    'phase': STANDARD_PHASE, 'equilibrium': 10})
mdb.jobs['Job20230710topDownClamp']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 53, 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'FORCE equilibrium accepted using the alternate tolerance.', 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(STATUS, {
    'totalTime': 1.60557753063113, 'attempts': 1, 
    'timeIncrement': 0.000140942752841511, 'increment': 54, 
    'stepTime': 0.605577530631126, 'step': 2, 
    'jobName': 'Job20230710topDownClamp', 'severe': 1, 'iterations': 11, 
    'phase': STANDARD_PHASE, 'equilibrium': 10})
mdb.jobs['Job20230710topDownClamp']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 54, 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(STATUS, {
    'totalTime': 1.60557753063113, 'attempts': ' 1U', 
    'timeIncrement': 0.000140942752841511, 'increment': 55, 
    'stepTime': 0.605577530631126, 'step': 2, 
    'jobName': 'Job20230710topDownClamp', 'severe': 1, 'iterations': 10, 
    'phase': STANDARD_PHASE, 'equilibrium': 9})
mdb.jobs['Job20230710topDownClamp']._Message(STATUS, {
    'totalTime': 1.60557753063113, 'attempts': ' 2U', 
    'timeIncrement': 7.04713764207554e-05, 'increment': 55, 
    'stepTime': 0.605577530631126, 'step': 2, 
    'jobName': 'Job20230710topDownClamp', 'severe': 1, 'iterations': 17, 
    'phase': STANDARD_PHASE, 'equilibrium': 16})
mdb.jobs['Job20230710topDownClamp']._Message(STATUS, {
    'totalTime': 1.60557753063113, 'attempts': ' 3U', 
    'timeIncrement': 1.76178441051889e-05, 'increment': 55, 
    'stepTime': 0.605577530631126, 'step': 2, 
    'jobName': 'Job20230710topDownClamp', 'severe': 0, 'iterations': 16, 
    'phase': STANDARD_PHASE, 'equilibrium': 16})
mdb.jobs['Job20230710topDownClamp']._Message(ERROR, {'phase': STANDARD_PHASE, 
    'message': 'Time increment required is less than the minimum specified', 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(STATUS, {
    'totalTime': 1.60557753063113, 'attempts': ' 4U', 'timeIncrement': 1e-05, 
    'increment': 55, 'stepTime': 0.605577530631126, 'step': 2, 
    'jobName': 'Job20230710topDownClamp', 'severe': 1, 'iterations': 17, 
    'phase': STANDARD_PHASE, 'equilibrium': 16})
mdb.jobs['Job20230710topDownClamp']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 55, 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(STATUS, {
    'totalTime': 1.60557753063113, 'attempts': 5, 'timeIncrement': 1e-35, 
    'increment': 55, 'stepTime': 0.605577530631126, 'step': 2, 
    'jobName': 'Job20230710topDownClamp', 'severe': 0, 'iterations': 0, 
    'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job20230710topDownClamp']._Message(ERROR, {'phase': STANDARD_PHASE, 
    'message': 'THE ANALYSIS HAS BEEN TERMINATED DUE TO PREVIOUS ERRORS. ALL OUTPUT REQUESTS HAVE BEEN WRITTEN FOR THE LAST CONVERGED INCREMENT.', 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(ABORTED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase failed due to errors', 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(ERROR, {
    'message': 'Abaqus/Standard Analysis exited with an error - Please see the  message file for possible error messages if the file exists.', 
    'jobName': 'Job20230710topDownClamp'})
mdb.jobs['Job20230710topDownClamp']._Message(JOB_ABORTED, {
    'message': 'Abaqus/Standard Analysis exited with an error - Please see the  message file for possible error messages if the file exists.', 
    'jobName': 'Job20230710topDownClamp'})
mdb.models['Model-1'].boundaryConditions['mfEnd3'].setValuesInStep(stepName=
    'cyclicLoading', u1=5.0, u2=0.0)
mdb.models['Model-1'].boundaryConditions['mfEnd4'].setValuesInStep(stepName=
    'cyclicLoading', u1=5.0, u2=0.0)
mdb.Job(name='Job20230720topDownClampDispX', objectToCopy=
    mdb.jobs['Job20230710topDownClamp'])
# Save by xinlo on 2023_07_20-17.52.44; build 2017 2016_09_27-14.54.59 126836
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['Job20230720topDownClampDispX'].submit(consistencyChecking=OFF)
mdb.jobs['Job20230720topDownClampDispX']._Message(STARTED, {
    'phase': BATCHPRE_PHASE, 'clientHost': 'DESKTOP-A24BAF5', 'handle': 0, 
    'jobName': 'Job20230720topDownClampDispX'})
mdb.jobs['Job20230720topDownClampDispX']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'WHENEVER A TRANSLATION (ROTATION) DOF AT A NODE IS CONSTRAINED BY A KINEMATIC COUPLING DEFINITION THE TRANSLATION (ROTATION) DOFS FOR THAT NODE CANNOT BE INCLUDED IN ANY OTHER CONSTRAINT INCLUDING MPCS, RIGID BODIES, ETC.', 
    'jobName': 'Job20230720topDownClampDispX'})
mdb.jobs['Job20230720topDownClampDispX']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'MPCS (EXTERNAL or INTERNAL, including those generated from rigid body definitions), KINEMATIC COUPLINGS, AND/OR EQUATIONS WILL ACTIVATE ADDITIONAL DEGREES OF FREEDOM', 
    'jobName': 'Job20230720topDownClampDispX'})
mdb.jobs['Job20230720topDownClampDispX']._Message(ODB_FILE, {
    'phase': BATCHPRE_PHASE, 
    'file': 'C:\\temp\\Job20230720topDownClampDispX.odb', 
    'jobName': 'Job20230720topDownClampDispX'})
mdb.jobs['Job20230720topDownClampDispX']._Message(COMPLETED, {
    'phase': BATCHPRE_PHASE, 'message': 'Analysis phase complete', 
    'jobName': 'Job20230720topDownClampDispX'})
mdb.jobs['Job20230720topDownClampDispX']._Message(STARTED, {
    'phase': STANDARD_PHASE, 'clientHost': 'DESKTOP-A24BAF5', 'handle': 36448, 
    'jobName': 'Job20230720topDownClampDispX'})
mdb.jobs['Job20230720topDownClampDispX']._Message(STEP, {
    'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job20230720topDownClampDispX'})
mdb.jobs['Job20230720topDownClampDispX']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 0, 
    'jobName': 'Job20230720topDownClampDispX'})
mdb.jobs['Job20230720topDownClampDispX']._Message(MEMORY_ESTIMATE, {
    'phase': STANDARD_PHASE, 'jobName': 'Job20230720topDownClampDispX', 
    'memory': 7975.0})
mdb.jobs['Job20230720topDownClampDispX']._Message(PHYSICAL_MEMORY, {
    'phase': STANDARD_PHASE, 'physical_memory': 32620.0, 
    'jobName': 'Job20230720topDownClampDispX'})
mdb.jobs['Job20230720topDownClampDispX']._Message(MINIMUM_MEMORY, {
    'minimum_memory': 844.0, 'phase': STANDARD_PHASE, 
    'jobName': 'Job20230720topDownClampDispX'})
mdb.jobs['Job20230720topDownClampDispX']._Message(STATUS, {'totalTime': 0.1, 
    'attempts': 1, 'timeIncrement': 0.1, 'increment': 1, 'stepTime': 0.1, 
    'step': 1, 'jobName': 'Job20230720topDownClampDispX', 'severe': 27, 
    'iterations': 27, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job20230720topDownClampDispX']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 1, 
    'jobName': 'Job20230720topDownClampDispX'})
mdb.jobs['Job20230720topDownClampDispX']._Message(STATUS, {'totalTime': 0.2, 
    'attempts': 1, 'timeIncrement': 0.1, 'increment': 2, 'stepTime': 0.2, 
    'step': 1, 'jobName': 'Job20230720topDownClampDispX', 'severe': 9, 
    'iterations': 10, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230720topDownClampDispX']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 2, 
    'jobName': 'Job20230720topDownClampDispX'})
mdb.jobs['Job20230720topDownClampDispX']._Message(STATUS, {'totalTime': 0.3, 
    'attempts': 1, 'timeIncrement': 0.1, 'increment': 3, 'stepTime': 0.3, 
    'step': 1, 'jobName': 'Job20230720topDownClampDispX', 'severe': 7, 
    'iterations': 8, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230720topDownClampDispX']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 3, 
    'jobName': 'Job20230720topDownClampDispX'})
mdb.jobs['Job20230720topDownClampDispX']._Message(ERROR, {
    'phase': STANDARD_PHASE, 
    'message': 'Process terminated by external request (SIGTERM or SIGINT received).', 
    'jobName': 'Job20230720topDownClampDispX'})
mdb.jobs['Job20230720topDownClampDispX']._Message(INTERRUPTED, {
    'phase': STANDARD_PHASE, 
    'message': 'Analysis interrupted by external signal', 
    'jobName': 'Job20230720topDownClampDispX'})
mdb.jobs['Job20230720topDownClampDispX']._Message(ERROR, {
    'message': 'Abaqus/Standard Analysis exited with an error - Please see the  message file for possible error messages if the file exists.', 
    'jobName': 'Job20230720topDownClampDispX'})
mdb.jobs['Job20230720topDownClampDispX']._Message(JOB_ABORTED, {
    'message': 'Abaqus/Standard Analysis exited with an error - Please see the  message file for possible error messages if the file exists.', 
    'jobName': 'Job20230720topDownClampDispX'})
mdb.jobs['Job20230720topDownClampDispX'].submit(consistencyChecking=OFF)
mdb.jobs['Job20230720topDownClampDispX']._Message(STARTED, {
    'phase': BATCHPRE_PHASE, 'clientHost': 'DESKTOP-A24BAF5', 'handle': 0, 
    'jobName': 'Job20230720topDownClampDispX'})
# Save by xinlo on 2023_07_20-18.31.17; build 2017 2016_09_27-14.54.59 126836
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['Job20230720topDownClampDispX']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'WHENEVER A TRANSLATION (ROTATION) DOF AT A NODE IS CONSTRAINED BY A KINEMATIC COUPLING DEFINITION THE TRANSLATION (ROTATION) DOFS FOR THAT NODE CANNOT BE INCLUDED IN ANY OTHER CONSTRAINT INCLUDING MPCS, RIGID BODIES, ETC.', 
    'jobName': 'Job20230720topDownClampDispX'})
mdb.jobs['Job20230720topDownClampDispX']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'MPCS (EXTERNAL or INTERNAL, including those generated from rigid body definitions), KINEMATIC COUPLINGS, AND/OR EQUATIONS WILL ACTIVATE ADDITIONAL DEGREES OF FREEDOM', 
    'jobName': 'Job20230720topDownClampDispX'})
mdb.jobs['Job20230720topDownClampDispX']._Message(ODB_FILE, {
    'phase': BATCHPRE_PHASE, 
    'file': 'C:\\temp\\Job20230720topDownClampDispX.odb', 
    'jobName': 'Job20230720topDownClampDispX'})
mdb.jobs['Job20230720topDownClampDispX']._Message(COMPLETED, {
    'phase': BATCHPRE_PHASE, 'message': 'Analysis phase complete', 
    'jobName': 'Job20230720topDownClampDispX'})
mdb.jobs['Job20230720topDownClampDispX']._Message(STARTED, {
    'phase': STANDARD_PHASE, 'clientHost': 'DESKTOP-A24BAF5', 'handle': 24944, 
    'jobName': 'Job20230720topDownClampDispX'})
mdb.jobs['Job20230720topDownClampDispX']._Message(STEP, {
    'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job20230720topDownClampDispX'})
mdb.jobs['Job20230720topDownClampDispX']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 0, 
    'jobName': 'Job20230720topDownClampDispX'})
mdb.jobs['Job20230720topDownClampDispX']._Message(MEMORY_ESTIMATE, {
    'phase': STANDARD_PHASE, 'jobName': 'Job20230720topDownClampDispX', 
    'memory': 7975.0})
mdb.jobs['Job20230720topDownClampDispX']._Message(PHYSICAL_MEMORY, {
    'phase': STANDARD_PHASE, 'physical_memory': 32620.0, 
    'jobName': 'Job20230720topDownClampDispX'})
mdb.jobs['Job20230720topDownClampDispX']._Message(MINIMUM_MEMORY, {
    'minimum_memory': 844.0, 'phase': STANDARD_PHASE, 
    'jobName': 'Job20230720topDownClampDispX'})
mdb.jobs['Job20230720topDownClampDispX']._Message(STATUS, {'totalTime': 0.1, 
    'attempts': 1, 'timeIncrement': 0.1, 'increment': 1, 'stepTime': 0.1, 
    'step': 1, 'jobName': 'Job20230720topDownClampDispX', 'severe': 27, 
    'iterations': 27, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job20230720topDownClampDispX']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 1, 
    'jobName': 'Job20230720topDownClampDispX'})
mdb.jobs['Job20230720topDownClampDispX']._Message(STATUS, {'totalTime': 0.2, 
    'attempts': 1, 'timeIncrement': 0.1, 'increment': 2, 'stepTime': 0.2, 
    'step': 1, 'jobName': 'Job20230720topDownClampDispX', 'severe': 9, 
    'iterations': 10, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230720topDownClampDispX']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 2, 
    'jobName': 'Job20230720topDownClampDispX'})
mdb.jobs['Job20230720topDownClampDispX']._Message(STATUS, {'totalTime': 0.3, 
    'attempts': 1, 'timeIncrement': 0.1, 'increment': 3, 'stepTime': 0.3, 
    'step': 1, 'jobName': 'Job20230720topDownClampDispX', 'severe': 7, 
    'iterations': 8, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230720topDownClampDispX']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 3, 
    'jobName': 'Job20230720topDownClampDispX'})
mdb.jobs['Job20230720topDownClampDispX']._Message(STATUS, {'totalTime': 0.45, 
    'attempts': 1, 'timeIncrement': 0.15, 'increment': 4, 'stepTime': 0.45, 
    'step': 1, 'jobName': 'Job20230720topDownClampDispX', 'severe': 4, 
    'iterations': 5, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230720topDownClampDispX']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 4, 
    'jobName': 'Job20230720topDownClampDispX'})
mdb.jobs['Job20230720topDownClampDispX']._Message(STATUS, {'totalTime': 0.675, 
    'attempts': 1, 'timeIncrement': 0.225, 'increment': 5, 'stepTime': 0.675, 
    'step': 1, 'jobName': 'Job20230720topDownClampDispX', 'severe': 2, 
    'iterations': 3, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230720topDownClampDispX']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 5, 
    'jobName': 'Job20230720topDownClampDispX'})
mdb.jobs['Job20230720topDownClampDispX']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 6, 
    'jobName': 'Job20230720topDownClampDispX'})
mdb.jobs['Job20230720topDownClampDispX']._Message(STATUS, {'totalTime': 1.0, 
    'attempts': 1, 'timeIncrement': 0.325, 'increment': 6, 'stepTime': 1.0, 
    'step': 1, 'jobName': 'Job20230720topDownClampDispX', 'severe': 7, 
    'iterations': 8, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230720topDownClampDispX']._Message(END_STEP, {
    'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job20230720topDownClampDispX'})
mdb.jobs['Job20230720topDownClampDispX']._Message(STEP, {
    'phase': STANDARD_PHASE, 'stepId': 2, 
    'jobName': 'Job20230720topDownClampDispX'})
mdb.jobs['Job20230720topDownClampDispX']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 0, 
    'jobName': 'Job20230720topDownClampDispX'})
mdb.jobs['Job20230720topDownClampDispX']._Message(MEMORY_ESTIMATE, {
    'phase': STANDARD_PHASE, 'jobName': 'Job20230720topDownClampDispX', 
    'memory': 7424.0})
mdb.jobs['Job20230720topDownClampDispX']._Message(PHYSICAL_MEMORY, {
    'phase': STANDARD_PHASE, 'physical_memory': 32620.0, 
    'jobName': 'Job20230720topDownClampDispX'})
mdb.jobs['Job20230720topDownClampDispX']._Message(MINIMUM_MEMORY, {
    'minimum_memory': 822.0, 'phase': STANDARD_PHASE, 
    'jobName': 'Job20230720topDownClampDispX'})
mdb.jobs['Job20230720topDownClampDispX']._Message(STATUS, {'totalTime': 1.05, 
    'attempts': 1, 'timeIncrement': 0.05, 'increment': 1, 'stepTime': 0.05, 
    'step': 2, 'jobName': 'Job20230720topDownClampDispX', 'severe': 21, 
    'iterations': 22, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230720topDownClampDispX']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 1, 
    'jobName': 'Job20230720topDownClampDispX'})
mdb.jobs['Job20230720topDownClampDispX']._Message(STATUS, {'totalTime': 1.1, 
    'attempts': 1, 'timeIncrement': 0.05, 'increment': 2, 'stepTime': 0.1, 
    'step': 2, 'jobName': 'Job20230720topDownClampDispX', 'severe': 6, 
    'iterations': 7, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230720topDownClampDispX']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 2, 
    'jobName': 'Job20230720topDownClampDispX'})
mdb.jobs['Job20230720topDownClampDispX']._Message(STATUS, {'totalTime': 1.15, 
    'attempts': 1, 'timeIncrement': 0.05, 'increment': 3, 'stepTime': 0.15, 
    'step': 2, 'jobName': 'Job20230720topDownClampDispX', 'severe': 7, 
    'iterations': 7, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job20230720topDownClampDispX']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 3, 
    'jobName': 'Job20230720topDownClampDispX'})
mdb.jobs['Job20230720topDownClampDispX']._Message(STATUS, {'totalTime': 1.2, 
    'attempts': 1, 'timeIncrement': 0.05, 'increment': 4, 'stepTime': 0.2, 
    'step': 2, 'jobName': 'Job20230720topDownClampDispX', 'severe': 7, 
    'iterations': 8, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230720topDownClampDispX']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 4, 
    'jobName': 'Job20230720topDownClampDispX'})
mdb.jobs['Job20230720topDownClampDispX']._Message(STATUS, {'totalTime': 1.25, 
    'attempts': 1, 'timeIncrement': 0.05, 'increment': 5, 'stepTime': 0.25, 
    'step': 2, 'jobName': 'Job20230720topDownClampDispX', 'severe': 6, 
    'iterations': 7, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230720topDownClampDispX']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 5, 
    'jobName': 'Job20230720topDownClampDispX'})
mdb.jobs['Job20230720topDownClampDispX']._Message(STATUS, {'totalTime': 1.3, 
    'attempts': 1, 'timeIncrement': 0.05, 'increment': 6, 'stepTime': 0.3, 
    'step': 2, 'jobName': 'Job20230720topDownClampDispX', 'severe': 14, 
    'iterations': 15, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230720topDownClampDispX']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 6, 
    'jobName': 'Job20230720topDownClampDispX'})
mdb.jobs['Job20230720topDownClampDispX']._Message(STATUS, {'totalTime': 1.35, 
    'attempts': 1, 'timeIncrement': 0.05, 'increment': 7, 'stepTime': 0.35, 
    'step': 2, 'jobName': 'Job20230720topDownClampDispX', 'severe': 6, 
    'iterations': 7, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230720topDownClampDispX']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 7, 
    'jobName': 'Job20230720topDownClampDispX'})
mdb.jobs['Job20230720topDownClampDispX']._Message(STATUS, {'totalTime': 1.4, 
    'attempts': 1, 'timeIncrement': 0.05, 'increment': 8, 'stepTime': 0.4, 
    'step': 2, 'jobName': 'Job20230720topDownClampDispX', 'severe': 3, 
    'iterations': 5, 'phase': STANDARD_PHASE, 'equilibrium': 2})
mdb.jobs['Job20230720topDownClampDispX']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 8, 
    'jobName': 'Job20230720topDownClampDispX'})
mdb.jobs['Job20230720topDownClampDispX']._Message(STATUS, {'totalTime': 1.45, 
    'attempts': 1, 'timeIncrement': 0.05, 'increment': 9, 'stepTime': 0.45, 
    'step': 2, 'jobName': 'Job20230720topDownClampDispX', 'severe': 5, 
    'iterations': 6, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230720topDownClampDispX']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 9, 
    'jobName': 'Job20230720topDownClampDispX'})
mdb.jobs['Job20230720topDownClampDispX']._Message(STATUS, {'totalTime': 1.45, 
    'attempts': ' 1U', 'timeIncrement': 0.05, 'increment': 10, 
    'stepTime': 0.45, 'step': 2, 'jobName': 'Job20230720topDownClampDispX', 
    'severe': 4, 'iterations': 4, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job20230720topDownClampDispX']._Message(STATUS, {'totalTime': 1.4625, 
    'attempts': 2, 'timeIncrement': 0.0125, 'increment': 10, 
    'stepTime': 0.4625, 'step': 2, 'jobName': 'Job20230720topDownClampDispX', 
    'severe': 2, 'iterations': 3, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230720topDownClampDispX']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 10, 
    'jobName': 'Job20230720topDownClampDispX'})
mdb.jobs['Job20230720topDownClampDispX']._Message(STATUS, {
    'totalTime': 1.48125, 'attempts': 1, 'timeIncrement': 0.01875, 
    'increment': 11, 'stepTime': 0.48125, 'step': 2, 
    'jobName': 'Job20230720topDownClampDispX', 'severe': 10, 'iterations': 11, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230720topDownClampDispX']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 11, 
    'jobName': 'Job20230720topDownClampDispX'})
mdb.jobs['Job20230720topDownClampDispX']._Message(STATUS, {
    'totalTime': 1.4953125, 'attempts': 1, 'timeIncrement': 0.0140625, 
    'increment': 12, 'stepTime': 0.4953125, 'step': 2, 
    'jobName': 'Job20230720topDownClampDispX', 'severe': 3, 'iterations': 4, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230720topDownClampDispX']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 12, 
    'jobName': 'Job20230720topDownClampDispX'})
mdb.jobs['Job20230720topDownClampDispX']._Message(STATUS, {
    'totalTime': 1.509375, 'attempts': 1, 'timeIncrement': 0.0140625, 
    'increment': 13, 'stepTime': 0.509375, 'step': 2, 
    'jobName': 'Job20230720topDownClampDispX', 'severe': 4, 'iterations': 5, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230720topDownClampDispX']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 13, 
    'jobName': 'Job20230720topDownClampDispX'})
mdb.jobs['Job20230720topDownClampDispX']._Message(STATUS, {
    'totalTime': 1.53046875, 'attempts': 1, 'timeIncrement': 0.02109375, 
    'increment': 14, 'stepTime': 0.53046875, 'step': 2, 
    'jobName': 'Job20230720topDownClampDispX', 'severe': 3, 'iterations': 4, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230720topDownClampDispX']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 14, 
    'jobName': 'Job20230720topDownClampDispX'})
mdb.jobs['Job20230720topDownClampDispX']._Message(STATUS, {
    'totalTime': 1.562109375, 'attempts': 1, 'timeIncrement': 0.031640625, 
    'increment': 15, 'stepTime': 0.562109375, 'step': 2, 
    'jobName': 'Job20230720topDownClampDispX', 'severe': 16, 'iterations': 17, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230720topDownClampDispX']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 15, 
    'jobName': 'Job20230720topDownClampDispX'})
mdb.jobs['Job20230720topDownClampDispX']._Message(STATUS, {
    'totalTime': 1.58583984375, 'attempts': 1, 'timeIncrement': 0.02373046875, 
    'increment': 16, 'stepTime': 0.58583984375, 'step': 2, 
    'jobName': 'Job20230720topDownClampDispX', 'severe': 12, 'iterations': 13, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230720topDownClampDispX']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 16, 
    'jobName': 'Job20230720topDownClampDispX'})
mdb.jobs['Job20230720topDownClampDispX']._Message(STATUS, {
    'totalTime': 1.58583984375, 'attempts': ' 1U', 
    'timeIncrement': 0.02373046875, 'increment': 17, 'stepTime': 0.58583984375, 
    'step': 2, 'jobName': 'Job20230720topDownClampDispX', 'severe': 4, 
    'iterations': 4, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job20230720topDownClampDispX']._Message(STATUS, {
    'totalTime': 1.5917724609375, 'attempts': 2, 
    'timeIncrement': 0.0059326171875, 'increment': 17, 
    'stepTime': 0.5917724609375, 'step': 2, 
    'jobName': 'Job20230720topDownClampDispX', 'severe': 4, 'iterations': 4, 
    'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job20230720topDownClampDispX']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 17, 
    'jobName': 'Job20230720topDownClampDispX'})
mdb.jobs['Job20230720topDownClampDispX']._Message(STATUS, {
    'totalTime': 1.60067138671875, 'attempts': 1, 
    'timeIncrement': 0.00889892578125, 'increment': 18, 
    'stepTime': 0.60067138671875, 'step': 2, 
    'jobName': 'Job20230720topDownClampDispX', 'severe': 4, 'iterations': 5, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230720topDownClampDispX']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 18, 
    'jobName': 'Job20230720topDownClampDispX'})
mdb.jobs['Job20230720topDownClampDispX']._Message(WARNING, {
    'phase': STANDARD_PHASE, 
    'message': 'DISPLACEMENT INCREMENT FOR CONTACT IS TOO BIG.', 
    'jobName': 'Job20230720topDownClampDispX'})
mdb.jobs['Job20230720topDownClampDispX']._Message(WARNING, {
    'phase': STANDARD_PHASE, 
    'message': 'DISPLACEMENT INCREMENT FOR CONTACT IS TOO BIG.', 
    'jobName': 'Job20230720topDownClampDispX'})
mdb.jobs['Job20230720topDownClampDispX']._Message(WARNING, {
    'phase': STANDARD_PHASE, 
    'message': 'DISPLACEMENT INCREMENT FOR CONTACT IS TOO BIG.', 
    'jobName': 'Job20230720topDownClampDispX'})
mdb.jobs['Job20230720topDownClampDispX']._Message(STATUS, {
    'totalTime': 1.60067138671875, 'attempts': ' 1U', 
    'timeIncrement': 0.013348388671875, 'increment': 19, 
    'stepTime': 0.60067138671875, 'step': 2, 
    'jobName': 'Job20230720topDownClampDispX', 'severe': 3, 'iterations': 4, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230720topDownClampDispX']._Message(STATUS, {
    'totalTime': 1.60400848388672, 'attempts': 2, 
    'timeIncrement': 0.00333709716796875, 'increment': 19, 
    'stepTime': 0.604008483886719, 'step': 2, 
    'jobName': 'Job20230720topDownClampDispX', 'severe': 4, 'iterations': 5, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230720topDownClampDispX']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 19, 
    'jobName': 'Job20230720topDownClampDispX'})
mdb.jobs['Job20230720topDownClampDispX']._Message(STATUS, {
    'totalTime': 1.60901412963867, 'attempts': 1, 
    'timeIncrement': 0.00500564575195313, 'increment': 20, 
    'stepTime': 0.609014129638672, 'step': 2, 
    'jobName': 'Job20230720topDownClampDispX', 'severe': 5, 'iterations': 6, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230720topDownClampDispX']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 20, 
    'jobName': 'Job20230720topDownClampDispX'})
mdb.jobs['Job20230720topDownClampDispX']._Message(STATUS, {
    'totalTime': 1.6165225982666, 'attempts': 1, 
    'timeIncrement': 0.00750846862792969, 'increment': 21, 
    'stepTime': 0.616522598266601, 'step': 2, 
    'jobName': 'Job20230720topDownClampDispX', 'severe': 8, 'iterations': 10, 
    'phase': STANDARD_PHASE, 'equilibrium': 2})
mdb.jobs['Job20230720topDownClampDispX']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 21, 
    'jobName': 'Job20230720topDownClampDispX'})
mdb.jobs['Job20230720topDownClampDispX']._Message(STATUS, {
    'totalTime': 1.6277853012085, 'attempts': 1, 
    'timeIncrement': 0.0112627029418945, 'increment': 22, 
    'stepTime': 0.627785301208496, 'step': 2, 
    'jobName': 'Job20230720topDownClampDispX', 'severe': 12, 'iterations': 13, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230720topDownClampDispX']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 22, 
    'jobName': 'Job20230720topDownClampDispX'})
mdb.jobs['Job20230720topDownClampDispX']._Message(STATUS, {
    'totalTime': 1.64467935562134, 'attempts': 1, 
    'timeIncrement': 0.0168940544128418, 'increment': 23, 
    'stepTime': 0.644679355621338, 'step': 2, 
    'jobName': 'Job20230720topDownClampDispX', 'severe': 4, 'iterations': 6, 
    'phase': STANDARD_PHASE, 'equilibrium': 2})
mdb.jobs['Job20230720topDownClampDispX']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 23, 
    'jobName': 'Job20230720topDownClampDispX'})
mdb.jobs['Job20230720topDownClampDispX']._Message(STATUS, {
    'totalTime': 1.6700204372406, 'attempts': 1, 
    'timeIncrement': 0.0253410816192627, 'increment': 24, 
    'stepTime': 0.6700204372406, 'step': 2, 
    'jobName': 'Job20230720topDownClampDispX', 'severe': 4, 'iterations': 6, 
    'phase': STANDARD_PHASE, 'equilibrium': 2})
mdb.jobs['Job20230720topDownClampDispX']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 24, 
    'jobName': 'Job20230720topDownClampDispX'})
mdb.jobs['Job20230720topDownClampDispX']._Message(STATUS, {
    'totalTime': 1.7080320596695, 'attempts': 1, 
    'timeIncrement': 0.038011622428894, 'increment': 25, 
    'stepTime': 0.708032059669494, 'step': 2, 
    'jobName': 'Job20230720topDownClampDispX', 'severe': 5, 'iterations': 5, 
    'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job20230720topDownClampDispX']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 25, 
    'jobName': 'Job20230720topDownClampDispX'})
mdb.jobs['Job20230720topDownClampDispX']._Message(STATUS, {
    'totalTime': 1.7580320596695, 'attempts': 1, 'timeIncrement': 0.05, 
    'increment': 26, 'stepTime': 0.758032059669495, 'step': 2, 
    'jobName': 'Job20230720topDownClampDispX', 'severe': 5, 'iterations': 6, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230720topDownClampDispX']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 26, 
    'jobName': 'Job20230720topDownClampDispX'})
mdb.jobs['Job20230720topDownClampDispX']._Message(WARNING, {
    'phase': STANDARD_PHASE, 
    'message': 'THE STRAIN INCREMENT HAS EXCEEDED FIFTY TIMES THE STRAIN TO CAUSE FIRST YIELD AT 266 POINTS', 
    'jobName': 'Job20230720topDownClampDispX'})
mdb.jobs['Job20230720topDownClampDispX']._Message(WARNING, {
    'phase': STANDARD_PHASE, 
    'message': 'THE STRAIN INCREMENT IS SO LARGE THAT THE PROGRAM WILL NOT ATTEMPT THE PLASTICITY CALCULATION AT 2 POINTS', 
    'jobName': 'Job20230720topDownClampDispX'})
mdb.jobs['Job20230720topDownClampDispX']._Message(STATUS, {
    'totalTime': 1.7580320596695, 'attempts': ' 1U', 'timeIncrement': 0.05, 
    'increment': 27, 'stepTime': 0.758032059669495, 'step': 2, 
    'jobName': 'Job20230720topDownClampDispX', 'severe': 1, 'iterations': 2, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230720topDownClampDispX']._Message(STATUS, {
    'totalTime': 1.7705320596695, 'attempts': 2, 'timeIncrement': 0.0125, 
    'increment': 27, 'stepTime': 0.770532059669494, 'step': 2, 
    'jobName': 'Job20230720topDownClampDispX', 'severe': 7, 'iterations': 8, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230720topDownClampDispX']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 27, 
    'jobName': 'Job20230720topDownClampDispX'})
mdb.jobs['Job20230720topDownClampDispX']._Message(STATUS, {
    'totalTime': 1.7705320596695, 'attempts': ' 1U', 'timeIncrement': 0.01875, 
    'increment': 28, 'stepTime': 0.770532059669494, 'step': 2, 
    'jobName': 'Job20230720topDownClampDispX', 'severe': 8, 'iterations': 8, 
    'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job20230720topDownClampDispX']._Message(STATUS, {
    'totalTime': 1.7752195596695, 'attempts': 2, 'timeIncrement': 0.0046875, 
    'increment': 28, 'stepTime': 0.775219559669494, 'step': 2, 
    'jobName': 'Job20230720topDownClampDispX', 'severe': 3, 'iterations': 4, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230720topDownClampDispX']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 28, 
    'jobName': 'Job20230720topDownClampDispX'})
mdb.jobs['Job20230720topDownClampDispX']._Message(STATUS, {
    'totalTime': 1.7822508096695, 'attempts': 1, 'timeIncrement': 0.00703125, 
    'increment': 29, 'stepTime': 0.782250809669494, 'step': 2, 
    'jobName': 'Job20230720topDownClampDispX', 'severe': 2, 'iterations': 3, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230720topDownClampDispX']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 29, 
    'jobName': 'Job20230720topDownClampDispX'})
mdb.jobs['Job20230720topDownClampDispX']._Message(STATUS, {
    'totalTime': 1.7927976846695, 'attempts': 1, 'timeIncrement': 0.010546875, 
    'increment': 30, 'stepTime': 0.792797684669494, 'step': 2, 
    'jobName': 'Job20230720topDownClampDispX', 'severe': 3, 'iterations': 4, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230720topDownClampDispX']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 30, 
    'jobName': 'Job20230720topDownClampDispX'})
mdb.jobs['Job20230720topDownClampDispX']._Message(STATUS, {
    'totalTime': 1.7927976846695, 'attempts': ' 1U', 
    'timeIncrement': 0.0158203125, 'increment': 31, 
    'stepTime': 0.792797684669494, 'step': 2, 
    'jobName': 'Job20230720topDownClampDispX', 'severe': 7, 'iterations': 7, 
    'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job20230720topDownClampDispX']._Message(STATUS, {
    'totalTime': 1.7967527627945, 'attempts': 2, 
    'timeIncrement': 0.003955078125, 'increment': 31, 
    'stepTime': 0.796752762794494, 'step': 2, 
    'jobName': 'Job20230720topDownClampDispX', 'severe': 2, 'iterations': 3, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230720topDownClampDispX']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 31, 
    'jobName': 'Job20230720topDownClampDispX'})
mdb.jobs['Job20230720topDownClampDispX']._Message(STATUS, {
    'totalTime': 1.802685379982, 'attempts': 1, 
    'timeIncrement': 0.0059326171875, 'increment': 32, 
    'stepTime': 0.802685379981994, 'step': 2, 
    'jobName': 'Job20230720topDownClampDispX', 'severe': 2, 'iterations': 4, 
    'phase': STANDARD_PHASE, 'equilibrium': 2})
mdb.jobs['Job20230720topDownClampDispX']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 32, 
    'jobName': 'Job20230720topDownClampDispX'})
mdb.jobs['Job20230720topDownClampDispX']._Message(STATUS, {
    'totalTime': 1.802685379982, 'attempts': ' 1U', 
    'timeIncrement': 0.00889892578125, 'increment': 33, 
    'stepTime': 0.802685379981994, 'step': 2, 
    'jobName': 'Job20230720topDownClampDispX', 'severe': 8, 'iterations': 10, 
    'phase': STANDARD_PHASE, 'equilibrium': 2})
mdb.jobs['Job20230720topDownClampDispX']._Message(STATUS, {
    'totalTime': 1.80491011142731, 'attempts': 2, 
    'timeIncrement': 0.0022247314453125, 'increment': 33, 
    'stepTime': 0.804910111427307, 'step': 2, 
    'jobName': 'Job20230720topDownClampDispX', 'severe': 3, 'iterations': 3, 
    'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job20230720topDownClampDispX']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 33, 
    'jobName': 'Job20230720topDownClampDispX'})
mdb.jobs['Job20230720topDownClampDispX']._Message(STATUS, {
    'totalTime': 1.80824720859528, 'attempts': 1, 
    'timeIncrement': 0.00333709716796875, 'increment': 34, 
    'stepTime': 0.808247208595276, 'step': 2, 
    'jobName': 'Job20230720topDownClampDispX', 'severe': 5, 'iterations': 6, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230720topDownClampDispX']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 34, 
    'jobName': 'Job20230720topDownClampDispX'})
mdb.jobs['Job20230720topDownClampDispX']._Message(STATUS, {
    'totalTime': 1.81325285434723, 'attempts': 1, 
    'timeIncrement': 0.00500564575195313, 'increment': 35, 
    'stepTime': 0.813252854347229, 'step': 2, 
    'jobName': 'Job20230720topDownClampDispX', 'severe': 2, 'iterations': 4, 
    'phase': STANDARD_PHASE, 'equilibrium': 2})
mdb.jobs['Job20230720topDownClampDispX']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 35, 
    'jobName': 'Job20230720topDownClampDispX'})
mdb.jobs['Job20230720topDownClampDispX']._Message(STATUS, {
    'totalTime': 1.82076132297516, 'attempts': 1, 
    'timeIncrement': 0.00750846862792969, 'increment': 36, 
    'stepTime': 0.820761322975158, 'step': 2, 
    'jobName': 'Job20230720topDownClampDispX', 'severe': 2, 'iterations': 3, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230720topDownClampDispX']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 36, 
    'jobName': 'Job20230720topDownClampDispX'})
mdb.jobs['Job20230720topDownClampDispX']._Message(STATUS, {
    'totalTime': 1.83202402591705, 'attempts': 1, 
    'timeIncrement': 0.0112627029418945, 'increment': 37, 
    'stepTime': 0.832024025917053, 'step': 2, 
    'jobName': 'Job20230720topDownClampDispX', 'severe': 3, 'iterations': 4, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230720topDownClampDispX']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 37, 
    'jobName': 'Job20230720topDownClampDispX'})
mdb.jobs['Job20230720topDownClampDispX']._Message(STATUS, {
    'totalTime': 1.8489180803299, 'attempts': 1, 
    'timeIncrement': 0.0168940544128418, 'increment': 38, 
    'stepTime': 0.848918080329895, 'step': 2, 
    'jobName': 'Job20230720topDownClampDispX', 'severe': 3, 'iterations': 4, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230720topDownClampDispX']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 38, 
    'jobName': 'Job20230720topDownClampDispX'})
mdb.jobs['Job20230720topDownClampDispX']._Message(STATUS, {
    'totalTime': 1.87425916194916, 'attempts': 1, 
    'timeIncrement': 0.0253410816192627, 'increment': 39, 
    'stepTime': 0.874259161949158, 'step': 2, 
    'jobName': 'Job20230720topDownClampDispX', 'severe': 4, 'iterations': 6, 
    'phase': STANDARD_PHASE, 'equilibrium': 2})
mdb.jobs['Job20230720topDownClampDispX']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 39, 
    'jobName': 'Job20230720topDownClampDispX'})
mdb.jobs['Job20230720topDownClampDispX']._Message(STATUS, {
    'totalTime': 1.87425916194916, 'attempts': ' 1U', 
    'timeIncrement': 0.038011622428894, 'increment': 40, 
    'stepTime': 0.874259161949158, 'step': 2, 
    'jobName': 'Job20230720topDownClampDispX', 'severe': 9, 'iterations': 9, 
    'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job20230720topDownClampDispX']._Message(STATUS, {
    'totalTime': 1.88376206755638, 'attempts': 2, 
    'timeIncrement': 0.00950290560722351, 'increment': 40, 
    'stepTime': 0.883762067556381, 'step': 2, 
    'jobName': 'Job20230720topDownClampDispX', 'severe': 4, 'iterations': 5, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230720topDownClampDispX']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 40, 
    'jobName': 'Job20230720topDownClampDispX'})
mdb.jobs['Job20230720topDownClampDispX']._Message(STATUS, {
    'totalTime': 1.89801642596722, 'attempts': 1, 
    'timeIncrement': 0.0142543584108353, 'increment': 41, 
    'stepTime': 0.898016425967216, 'step': 2, 
    'jobName': 'Job20230720topDownClampDispX', 'severe': 10, 'iterations': 11, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230720topDownClampDispX']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 41, 
    'jobName': 'Job20230720topDownClampDispX'})
mdb.jobs['Job20230720topDownClampDispX']._Message(STATUS, {
    'totalTime': 1.91939796358347, 'attempts': 1, 
    'timeIncrement': 0.0213815376162529, 'increment': 42, 
    'stepTime': 0.919397963583469, 'step': 2, 
    'jobName': 'Job20230720topDownClampDispX', 'severe': 18, 'iterations': 19, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230720topDownClampDispX']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 42, 
    'jobName': 'Job20230720topDownClampDispX'})
mdb.jobs['Job20230720topDownClampDispX']._Message(STATUS, {
    'totalTime': 1.91939796358347, 'attempts': ' 1U', 
    'timeIncrement': 0.0213815376162529, 'increment': 43, 
    'stepTime': 0.919397963583469, 'step': 2, 
    'jobName': 'Job20230720topDownClampDispX', 'severe': 14, 'iterations': 14, 
    'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job20230720topDownClampDispX']._Message(STATUS, {
    'totalTime': 1.92474334798753, 'attempts': 2, 
    'timeIncrement': 0.00534538440406323, 'increment': 43, 
    'stepTime': 0.924743347987532, 'step': 2, 
    'jobName': 'Job20230720topDownClampDispX', 'severe': 6, 'iterations': 7, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230720topDownClampDispX']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 43, 
    'jobName': 'Job20230720topDownClampDispX'})
mdb.jobs['Job20230720topDownClampDispX']._Message(STATUS, {
    'totalTime': 1.93276142459363, 'attempts': 1, 
    'timeIncrement': 0.00801807660609484, 'increment': 44, 
    'stepTime': 0.932761424593627, 'step': 2, 
    'jobName': 'Job20230720topDownClampDispX', 'severe': 8, 'iterations': 9, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230720topDownClampDispX']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 44, 
    'jobName': 'Job20230720topDownClampDispX'})
mdb.jobs['Job20230720topDownClampDispX']._Message(STATUS, {
    'totalTime': 1.93276142459363, 'attempts': ' 1U', 
    'timeIncrement': 0.0120271149091423, 'increment': 45, 
    'stepTime': 0.932761424593627, 'step': 2, 
    'jobName': 'Job20230720topDownClampDispX', 'severe': 18, 'iterations': 18, 
    'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job20230720topDownClampDispX']._Message(STATUS, {
    'totalTime': 1.93576820332091, 'attempts': 2, 
    'timeIncrement': 0.00300677872728556, 'increment': 45, 
    'stepTime': 0.935768203320913, 'step': 2, 
    'jobName': 'Job20230720topDownClampDispX', 'severe': 2, 'iterations': 3, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230720topDownClampDispX']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 45, 
    'jobName': 'Job20230720topDownClampDispX'})
mdb.jobs['Job20230720topDownClampDispX']._Message(STATUS, {
    'totalTime': 1.94027837141184, 'attempts': 1, 
    'timeIncrement': 0.00451016809092835, 'increment': 46, 
    'stepTime': 0.940278371411841, 'step': 2, 
    'jobName': 'Job20230720topDownClampDispX', 'severe': 4, 'iterations': 5, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230720topDownClampDispX']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 46, 
    'jobName': 'Job20230720topDownClampDispX'})
mdb.jobs['Job20230720topDownClampDispX']._Message(STATUS, {
    'totalTime': 1.94704362354823, 'attempts': 1, 
    'timeIncrement': 0.00676525213639252, 'increment': 47, 
    'stepTime': 0.947043623548234, 'step': 2, 
    'jobName': 'Job20230720topDownClampDispX', 'severe': 5, 'iterations': 6, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230720topDownClampDispX']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 47, 
    'jobName': 'Job20230720topDownClampDispX'})
mdb.jobs['Job20230720topDownClampDispX']._Message(STATUS, {
    'totalTime': 1.95719150175282, 'attempts': 1, 
    'timeIncrement': 0.0101478782045888, 'increment': 48, 
    'stepTime': 0.957191501752823, 'step': 2, 
    'jobName': 'Job20230720topDownClampDispX', 'severe': 6, 'iterations': 6, 
    'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job20230720topDownClampDispX']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 48, 
    'jobName': 'Job20230720topDownClampDispX'})
mdb.jobs['Job20230720topDownClampDispX']._Message(STATUS, {
    'totalTime': 1.97241331905971, 'attempts': 1, 
    'timeIncrement': 0.0152218173068832, 'increment': 49, 
    'stepTime': 0.972413319059706, 'step': 2, 
    'jobName': 'Job20230720topDownClampDispX', 'severe': 4, 'iterations': 4, 
    'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job20230720topDownClampDispX']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 49, 
    'jobName': 'Job20230720topDownClampDispX'})
mdb.jobs['Job20230720topDownClampDispX']._Message(STATUS, {
    'totalTime': 1.99524604502003, 'attempts': 1, 
    'timeIncrement': 0.0228327259603248, 'increment': 50, 
    'stepTime': 0.99524604502003, 'step': 2, 
    'jobName': 'Job20230720topDownClampDispX', 'severe': 2, 'iterations': 3, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230720topDownClampDispX']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 50, 
    'jobName': 'Job20230720topDownClampDispX'})
mdb.jobs['Job20230720topDownClampDispX']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 51, 
    'jobName': 'Job20230720topDownClampDispX'})
mdb.jobs['Job20230720topDownClampDispX']._Message(STATUS, {'totalTime': 2.0, 
    'attempts': 1, 'timeIncrement': 0.00475395497996955, 'increment': 51, 
    'stepTime': 1.0, 'step': 2, 'jobName': 'Job20230720topDownClampDispX', 
    'severe': 1, 'iterations': 2, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230720topDownClampDispX']._Message(END_STEP, {
    'phase': STANDARD_PHASE, 'stepId': 2, 
    'jobName': 'Job20230720topDownClampDispX'})
mdb.jobs['Job20230720topDownClampDispX']._Message(COMPLETED, {
    'phase': STANDARD_PHASE, 'message': 'Analysis phase complete', 
    'jobName': 'Job20230720topDownClampDispX'})
mdb.jobs['Job20230720topDownClampDispX']._Message(JOB_COMPLETED, {
    'time': 'Thu Jul 20 22:32:05 2023', 
    'jobName': 'Job20230720topDownClampDispX'})
# Save by xinlo on 2023_07_20-23.16.10; build 2017 2016_09_27-14.54.59 126836
# Save by xinlo on 2023_07_20-23.16.27; build 2017 2016_09_27-14.54.59 126836
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].boundaryConditions['mfEnd3'].setValuesInStep(stepName=
    'cyclicLoading', u1=0.0, u3=5.0)
mdb.models['Model-1'].boundaryConditions['mfEnd4'].setValuesInStep(stepName=
    'cyclicLoading', u1=0.0, u3=5.0)
mdb.Job(name='Job20230720topDownClampDispZ', objectToCopy=
    mdb.jobs['Job20230720topDownClampDispX'])
# Save by xinlo on 2023_07_21-19.33.07; build 2017 2016_09_27-14.54.59 126836
# Save by xinlo on 2023_07_21-19.33.16; build 2017 2016_09_27-14.54.59 126836
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['Job20230720topDownClampDispZ'].submit(consistencyChecking=OFF)
mdb.jobs['Job20230720topDownClampDispZ']._Message(STARTED, {
    'phase': BATCHPRE_PHASE, 'clientHost': 'DESKTOP-A24BAF5', 'handle': 0, 
    'jobName': 'Job20230720topDownClampDispZ'})
mdb.jobs['Job20230720topDownClampDispZ']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'WHENEVER A TRANSLATION (ROTATION) DOF AT A NODE IS CONSTRAINED BY A KINEMATIC COUPLING DEFINITION THE TRANSLATION (ROTATION) DOFS FOR THAT NODE CANNOT BE INCLUDED IN ANY OTHER CONSTRAINT INCLUDING MPCS, RIGID BODIES, ETC.', 
    'jobName': 'Job20230720topDownClampDispZ'})
mdb.jobs['Job20230720topDownClampDispZ']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'MPCS (EXTERNAL or INTERNAL, including those generated from rigid body definitions), KINEMATIC COUPLINGS, AND/OR EQUATIONS WILL ACTIVATE ADDITIONAL DEGREES OF FREEDOM', 
    'jobName': 'Job20230720topDownClampDispZ'})
mdb.jobs['Job20230720topDownClampDispZ']._Message(ODB_FILE, {
    'phase': BATCHPRE_PHASE, 
    'file': 'C:\\temp\\Job20230720topDownClampDispZ.odb', 
    'jobName': 'Job20230720topDownClampDispZ'})
mdb.jobs['Job20230720topDownClampDispZ']._Message(COMPLETED, {
    'phase': BATCHPRE_PHASE, 'message': 'Analysis phase complete', 
    'jobName': 'Job20230720topDownClampDispZ'})
mdb.jobs['Job20230720topDownClampDispZ']._Message(STARTED, {
    'phase': STANDARD_PHASE, 'clientHost': 'DESKTOP-A24BAF5', 'handle': 36780, 
    'jobName': 'Job20230720topDownClampDispZ'})
mdb.jobs['Job20230720topDownClampDispZ']._Message(STEP, {
    'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job20230720topDownClampDispZ'})
mdb.jobs['Job20230720topDownClampDispZ']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 0, 
    'jobName': 'Job20230720topDownClampDispZ'})
mdb.jobs['Job20230720topDownClampDispZ']._Message(MEMORY_ESTIMATE, {
    'phase': STANDARD_PHASE, 'jobName': 'Job20230720topDownClampDispZ', 
    'memory': 7975.0})
mdb.jobs['Job20230720topDownClampDispZ']._Message(PHYSICAL_MEMORY, {
    'phase': STANDARD_PHASE, 'physical_memory': 32620.0, 
    'jobName': 'Job20230720topDownClampDispZ'})
mdb.jobs['Job20230720topDownClampDispZ']._Message(MINIMUM_MEMORY, {
    'minimum_memory': 844.0, 'phase': STANDARD_PHASE, 
    'jobName': 'Job20230720topDownClampDispZ'})
mdb.jobs['Job20230720topDownClampDispZ']._Message(STATUS, {'totalTime': 0.1, 
    'attempts': 1, 'timeIncrement': 0.1, 'increment': 1, 'stepTime': 0.1, 
    'step': 1, 'jobName': 'Job20230720topDownClampDispZ', 'severe': 27, 
    'iterations': 27, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job20230720topDownClampDispZ']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 1, 
    'jobName': 'Job20230720topDownClampDispZ'})
mdb.jobs['Job20230720topDownClampDispZ']._Message(STATUS, {'totalTime': 0.2, 
    'attempts': 1, 'timeIncrement': 0.1, 'increment': 2, 'stepTime': 0.2, 
    'step': 1, 'jobName': 'Job20230720topDownClampDispZ', 'severe': 9, 
    'iterations': 10, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230720topDownClampDispZ']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 2, 
    'jobName': 'Job20230720topDownClampDispZ'})
mdb.jobs['Job20230720topDownClampDispZ']._Message(STATUS, {'totalTime': 0.3, 
    'attempts': 1, 'timeIncrement': 0.1, 'increment': 3, 'stepTime': 0.3, 
    'step': 1, 'jobName': 'Job20230720topDownClampDispZ', 'severe': 7, 
    'iterations': 8, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230720topDownClampDispZ']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 3, 
    'jobName': 'Job20230720topDownClampDispZ'})
mdb.jobs['Job20230720topDownClampDispZ']._Message(STATUS, {'totalTime': 0.45, 
    'attempts': 1, 'timeIncrement': 0.15, 'increment': 4, 'stepTime': 0.45, 
    'step': 1, 'jobName': 'Job20230720topDownClampDispZ', 'severe': 4, 
    'iterations': 5, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230720topDownClampDispZ']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 4, 
    'jobName': 'Job20230720topDownClampDispZ'})
mdb.jobs['Job20230720topDownClampDispZ']._Message(STATUS, {'totalTime': 0.675, 
    'attempts': 1, 'timeIncrement': 0.225, 'increment': 5, 'stepTime': 0.675, 
    'step': 1, 'jobName': 'Job20230720topDownClampDispZ', 'severe': 2, 
    'iterations': 3, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230720topDownClampDispZ']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 5, 
    'jobName': 'Job20230720topDownClampDispZ'})
mdb.jobs['Job20230720topDownClampDispZ']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 6, 
    'jobName': 'Job20230720topDownClampDispZ'})
mdb.jobs['Job20230720topDownClampDispZ']._Message(STATUS, {'totalTime': 1.0, 
    'attempts': 1, 'timeIncrement': 0.325, 'increment': 6, 'stepTime': 1.0, 
    'step': 1, 'jobName': 'Job20230720topDownClampDispZ', 'severe': 7, 
    'iterations': 8, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230720topDownClampDispZ']._Message(END_STEP, {
    'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job20230720topDownClampDispZ'})
mdb.jobs['Job20230720topDownClampDispZ']._Message(STEP, {
    'phase': STANDARD_PHASE, 'stepId': 2, 
    'jobName': 'Job20230720topDownClampDispZ'})
mdb.jobs['Job20230720topDownClampDispZ']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 0, 
    'jobName': 'Job20230720topDownClampDispZ'})
mdb.jobs['Job20230720topDownClampDispZ']._Message(MEMORY_ESTIMATE, {
    'phase': STANDARD_PHASE, 'jobName': 'Job20230720topDownClampDispZ', 
    'memory': 7424.0})
mdb.jobs['Job20230720topDownClampDispZ']._Message(PHYSICAL_MEMORY, {
    'phase': STANDARD_PHASE, 'physical_memory': 32620.0, 
    'jobName': 'Job20230720topDownClampDispZ'})
mdb.jobs['Job20230720topDownClampDispZ']._Message(MINIMUM_MEMORY, {
    'minimum_memory': 822.0, 'phase': STANDARD_PHASE, 
    'jobName': 'Job20230720topDownClampDispZ'})
mdb.jobs['Job20230720topDownClampDispZ']._Message(STATUS, {'totalTime': 1.05, 
    'attempts': 1, 'timeIncrement': 0.05, 'increment': 1, 'stepTime': 0.05, 
    'step': 2, 'jobName': 'Job20230720topDownClampDispZ', 'severe': 15, 
    'iterations': 16, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230720topDownClampDispZ']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 1, 
    'jobName': 'Job20230720topDownClampDispZ'})
mdb.jobs['Job20230720topDownClampDispZ']._Message(STATUS, {'totalTime': 1.1, 
    'attempts': 1, 'timeIncrement': 0.05, 'increment': 2, 'stepTime': 0.1, 
    'step': 2, 'jobName': 'Job20230720topDownClampDispZ', 'severe': 6, 
    'iterations': 7, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230720topDownClampDispZ']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 2, 
    'jobName': 'Job20230720topDownClampDispZ'})
mdb.jobs['Job20230720topDownClampDispZ']._Message(STATUS, {'totalTime': 1.15, 
    'attempts': 1, 'timeIncrement': 0.05, 'increment': 3, 'stepTime': 0.15, 
    'step': 2, 'jobName': 'Job20230720topDownClampDispZ', 'severe': 6, 
    'iterations': 7, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230720topDownClampDispZ']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 3, 
    'jobName': 'Job20230720topDownClampDispZ'})
mdb.jobs['Job20230720topDownClampDispZ']._Message(STATUS, {'totalTime': 1.2, 
    'attempts': 1, 'timeIncrement': 0.05, 'increment': 4, 'stepTime': 0.2, 
    'step': 2, 'jobName': 'Job20230720topDownClampDispZ', 'severe': 7, 
    'iterations': 8, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230720topDownClampDispZ']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 4, 
    'jobName': 'Job20230720topDownClampDispZ'})
mdb.jobs['Job20230720topDownClampDispZ']._Message(STATUS, {'totalTime': 1.25, 
    'attempts': 1, 'timeIncrement': 0.05, 'increment': 5, 'stepTime': 0.25, 
    'step': 2, 'jobName': 'Job20230720topDownClampDispZ', 'severe': 5, 
    'iterations': 5, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job20230720topDownClampDispZ']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 5, 
    'jobName': 'Job20230720topDownClampDispZ'})
mdb.jobs['Job20230720topDownClampDispZ']._Message(WARNING, {
    'phase': STANDARD_PHASE, 
    'message': 'DISPLACEMENT INCREMENT FOR CONTACT IS TOO BIG.', 
    'jobName': 'Job20230720topDownClampDispZ'})
mdb.jobs['Job20230720topDownClampDispZ']._Message(WARNING, {
    'phase': STANDARD_PHASE, 
    'message': 'DISPLACEMENT INCREMENT FOR CONTACT IS TOO BIG.', 
    'jobName': 'Job20230720topDownClampDispZ'})
mdb.jobs['Job20230720topDownClampDispZ']._Message(STATUS, {'totalTime': 1.25, 
    'attempts': ' 1U', 'timeIncrement': 0.05, 'increment': 6, 'stepTime': 0.25, 
    'step': 2, 'jobName': 'Job20230720topDownClampDispZ', 'severe': 4, 
    'iterations': 5, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230720topDownClampDispZ']._Message(STATUS, {'totalTime': 1.2625, 
    'attempts': 2, 'timeIncrement': 0.0125, 'increment': 6, 'stepTime': 0.2625, 
    'step': 2, 'jobName': 'Job20230720topDownClampDispZ', 'severe': 17, 
    'iterations': 18, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230720topDownClampDispZ']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 6, 
    'jobName': 'Job20230720topDownClampDispZ'})
mdb.jobs['Job20230720topDownClampDispZ']._Message(STATUS, {
    'totalTime': 1.28125, 'attempts': 1, 'timeIncrement': 0.01875, 
    'increment': 7, 'stepTime': 0.28125, 'step': 2, 
    'jobName': 'Job20230720topDownClampDispZ', 'severe': 3, 'iterations': 4, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230720topDownClampDispZ']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 7, 
    'jobName': 'Job20230720topDownClampDispZ'})
mdb.jobs['Job20230720topDownClampDispZ']._Message(STATUS, {
    'totalTime': 1.309375, 'attempts': 1, 'timeIncrement': 0.028125, 
    'increment': 8, 'stepTime': 0.309375, 'step': 2, 
    'jobName': 'Job20230720topDownClampDispZ', 'severe': 5, 'iterations': 6, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230720topDownClampDispZ']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 8, 
    'jobName': 'Job20230720topDownClampDispZ'})
mdb.jobs['Job20230720topDownClampDispZ']._Message(STATUS, {
    'totalTime': 1.3515625, 'attempts': 1, 'timeIncrement': 0.0421875, 
    'increment': 9, 'stepTime': 0.3515625, 'step': 2, 
    'jobName': 'Job20230720topDownClampDispZ', 'severe': 5, 'iterations': 5, 
    'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job20230720topDownClampDispZ']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 9, 
    'jobName': 'Job20230720topDownClampDispZ'})
mdb.jobs['Job20230720topDownClampDispZ']._Message(STATUS, {
    'totalTime': 1.4015625, 'attempts': 1, 'timeIncrement': 0.05, 
    'increment': 10, 'stepTime': 0.4015625, 'step': 2, 
    'jobName': 'Job20230720topDownClampDispZ', 'severe': 6, 'iterations': 7, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230720topDownClampDispZ']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 10, 
    'jobName': 'Job20230720topDownClampDispZ'})
mdb.jobs['Job20230720topDownClampDispZ']._Message(STATUS, {
    'totalTime': 1.4515625, 'attempts': 1, 'timeIncrement': 0.05, 
    'increment': 11, 'stepTime': 0.4515625, 'step': 2, 
    'jobName': 'Job20230720topDownClampDispZ', 'severe': 7, 'iterations': 8, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230720topDownClampDispZ']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 11, 
    'jobName': 'Job20230720topDownClampDispZ'})
mdb.jobs['Job20230720topDownClampDispZ']._Message(STATUS, {
    'totalTime': 1.5015625, 'attempts': 1, 'timeIncrement': 0.05, 
    'increment': 12, 'stepTime': 0.5015625, 'step': 2, 
    'jobName': 'Job20230720topDownClampDispZ', 'severe': 6, 'iterations': 7, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230720topDownClampDispZ']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 12, 
    'jobName': 'Job20230720topDownClampDispZ'})
mdb.jobs['Job20230720topDownClampDispZ']._Message(STATUS, {
    'totalTime': 1.5515625, 'attempts': 1, 'timeIncrement': 0.05, 
    'increment': 13, 'stepTime': 0.5515625, 'step': 2, 
    'jobName': 'Job20230720topDownClampDispZ', 'severe': 7, 'iterations': 8, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230720topDownClampDispZ']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 13, 
    'jobName': 'Job20230720topDownClampDispZ'})
mdb.jobs['Job20230720topDownClampDispZ']._Message(STATUS, {
    'totalTime': 1.6015625, 'attempts': 1, 'timeIncrement': 0.05, 
    'increment': 14, 'stepTime': 0.6015625, 'step': 2, 
    'jobName': 'Job20230720topDownClampDispZ', 'severe': 7, 'iterations': 8, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230720topDownClampDispZ']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 14, 
    'jobName': 'Job20230720topDownClampDispZ'})
mdb.jobs['Job20230720topDownClampDispZ']._Message(STATUS, {
    'totalTime': 1.6515625, 'attempts': 1, 'timeIncrement': 0.05, 
    'increment': 15, 'stepTime': 0.6515625, 'step': 2, 
    'jobName': 'Job20230720topDownClampDispZ', 'severe': 6, 'iterations': 7, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230720topDownClampDispZ']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 15, 
    'jobName': 'Job20230720topDownClampDispZ'})
mdb.jobs['Job20230720topDownClampDispZ']._Message(STATUS, {
    'totalTime': 1.7015625, 'attempts': 1, 'timeIncrement': 0.05, 
    'increment': 16, 'stepTime': 0.7015625, 'step': 2, 
    'jobName': 'Job20230720topDownClampDispZ', 'severe': 6, 'iterations': 7, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230720topDownClampDispZ']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 16, 
    'jobName': 'Job20230720topDownClampDispZ'})
mdb.jobs['Job20230720topDownClampDispZ']._Message(STATUS, {
    'totalTime': 1.7515625, 'attempts': 1, 'timeIncrement': 0.05, 
    'increment': 17, 'stepTime': 0.7515625, 'step': 2, 
    'jobName': 'Job20230720topDownClampDispZ', 'severe': 6, 'iterations': 7, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230720topDownClampDispZ']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 17, 
    'jobName': 'Job20230720topDownClampDispZ'})
mdb.jobs['Job20230720topDownClampDispZ']._Message(STATUS, {
    'totalTime': 1.7515625, 'attempts': ' 1U', 'timeIncrement': 0.05, 
    'increment': 18, 'stepTime': 0.7515625, 'step': 2, 
    'jobName': 'Job20230720topDownClampDispZ', 'severe': 7, 'iterations': 7, 
    'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job20230720topDownClampDispZ']._Message(STATUS, {
    'totalTime': 1.7640625, 'attempts': 2, 'timeIncrement': 0.0125, 
    'increment': 18, 'stepTime': 0.7640625, 'step': 2, 
    'jobName': 'Job20230720topDownClampDispZ', 'severe': 16, 'iterations': 17, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230720topDownClampDispZ']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 18, 
    'jobName': 'Job20230720topDownClampDispZ'})
mdb.jobs['Job20230720topDownClampDispZ']._Message(STATUS, {
    'totalTime': 1.7828125, 'attempts': 1, 'timeIncrement': 0.01875, 
    'increment': 19, 'stepTime': 0.7828125, 'step': 2, 
    'jobName': 'Job20230720topDownClampDispZ', 'severe': 4, 'iterations': 5, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230720topDownClampDispZ']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 19, 
    'jobName': 'Job20230720topDownClampDispZ'})
mdb.jobs['Job20230720topDownClampDispZ']._Message(STATUS, {
    'totalTime': 1.8109375, 'attempts': 1, 'timeIncrement': 0.028125, 
    'increment': 20, 'stepTime': 0.8109375, 'step': 2, 
    'jobName': 'Job20230720topDownClampDispZ', 'severe': 7, 'iterations': 8, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230720topDownClampDispZ']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 20, 
    'jobName': 'Job20230720topDownClampDispZ'})
mdb.jobs['Job20230720topDownClampDispZ']._Message(STATUS, {
    'totalTime': 1.853125, 'attempts': 1, 'timeIncrement': 0.0421875, 
    'increment': 21, 'stepTime': 0.853125, 'step': 2, 
    'jobName': 'Job20230720topDownClampDispZ', 'severe': 7, 'iterations': 8, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230720topDownClampDispZ']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 21, 
    'jobName': 'Job20230720topDownClampDispZ'})
mdb.jobs['Job20230720topDownClampDispZ']._Message(STATUS, {
    'totalTime': 1.903125, 'attempts': 1, 'timeIncrement': 0.05, 
    'increment': 22, 'stepTime': 0.903125, 'step': 2, 
    'jobName': 'Job20230720topDownClampDispZ', 'severe': 7, 'iterations': 8, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230720topDownClampDispZ']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 22, 
    'jobName': 'Job20230720topDownClampDispZ'})
mdb.jobs['Job20230720topDownClampDispZ']._Message(STATUS, {
    'totalTime': 1.953125, 'attempts': 1, 'timeIncrement': 0.05, 
    'increment': 23, 'stepTime': 0.953125, 'step': 2, 
    'jobName': 'Job20230720topDownClampDispZ', 'severe': 7, 'iterations': 8, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230720topDownClampDispZ']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 23, 
    'jobName': 'Job20230720topDownClampDispZ'})
mdb.jobs['Job20230720topDownClampDispZ']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 24, 
    'jobName': 'Job20230720topDownClampDispZ'})
mdb.jobs['Job20230720topDownClampDispZ']._Message(STATUS, {'totalTime': 2.0, 
    'attempts': 1, 'timeIncrement': 0.0468749999999997, 'increment': 24, 
    'stepTime': 1.0, 'step': 2, 'jobName': 'Job20230720topDownClampDispZ', 
    'severe': 7, 'iterations': 8, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230720topDownClampDispZ']._Message(END_STEP, {
    'phase': STANDARD_PHASE, 'stepId': 2, 
    'jobName': 'Job20230720topDownClampDispZ'})
mdb.jobs['Job20230720topDownClampDispZ']._Message(COMPLETED, {
    'phase': STANDARD_PHASE, 'message': 'Analysis phase complete', 
    'jobName': 'Job20230720topDownClampDispZ'})
mdb.jobs['Job20230720topDownClampDispZ']._Message(JOB_COMPLETED, {
    'time': 'Fri Jul 21 21:43:59 2023', 
    'jobName': 'Job20230720topDownClampDispZ'})
mdb.models['Model-1'].boundaryConditions['mfEnd3'].setValuesInStep(stepName=
    'cyclicLoading', u2=3.0, u3=0.0)
mdb.models['Model-1'].boundaryConditions['mfEnd4'].setValuesInStep(stepName=
    'cyclicLoading', u2=-3.0, u3=0.0)
mdb.Job(name='Job20230721topDownClampRotX', objectToCopy=
    mdb.jobs['Job20230720topDownClampDispZ'])
# Save by xinlo on 2023_07_21-23.16.54; build 2017 2016_09_27-14.54.59 126836
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['Job20230721topDownClampRotX'].submit(consistencyChecking=OFF)
mdb.jobs['Job20230721topDownClampRotX']._Message(STARTED, {
    'phase': BATCHPRE_PHASE, 'clientHost': 'DESKTOP-A24BAF5', 'handle': 0, 
    'jobName': 'Job20230721topDownClampRotX'})
mdb.jobs['Job20230721topDownClampRotX']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'WHENEVER A TRANSLATION (ROTATION) DOF AT A NODE IS CONSTRAINED BY A KINEMATIC COUPLING DEFINITION THE TRANSLATION (ROTATION) DOFS FOR THAT NODE CANNOT BE INCLUDED IN ANY OTHER CONSTRAINT INCLUDING MPCS, RIGID BODIES, ETC.', 
    'jobName': 'Job20230721topDownClampRotX'})
mdb.jobs['Job20230721topDownClampRotX']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'MPCS (EXTERNAL or INTERNAL, including those generated from rigid body definitions), KINEMATIC COUPLINGS, AND/OR EQUATIONS WILL ACTIVATE ADDITIONAL DEGREES OF FREEDOM', 
    'jobName': 'Job20230721topDownClampRotX'})
mdb.jobs['Job20230721topDownClampRotX']._Message(ODB_FILE, {
    'phase': BATCHPRE_PHASE, 
    'file': 'C:\\temp\\Job20230721topDownClampRotX.odb', 
    'jobName': 'Job20230721topDownClampRotX'})
mdb.jobs['Job20230721topDownClampRotX']._Message(COMPLETED, {
    'phase': BATCHPRE_PHASE, 'message': 'Analysis phase complete', 
    'jobName': 'Job20230721topDownClampRotX'})
mdb.jobs['Job20230721topDownClampRotX']._Message(STARTED, {
    'phase': STANDARD_PHASE, 'clientHost': 'DESKTOP-A24BAF5', 'handle': 14936, 
    'jobName': 'Job20230721topDownClampRotX'})
mdb.jobs['Job20230721topDownClampRotX']._Message(STEP, {
    'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job20230721topDownClampRotX'})
mdb.jobs['Job20230721topDownClampRotX']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 0, 
    'jobName': 'Job20230721topDownClampRotX'})
mdb.jobs['Job20230721topDownClampRotX']._Message(ERROR, {
    'phase': STANDARD_PHASE, 
    'message': 'Process terminated by external request (SIGTERM or SIGINT received).', 
    'jobName': 'Job20230721topDownClampRotX'})
mdb.jobs['Job20230721topDownClampRotX']._Message(INTERRUPTED, {
    'phase': STANDARD_PHASE, 
    'message': 'Analysis interrupted by external signal', 
    'jobName': 'Job20230721topDownClampRotX'})
mdb.jobs['Job20230721topDownClampRotX']._Message(ERROR, {
    'message': 'Abaqus/Standard Analysis exited with an error - Please see the  message file for possible error messages if the file exists.', 
    'jobName': 'Job20230721topDownClampRotX'})
mdb.jobs['Job20230721topDownClampRotX']._Message(JOB_ABORTED, {
    'message': 'Abaqus/Standard Analysis exited with an error - Please see the  message file for possible error messages if the file exists.', 
    'jobName': 'Job20230721topDownClampRotX'})
mdb.jobs['Job20230721topDownClampRotX'].submit(consistencyChecking=OFF)
mdb.jobs['Job20230721topDownClampRotX']._Message(STARTED, {
    'phase': BATCHPRE_PHASE, 'clientHost': 'DESKTOP-A24BAF5', 'handle': 0, 
    'jobName': 'Job20230721topDownClampRotX'})
mdb.jobs['Job20230721topDownClampRotX']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'WHENEVER A TRANSLATION (ROTATION) DOF AT A NODE IS CONSTRAINED BY A KINEMATIC COUPLING DEFINITION THE TRANSLATION (ROTATION) DOFS FOR THAT NODE CANNOT BE INCLUDED IN ANY OTHER CONSTRAINT INCLUDING MPCS, RIGID BODIES, ETC.', 
    'jobName': 'Job20230721topDownClampRotX'})
mdb.jobs['Job20230721topDownClampRotX']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'MPCS (EXTERNAL or INTERNAL, including those generated from rigid body definitions), KINEMATIC COUPLINGS, AND/OR EQUATIONS WILL ACTIVATE ADDITIONAL DEGREES OF FREEDOM', 
    'jobName': 'Job20230721topDownClampRotX'})
mdb.jobs['Job20230721topDownClampRotX']._Message(ODB_FILE, {
    'phase': BATCHPRE_PHASE, 
    'file': 'C:\\temp\\Job20230721topDownClampRotX.odb', 
    'jobName': 'Job20230721topDownClampRotX'})
mdb.jobs['Job20230721topDownClampRotX']._Message(COMPLETED, {
    'phase': BATCHPRE_PHASE, 'message': 'Analysis phase complete', 
    'jobName': 'Job20230721topDownClampRotX'})
mdb.jobs['Job20230721topDownClampRotX']._Message(STARTED, {
    'phase': STANDARD_PHASE, 'clientHost': 'DESKTOP-A24BAF5', 'handle': 15348, 
    'jobName': 'Job20230721topDownClampRotX'})
mdb.jobs['Job20230721topDownClampRotX']._Message(STEP, {
    'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job20230721topDownClampRotX'})
mdb.jobs['Job20230721topDownClampRotX']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 0, 
    'jobName': 'Job20230721topDownClampRotX'})
mdb.jobs['Job20230721topDownClampRotX']._Message(MEMORY_ESTIMATE, {
    'phase': STANDARD_PHASE, 'jobName': 'Job20230721topDownClampRotX', 
    'memory': 7975.0})
mdb.jobs['Job20230721topDownClampRotX']._Message(PHYSICAL_MEMORY, {
    'phase': STANDARD_PHASE, 'physical_memory': 32620.0, 
    'jobName': 'Job20230721topDownClampRotX'})
mdb.jobs['Job20230721topDownClampRotX']._Message(MINIMUM_MEMORY, {
    'minimum_memory': 844.0, 'phase': STANDARD_PHASE, 
    'jobName': 'Job20230721topDownClampRotX'})
mdb.jobs['Job20230721topDownClampRotX']._Message(STATUS, {'totalTime': 0.1, 
    'attempts': 1, 'timeIncrement': 0.1, 'increment': 1, 'stepTime': 0.1, 
    'step': 1, 'jobName': 'Job20230721topDownClampRotX', 'severe': 27, 
    'iterations': 27, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job20230721topDownClampRotX']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 1, 
    'jobName': 'Job20230721topDownClampRotX'})
mdb.jobs['Job20230721topDownClampRotX']._Message(STATUS, {'totalTime': 0.2, 
    'attempts': 1, 'timeIncrement': 0.1, 'increment': 2, 'stepTime': 0.2, 
    'step': 1, 'jobName': 'Job20230721topDownClampRotX', 'severe': 9, 
    'iterations': 10, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230721topDownClampRotX']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 2, 
    'jobName': 'Job20230721topDownClampRotX'})
mdb.jobs['Job20230721topDownClampRotX']._Message(STATUS, {'totalTime': 0.3, 
    'attempts': 1, 'timeIncrement': 0.1, 'increment': 3, 'stepTime': 0.3, 
    'step': 1, 'jobName': 'Job20230721topDownClampRotX', 'severe': 7, 
    'iterations': 8, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230721topDownClampRotX']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 3, 
    'jobName': 'Job20230721topDownClampRotX'})
mdb.jobs['Job20230721topDownClampRotX']._Message(STATUS, {'totalTime': 0.45, 
    'attempts': 1, 'timeIncrement': 0.15, 'increment': 4, 'stepTime': 0.45, 
    'step': 1, 'jobName': 'Job20230721topDownClampRotX', 'severe': 4, 
    'iterations': 5, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230721topDownClampRotX']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 4, 
    'jobName': 'Job20230721topDownClampRotX'})
mdb.jobs['Job20230721topDownClampRotX']._Message(STATUS, {'totalTime': 0.675, 
    'attempts': 1, 'timeIncrement': 0.225, 'increment': 5, 'stepTime': 0.675, 
    'step': 1, 'jobName': 'Job20230721topDownClampRotX', 'severe': 2, 
    'iterations': 3, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230721topDownClampRotX']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 5, 
    'jobName': 'Job20230721topDownClampRotX'})
mdb.jobs['Job20230721topDownClampRotX']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 6, 
    'jobName': 'Job20230721topDownClampRotX'})
mdb.jobs['Job20230721topDownClampRotX']._Message(STATUS, {'totalTime': 1.0, 
    'attempts': 1, 'timeIncrement': 0.325, 'increment': 6, 'stepTime': 1.0, 
    'step': 1, 'jobName': 'Job20230721topDownClampRotX', 'severe': 7, 
    'iterations': 8, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230721topDownClampRotX']._Message(END_STEP, {
    'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job20230721topDownClampRotX'})
mdb.jobs['Job20230721topDownClampRotX']._Message(STEP, {
    'phase': STANDARD_PHASE, 'stepId': 2, 
    'jobName': 'Job20230721topDownClampRotX'})
mdb.jobs['Job20230721topDownClampRotX']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 0, 
    'jobName': 'Job20230721topDownClampRotX'})
mdb.jobs['Job20230721topDownClampRotX']._Message(MEMORY_ESTIMATE, {
    'phase': STANDARD_PHASE, 'jobName': 'Job20230721topDownClampRotX', 
    'memory': 7424.0})
mdb.jobs['Job20230721topDownClampRotX']._Message(PHYSICAL_MEMORY, {
    'phase': STANDARD_PHASE, 'physical_memory': 32620.0, 
    'jobName': 'Job20230721topDownClampRotX'})
mdb.jobs['Job20230721topDownClampRotX']._Message(MINIMUM_MEMORY, {
    'minimum_memory': 822.0, 'phase': STANDARD_PHASE, 
    'jobName': 'Job20230721topDownClampRotX'})
mdb.jobs['Job20230721topDownClampRotX']._Message(STATUS, {'totalTime': 1.05, 
    'attempts': 1, 'timeIncrement': 0.05, 'increment': 1, 'stepTime': 0.05, 
    'step': 2, 'jobName': 'Job20230721topDownClampRotX', 'severe': 17, 
    'iterations': 18, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230721topDownClampRotX']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 1, 
    'jobName': 'Job20230721topDownClampRotX'})
mdb.jobs['Job20230721topDownClampRotX']._Message(STATUS, {'totalTime': 1.0875, 
    'attempts': 1, 'timeIncrement': 0.0375, 'increment': 2, 'stepTime': 0.0875, 
    'step': 2, 'jobName': 'Job20230721topDownClampRotX', 'severe': 10, 
    'iterations': 11, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230721topDownClampRotX']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 2, 
    'jobName': 'Job20230721topDownClampRotX'})
mdb.jobs['Job20230721topDownClampRotX']._Message(STATUS, {'totalTime': 1.125, 
    'attempts': 1, 'timeIncrement': 0.0375, 'increment': 3, 'stepTime': 0.125, 
    'step': 2, 'jobName': 'Job20230721topDownClampRotX', 'severe': 6, 
    'iterations': 7, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230721topDownClampRotX']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 3, 
    'jobName': 'Job20230721topDownClampRotX'})
mdb.jobs['Job20230721topDownClampRotX']._Message(STATUS, {'totalTime': 1.125, 
    'attempts': ' 1U', 'timeIncrement': 0.05, 'increment': 4, 
    'stepTime': 0.125, 'step': 2, 'jobName': 'Job20230721topDownClampRotX', 
    'severe': 7, 'iterations': 7, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job20230721topDownClampRotX']._Message(STATUS, {'totalTime': 1.1375, 
    'attempts': 2, 'timeIncrement': 0.0125, 'increment': 4, 'stepTime': 0.1375, 
    'step': 2, 'jobName': 'Job20230721topDownClampRotX', 'severe': 3, 
    'iterations': 4, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230721topDownClampRotX']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 4, 
    'jobName': 'Job20230721topDownClampRotX'})
mdb.jobs['Job20230721topDownClampRotX']._Message(STATUS, {'totalTime': 1.15625, 
    'attempts': 1, 'timeIncrement': 0.01875, 'increment': 5, 
    'stepTime': 0.15625, 'step': 2, 'jobName': 'Job20230721topDownClampRotX', 
    'severe': 2, 'iterations': 3, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230721topDownClampRotX']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 5, 
    'jobName': 'Job20230721topDownClampRotX'})
mdb.jobs['Job20230721topDownClampRotX']._Message(STATUS, {
    'totalTime': 1.184375, 'attempts': 1, 'timeIncrement': 0.028125, 
    'increment': 6, 'stepTime': 0.184375, 'step': 2, 
    'jobName': 'Job20230721topDownClampRotX', 'severe': 3, 'iterations': 7, 
    'phase': STANDARD_PHASE, 'equilibrium': 4})
mdb.jobs['Job20230721topDownClampRotX']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 6, 
    'jobName': 'Job20230721topDownClampRotX'})
mdb.jobs['Job20230721topDownClampRotX']._Message(WARNING, {
    'phase': STANDARD_PHASE, 
    'message': 'THE STRAIN INCREMENT HAS EXCEEDED FIFTY TIMES THE STRAIN TO CAUSE FIRST YIELD AT 10 POINTS', 
    'jobName': 'Job20230721topDownClampRotX'})
mdb.jobs['Job20230721topDownClampRotX']._Message(STATUS, {
    'totalTime': 1.184375, 'attempts': ' 1U', 'timeIncrement': 0.0421875, 
    'increment': 7, 'stepTime': 0.184375, 'step': 2, 
    'jobName': 'Job20230721topDownClampRotX', 'severe': 4, 'iterations': 4, 
    'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job20230721topDownClampRotX']._Message(WARNING, {
    'phase': STANDARD_PHASE, 
    'message': 'THE STRAIN INCREMENT HAS EXCEEDED FIFTY TIMES THE STRAIN TO CAUSE FIRST YIELD AT 2 POINTS', 
    'jobName': 'Job20230721topDownClampRotX'})
mdb.jobs['Job20230721topDownClampRotX']._Message(STATUS, {
    'totalTime': 1.184375, 'attempts': ' 2U', 'timeIncrement': 0.010546875, 
    'increment': 7, 'stepTime': 0.184375, 'step': 2, 
    'jobName': 'Job20230721topDownClampRotX', 'severe': 6, 'iterations': 6, 
    'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job20230721topDownClampRotX']._Message(STATUS, {
    'totalTime': 1.18701171875, 'attempts': 3, 'timeIncrement': 0.00263671875, 
    'increment': 7, 'stepTime': 0.18701171875, 'step': 2, 
    'jobName': 'Job20230721topDownClampRotX', 'severe': 3, 'iterations': 8, 
    'phase': STANDARD_PHASE, 'equilibrium': 5})
mdb.jobs['Job20230721topDownClampRotX']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 7, 
    'jobName': 'Job20230721topDownClampRotX'})
mdb.jobs['Job20230721topDownClampRotX']._Message(STATUS, {
    'totalTime': 1.1896484375, 'attempts': 1, 'timeIncrement': 0.00263671875, 
    'increment': 8, 'stepTime': 0.1896484375, 'step': 2, 
    'jobName': 'Job20230721topDownClampRotX', 'severe': 1, 'iterations': 10, 
    'phase': STANDARD_PHASE, 'equilibrium': 9})
mdb.jobs['Job20230721topDownClampRotX']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 8, 
    'jobName': 'Job20230721topDownClampRotX'})
mdb.jobs['Job20230721topDownClampRotX']._Message(STATUS, {
    'totalTime': 1.1896484375, 'attempts': ' 1U', 
    'timeIncrement': 0.00263671875, 'increment': 9, 'stepTime': 0.1896484375, 
    'step': 2, 'jobName': 'Job20230721topDownClampRotX', 'severe': 5, 
    'iterations': 8, 'phase': STANDARD_PHASE, 'equilibrium': 3})
mdb.jobs['Job20230721topDownClampRotX']._Message(STATUS, {
    'totalTime': 1.1903076171875, 'attempts': 2, 
    'timeIncrement': 0.0006591796875, 'increment': 9, 
    'stepTime': 0.1903076171875, 'step': 2, 
    'jobName': 'Job20230721topDownClampRotX', 'severe': 1, 'iterations': 6, 
    'phase': STANDARD_PHASE, 'equilibrium': 5})
mdb.jobs['Job20230721topDownClampRotX']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 9, 
    'jobName': 'Job20230721topDownClampRotX'})
mdb.jobs['Job20230721topDownClampRotX']._Message(WARNING, {
    'phase': STANDARD_PHASE, 
    'message': 'FORCE equilibrium accepted using the alternate tolerance.', 
    'jobName': 'Job20230721topDownClampRotX'})
mdb.jobs['Job20230721topDownClampRotX']._Message(STATUS, {
    'totalTime': 1.190966796875, 'attempts': 1, 
    'timeIncrement': 0.0006591796875, 'increment': 10, 
    'stepTime': 0.190966796875, 'step': 2, 
    'jobName': 'Job20230721topDownClampRotX', 'severe': 0, 'iterations': 10, 
    'phase': STANDARD_PHASE, 'equilibrium': 10})
mdb.jobs['Job20230721topDownClampRotX']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 10, 
    'jobName': 'Job20230721topDownClampRotX'})
mdb.jobs['Job20230721topDownClampRotX']._Message(STATUS, {
    'totalTime': 1.190966796875, 'attempts': ' 1U', 
    'timeIncrement': 0.0006591796875, 'increment': 11, 
    'stepTime': 0.190966796875, 'step': 2, 
    'jobName': 'Job20230721topDownClampRotX', 'severe': 0, 'iterations': 10, 
    'phase': STANDARD_PHASE, 'equilibrium': 10})
mdb.jobs['Job20230721topDownClampRotX']._Message(STATUS, {
    'totalTime': 1.19129638671875, 'attempts': 2, 
    'timeIncrement': 0.00032958984375, 'increment': 11, 
    'stepTime': 0.19129638671875, 'step': 2, 
    'jobName': 'Job20230721topDownClampRotX', 'severe': 0, 'iterations': 11, 
    'phase': STANDARD_PHASE, 'equilibrium': 11})
mdb.jobs['Job20230721topDownClampRotX']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 11, 
    'jobName': 'Job20230721topDownClampRotX'})
mdb.jobs['Job20230721topDownClampRotX']._Message(STATUS, {
    'totalTime': 1.19154357910156, 'attempts': 1, 
    'timeIncrement': 0.0002471923828125, 'increment': 12, 
    'stepTime': 0.191543579101563, 'step': 2, 
    'jobName': 'Job20230721topDownClampRotX', 'severe': 0, 'iterations': 15, 
    'phase': STANDARD_PHASE, 'equilibrium': 15})
mdb.jobs['Job20230721topDownClampRotX']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 12, 
    'jobName': 'Job20230721topDownClampRotX'})
mdb.jobs['Job20230721topDownClampRotX']._Message(STATUS, {
    'totalTime': 1.19154357910156, 'attempts': ' 1U', 
    'timeIncrement': 0.000185394287109375, 'increment': 13, 
    'stepTime': 0.191543579101563, 'step': 2, 
    'jobName': 'Job20230721topDownClampRotX', 'severe': 12, 'iterations': 12, 
    'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job20230721topDownClampRotX']._Message(STATUS, {
    'totalTime': 1.19154357910156, 'attempts': ' 2U', 
    'timeIncrement': 4.63485717773438e-05, 'increment': 13, 
    'stepTime': 0.191543579101563, 'step': 2, 
    'jobName': 'Job20230721topDownClampRotX', 'severe': 1, 'iterations': 17, 
    'phase': STANDARD_PHASE, 'equilibrium': 16})
mdb.jobs['Job20230721topDownClampRotX']._Message(STATUS, {
    'totalTime': 1.19155516624451, 'attempts': 3, 
    'timeIncrement': 1.15871429443359e-05, 'increment': 13, 
    'stepTime': 0.191555166244507, 'step': 2, 
    'jobName': 'Job20230721topDownClampRotX', 'severe': 1, 'iterations': 3, 
    'phase': STANDARD_PHASE, 'equilibrium': 2})
mdb.jobs['Job20230721topDownClampRotX']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 13, 
    'jobName': 'Job20230721topDownClampRotX'})
mdb.jobs['Job20230721topDownClampRotX']._Message(STATUS, {
    'totalTime': 1.19156675338745, 'attempts': 1, 
    'timeIncrement': 1.15871429443359e-05, 'increment': 14, 
    'stepTime': 0.191566753387451, 'step': 2, 
    'jobName': 'Job20230721topDownClampRotX', 'severe': 2, 'iterations': 3, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230721topDownClampRotX']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 14, 
    'jobName': 'Job20230721topDownClampRotX'})
mdb.jobs['Job20230721topDownClampRotX']._Message(STATUS, {
    'totalTime': 1.19156675338745, 'attempts': ' 1U', 
    'timeIncrement': 1.73807144165039e-05, 'increment': 15, 
    'stepTime': 0.191566753387451, 'step': 2, 
    'jobName': 'Job20230721topDownClampRotX', 'severe': 0, 'iterations': 16, 
    'phase': STANDARD_PHASE, 'equilibrium': 16})
mdb.jobs['Job20230721topDownClampRotX']._Message(ERROR, {
    'phase': STANDARD_PHASE, 
    'message': 'Time increment required is less than the minimum specified', 
    'jobName': 'Job20230721topDownClampRotX'})
mdb.jobs['Job20230721topDownClampRotX']._Message(STATUS, {
    'totalTime': 1.19156675338745, 'attempts': ' 2U', 'timeIncrement': 1e-05, 
    'increment': 15, 'stepTime': 0.191566753387451, 'step': 2, 
    'jobName': 'Job20230721topDownClampRotX', 'severe': 0, 'iterations': 16, 
    'phase': STANDARD_PHASE, 'equilibrium': 16})
mdb.jobs['Job20230721topDownClampRotX']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 15, 
    'jobName': 'Job20230721topDownClampRotX'})
mdb.jobs['Job20230721topDownClampRotX']._Message(STATUS, {
    'totalTime': 1.19156675338745, 'attempts': 3, 'timeIncrement': 1e-35, 
    'increment': 15, 'stepTime': 0.191566753387451, 'step': 2, 
    'jobName': 'Job20230721topDownClampRotX', 'severe': 0, 'iterations': 0, 
    'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job20230721topDownClampRotX']._Message(ERROR, {
    'phase': STANDARD_PHASE, 
    'message': 'THE ANALYSIS HAS BEEN TERMINATED DUE TO PREVIOUS ERRORS. ALL OUTPUT REQUESTS HAVE BEEN WRITTEN FOR THE LAST CONVERGED INCREMENT.', 
    'jobName': 'Job20230721topDownClampRotX'})
mdb.jobs['Job20230721topDownClampRotX']._Message(ABORTED, {
    'phase': STANDARD_PHASE, 'message': 'Analysis phase failed due to errors', 
    'jobName': 'Job20230721topDownClampRotX'})
mdb.jobs['Job20230721topDownClampRotX']._Message(ERROR, {
    'message': 'Abaqus/Standard Analysis exited with an error - Please see the  message file for possible error messages if the file exists.', 
    'jobName': 'Job20230721topDownClampRotX'})
mdb.jobs['Job20230721topDownClampRotX']._Message(JOB_ABORTED, {
    'message': 'Abaqus/Standard Analysis exited with an error - Please see the  message file for possible error messages if the file exists.', 
    'jobName': 'Job20230721topDownClampRotX'})
# Save by xinlo on 2023_07_22-12.26.39; build 2017 2016_09_27-14.54.59 126836
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].boundaryConditions['mfEnd3'].setValuesInStep(stepName=
    'cyclicLoading', u1=5.0, u2=0.0)
mdb.models['Model-1'].boundaryConditions['mfEnd4'].setValuesInStep(stepName=
    'cyclicLoading', u1=-5.0, u2=0.0)
mdb.Job(name='Job20230722topDownClampRotY', objectToCopy=
    mdb.jobs['Job20230721topDownClampRotX'])
# Save by xinlo on 2023_07_22-13.10.01; build 2017 2016_09_27-14.54.59 126836
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['Job20230722topDownClampRotY'].submit(consistencyChecking=OFF)
mdb.jobs['Job20230722topDownClampRotY']._Message(STARTED, {
    'phase': BATCHPRE_PHASE, 'clientHost': 'DESKTOP-A24BAF5', 'handle': 0, 
    'jobName': 'Job20230722topDownClampRotY'})
mdb.jobs['Job20230722topDownClampRotY']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'WHENEVER A TRANSLATION (ROTATION) DOF AT A NODE IS CONSTRAINED BY A KINEMATIC COUPLING DEFINITION THE TRANSLATION (ROTATION) DOFS FOR THAT NODE CANNOT BE INCLUDED IN ANY OTHER CONSTRAINT INCLUDING MPCS, RIGID BODIES, ETC.', 
    'jobName': 'Job20230722topDownClampRotY'})
mdb.jobs['Job20230722topDownClampRotY']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'MPCS (EXTERNAL or INTERNAL, including those generated from rigid body definitions), KINEMATIC COUPLINGS, AND/OR EQUATIONS WILL ACTIVATE ADDITIONAL DEGREES OF FREEDOM', 
    'jobName': 'Job20230722topDownClampRotY'})
mdb.jobs['Job20230722topDownClampRotY']._Message(ODB_FILE, {
    'phase': BATCHPRE_PHASE, 
    'file': 'C:\\temp\\Job20230722topDownClampRotY.odb', 
    'jobName': 'Job20230722topDownClampRotY'})
mdb.jobs['Job20230722topDownClampRotY']._Message(COMPLETED, {
    'phase': BATCHPRE_PHASE, 'message': 'Analysis phase complete', 
    'jobName': 'Job20230722topDownClampRotY'})
mdb.jobs['Job20230722topDownClampRotY']._Message(STARTED, {
    'phase': STANDARD_PHASE, 'clientHost': 'DESKTOP-A24BAF5', 'handle': 5052, 
    'jobName': 'Job20230722topDownClampRotY'})
mdb.jobs['Job20230722topDownClampRotY']._Message(STEP, {
    'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job20230722topDownClampRotY'})
mdb.jobs['Job20230722topDownClampRotY']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 0, 
    'jobName': 'Job20230722topDownClampRotY'})
mdb.jobs['Job20230722topDownClampRotY']._Message(MEMORY_ESTIMATE, {
    'phase': STANDARD_PHASE, 'jobName': 'Job20230722topDownClampRotY', 
    'memory': 7975.0})
mdb.jobs['Job20230722topDownClampRotY']._Message(PHYSICAL_MEMORY, {
    'phase': STANDARD_PHASE, 'physical_memory': 32620.0, 
    'jobName': 'Job20230722topDownClampRotY'})
mdb.jobs['Job20230722topDownClampRotY']._Message(MINIMUM_MEMORY, {
    'minimum_memory': 844.0, 'phase': STANDARD_PHASE, 
    'jobName': 'Job20230722topDownClampRotY'})
mdb.jobs['Job20230722topDownClampRotY']._Message(STATUS, {'totalTime': 0.1, 
    'attempts': 1, 'timeIncrement': 0.1, 'increment': 1, 'stepTime': 0.1, 
    'step': 1, 'jobName': 'Job20230722topDownClampRotY', 'severe': 27, 
    'iterations': 27, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job20230722topDownClampRotY']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 1, 
    'jobName': 'Job20230722topDownClampRotY'})
mdb.jobs['Job20230722topDownClampRotY']._Message(STATUS, {'totalTime': 0.2, 
    'attempts': 1, 'timeIncrement': 0.1, 'increment': 2, 'stepTime': 0.2, 
    'step': 1, 'jobName': 'Job20230722topDownClampRotY', 'severe': 9, 
    'iterations': 10, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230722topDownClampRotY']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 2, 
    'jobName': 'Job20230722topDownClampRotY'})
mdb.jobs['Job20230722topDownClampRotY']._Message(STATUS, {'totalTime': 0.3, 
    'attempts': 1, 'timeIncrement': 0.1, 'increment': 3, 'stepTime': 0.3, 
    'step': 1, 'jobName': 'Job20230722topDownClampRotY', 'severe': 7, 
    'iterations': 8, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230722topDownClampRotY']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 3, 
    'jobName': 'Job20230722topDownClampRotY'})
mdb.jobs['Job20230722topDownClampRotY']._Message(STATUS, {'totalTime': 0.45, 
    'attempts': 1, 'timeIncrement': 0.15, 'increment': 4, 'stepTime': 0.45, 
    'step': 1, 'jobName': 'Job20230722topDownClampRotY', 'severe': 4, 
    'iterations': 5, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230722topDownClampRotY']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 4, 
    'jobName': 'Job20230722topDownClampRotY'})
mdb.jobs['Job20230722topDownClampRotY']._Message(STATUS, {'totalTime': 0.675, 
    'attempts': 1, 'timeIncrement': 0.225, 'increment': 5, 'stepTime': 0.675, 
    'step': 1, 'jobName': 'Job20230722topDownClampRotY', 'severe': 2, 
    'iterations': 3, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230722topDownClampRotY']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 5, 
    'jobName': 'Job20230722topDownClampRotY'})
mdb.jobs['Job20230722topDownClampRotY']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 6, 
    'jobName': 'Job20230722topDownClampRotY'})
mdb.jobs['Job20230722topDownClampRotY']._Message(STATUS, {'totalTime': 1.0, 
    'attempts': 1, 'timeIncrement': 0.325, 'increment': 6, 'stepTime': 1.0, 
    'step': 1, 'jobName': 'Job20230722topDownClampRotY', 'severe': 7, 
    'iterations': 8, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230722topDownClampRotY']._Message(END_STEP, {
    'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job20230722topDownClampRotY'})
mdb.jobs['Job20230722topDownClampRotY']._Message(STEP, {
    'phase': STANDARD_PHASE, 'stepId': 2, 
    'jobName': 'Job20230722topDownClampRotY'})
mdb.jobs['Job20230722topDownClampRotY']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 0, 
    'jobName': 'Job20230722topDownClampRotY'})
mdb.jobs['Job20230722topDownClampRotY']._Message(MEMORY_ESTIMATE, {
    'phase': STANDARD_PHASE, 'jobName': 'Job20230722topDownClampRotY', 
    'memory': 7424.0})
mdb.jobs['Job20230722topDownClampRotY']._Message(PHYSICAL_MEMORY, {
    'phase': STANDARD_PHASE, 'physical_memory': 32620.0, 
    'jobName': 'Job20230722topDownClampRotY'})
mdb.jobs['Job20230722topDownClampRotY']._Message(MINIMUM_MEMORY, {
    'minimum_memory': 822.0, 'phase': STANDARD_PHASE, 
    'jobName': 'Job20230722topDownClampRotY'})
mdb.jobs['Job20230722topDownClampRotY']._Message(STATUS, {'totalTime': 1.0, 
    'attempts': ' 1U', 'timeIncrement': 0.05, 'increment': 1, 'stepTime': 0.0, 
    'step': 2, 'jobName': 'Job20230722topDownClampRotY', 'severe': 14, 
    'iterations': 14, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job20230722topDownClampRotY']._Message(WARNING, {
    'phase': STANDARD_PHASE, 
    'message': 'DISPLACEMENT INCREMENT FOR CONTACT IS TOO BIG.', 
    'jobName': 'Job20230722topDownClampRotY'})
mdb.jobs['Job20230722topDownClampRotY']._Message(WARNING, {
    'phase': STANDARD_PHASE, 
    'message': 'DISPLACEMENT INCREMENT FOR CONTACT IS TOO BIG.', 
    'jobName': 'Job20230722topDownClampRotY'})
mdb.jobs['Job20230722topDownClampRotY']._Message(WARNING, {
    'phase': STANDARD_PHASE, 
    'message': 'DISPLACEMENT INCREMENT FOR CONTACT IS TOO BIG.', 
    'jobName': 'Job20230722topDownClampRotY'})
mdb.jobs['Job20230722topDownClampRotY']._Message(WARNING, {
    'phase': STANDARD_PHASE, 
    'message': 'DISPLACEMENT INCREMENT FOR CONTACT IS TOO BIG.', 
    'jobName': 'Job20230722topDownClampRotY'})
mdb.jobs['Job20230722topDownClampRotY']._Message(WARNING, {
    'phase': STANDARD_PHASE, 
    'message': 'THE STRAIN INCREMENT HAS EXCEEDED FIFTY TIMES THE STRAIN TO CAUSE FIRST YIELD AT 18255 POINTS', 
    'jobName': 'Job20230722topDownClampRotY'})
mdb.jobs['Job20230722topDownClampRotY']._Message(WARNING, {
    'phase': STANDARD_PHASE, 
    'message': 'THE STRAIN INCREMENT IS SO LARGE THAT THE PROGRAM WILL NOT ATTEMPT THE PLASTICITY CALCULATION AT 545 POINTS', 
    'jobName': 'Job20230722topDownClampRotY'})
mdb.jobs['Job20230722topDownClampRotY']._Message(STATUS, {'totalTime': 1.0, 
    'attempts': ' 2U', 'timeIncrement': 0.0125, 'increment': 1, 
    'stepTime': 0.0, 'step': 2, 'jobName': 'Job20230722topDownClampRotY', 
    'severe': 1, 'iterations': 2, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230722topDownClampRotY']._Message(STATUS, {
    'totalTime': 1.003125, 'attempts': 3, 'timeIncrement': 0.003125, 
    'increment': 1, 'stepTime': 0.003125, 'step': 2, 
    'jobName': 'Job20230722topDownClampRotY', 'severe': 5, 'iterations': 6, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230722topDownClampRotY']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 1, 
    'jobName': 'Job20230722topDownClampRotY'})
mdb.jobs['Job20230722topDownClampRotY']._Message(STATUS, {'totalTime': 1.00625, 
    'attempts': 1, 'timeIncrement': 0.003125, 'increment': 2, 
    'stepTime': 0.00625, 'step': 2, 'jobName': 'Job20230722topDownClampRotY', 
    'severe': 3, 'iterations': 4, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230722topDownClampRotY']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 2, 
    'jobName': 'Job20230722topDownClampRotY'})
mdb.jobs['Job20230722topDownClampRotY']._Message(STATUS, {
    'totalTime': 1.0109375, 'attempts': 1, 'timeIncrement': 0.0046875, 
    'increment': 3, 'stepTime': 0.0109375, 'step': 2, 
    'jobName': 'Job20230722topDownClampRotY', 'severe': 3, 'iterations': 4, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230722topDownClampRotY']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 3, 
    'jobName': 'Job20230722topDownClampRotY'})
mdb.jobs['Job20230722topDownClampRotY']._Message(STATUS, {
    'totalTime': 1.01796875, 'attempts': 1, 'timeIncrement': 0.00703125, 
    'increment': 4, 'stepTime': 0.01796875, 'step': 2, 
    'jobName': 'Job20230722topDownClampRotY', 'severe': 4, 'iterations': 5, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230722topDownClampRotY']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 4, 
    'jobName': 'Job20230722topDownClampRotY'})
mdb.jobs['Job20230722topDownClampRotY']._Message(STATUS, {
    'totalTime': 1.028515625, 'attempts': 1, 'timeIncrement': 0.010546875, 
    'increment': 5, 'stepTime': 0.028515625, 'step': 2, 
    'jobName': 'Job20230722topDownClampRotY', 'severe': 3, 'iterations': 4, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230722topDownClampRotY']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 5, 
    'jobName': 'Job20230722topDownClampRotY'})
mdb.jobs['Job20230722topDownClampRotY']._Message(STATUS, {
    'totalTime': 1.0443359375, 'attempts': 1, 'timeIncrement': 0.0158203125, 
    'increment': 6, 'stepTime': 0.0443359375, 'step': 2, 
    'jobName': 'Job20230722topDownClampRotY', 'severe': 5, 'iterations': 5, 
    'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job20230722topDownClampRotY']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 6, 
    'jobName': 'Job20230722topDownClampRotY'})
mdb.jobs['Job20230722topDownClampRotY']._Message(STATUS, {
    'totalTime': 1.06806640625, 'attempts': 1, 'timeIncrement': 0.02373046875, 
    'increment': 7, 'stepTime': 0.06806640625, 'step': 2, 
    'jobName': 'Job20230722topDownClampRotY', 'severe': 7, 'iterations': 8, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230722topDownClampRotY']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 7, 
    'jobName': 'Job20230722topDownClampRotY'})
mdb.jobs['Job20230722topDownClampRotY']._Message(STATUS, {
    'totalTime': 1.103662109375, 'attempts': 1, 
    'timeIncrement': 0.035595703125, 'increment': 8, 
    'stepTime': 0.103662109375, 'step': 2, 
    'jobName': 'Job20230722topDownClampRotY', 'severe': 11, 'iterations': 12, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230722topDownClampRotY']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 8, 
    'jobName': 'Job20230722topDownClampRotY'})
mdb.jobs['Job20230722topDownClampRotY']._Message(STATUS, {
    'totalTime': 1.153662109375, 'attempts': 1, 'timeIncrement': 0.05, 
    'increment': 9, 'stepTime': 0.153662109375, 'step': 2, 
    'jobName': 'Job20230722topDownClampRotY', 'severe': 10, 'iterations': 11, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230722topDownClampRotY']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 9, 
    'jobName': 'Job20230722topDownClampRotY'})
mdb.jobs['Job20230722topDownClampRotY']._Message(STATUS, {
    'totalTime': 1.203662109375, 'attempts': 1, 'timeIncrement': 0.05, 
    'increment': 10, 'stepTime': 0.203662109375, 'step': 2, 
    'jobName': 'Job20230722topDownClampRotY', 'severe': 6, 'iterations': 7, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230722topDownClampRotY']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 10, 
    'jobName': 'Job20230722topDownClampRotY'})
mdb.jobs['Job20230722topDownClampRotY']._Message(STATUS, {
    'totalTime': 1.253662109375, 'attempts': 1, 'timeIncrement': 0.05, 
    'increment': 11, 'stepTime': 0.253662109375, 'step': 2, 
    'jobName': 'Job20230722topDownClampRotY', 'severe': 7, 'iterations': 8, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230722topDownClampRotY']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 11, 
    'jobName': 'Job20230722topDownClampRotY'})
mdb.jobs['Job20230722topDownClampRotY']._Message(WARNING, {
    'phase': STANDARD_PHASE, 
    'message': 'DISPLACEMENT INCREMENT FOR CONTACT IS TOO BIG.', 
    'jobName': 'Job20230722topDownClampRotY'})
mdb.jobs['Job20230722topDownClampRotY']._Message(WARNING, {
    'phase': STANDARD_PHASE, 
    'message': 'DISPLACEMENT INCREMENT FOR CONTACT IS TOO BIG.', 
    'jobName': 'Job20230722topDownClampRotY'})
mdb.jobs['Job20230722topDownClampRotY']._Message(WARNING, {
    'phase': STANDARD_PHASE, 
    'message': 'THE STRAIN INCREMENT HAS EXCEEDED FIFTY TIMES THE STRAIN TO CAUSE FIRST YIELD AT 11 POINTS', 
    'jobName': 'Job20230722topDownClampRotY'})
mdb.jobs['Job20230722topDownClampRotY']._Message(STATUS, {
    'totalTime': 1.253662109375, 'attempts': ' 1U', 'timeIncrement': 0.05, 
    'increment': 12, 'stepTime': 0.253662109375, 'step': 2, 
    'jobName': 'Job20230722topDownClampRotY', 'severe': 1, 'iterations': 2, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230722topDownClampRotY']._Message(STATUS, {
    'totalTime': 1.266162109375, 'attempts': 2, 'timeIncrement': 0.0125, 
    'increment': 12, 'stepTime': 0.266162109375, 'step': 2, 
    'jobName': 'Job20230722topDownClampRotY', 'severe': 13, 'iterations': 14, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230722topDownClampRotY']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 12, 
    'jobName': 'Job20230722topDownClampRotY'})
mdb.jobs['Job20230722topDownClampRotY']._Message(STATUS, {
    'totalTime': 1.284912109375, 'attempts': 1, 'timeIncrement': 0.01875, 
    'increment': 13, 'stepTime': 0.284912109375, 'step': 2, 
    'jobName': 'Job20230722topDownClampRotY', 'severe': 3, 'iterations': 5, 
    'phase': STANDARD_PHASE, 'equilibrium': 2})
mdb.jobs['Job20230722topDownClampRotY']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 13, 
    'jobName': 'Job20230722topDownClampRotY'})
mdb.jobs['Job20230722topDownClampRotY']._Message(STATUS, {
    'totalTime': 1.313037109375, 'attempts': 1, 'timeIncrement': 0.028125, 
    'increment': 14, 'stepTime': 0.313037109375, 'step': 2, 
    'jobName': 'Job20230722topDownClampRotY', 'severe': 10, 'iterations': 11, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230722topDownClampRotY']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 14, 
    'jobName': 'Job20230722topDownClampRotY'})
mdb.jobs['Job20230722topDownClampRotY']._Message(STATUS, {
    'totalTime': 1.355224609375, 'attempts': 1, 'timeIncrement': 0.0421875, 
    'increment': 15, 'stepTime': 0.355224609375, 'step': 2, 
    'jobName': 'Job20230722topDownClampRotY', 'severe': 16, 'iterations': 17, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230722topDownClampRotY']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 15, 
    'jobName': 'Job20230722topDownClampRotY'})
mdb.jobs['Job20230722topDownClampRotY']._Message(STATUS, {
    'totalTime': 1.386865234375, 'attempts': 1, 'timeIncrement': 0.031640625, 
    'increment': 16, 'stepTime': 0.386865234375, 'step': 2, 
    'jobName': 'Job20230722topDownClampRotY', 'severe': 7, 'iterations': 8, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230722topDownClampRotY']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 16, 
    'jobName': 'Job20230722topDownClampRotY'})
mdb.jobs['Job20230722topDownClampRotY']._Message(STATUS, {
    'totalTime': 1.418505859375, 'attempts': 1, 'timeIncrement': 0.031640625, 
    'increment': 17, 'stepTime': 0.418505859375, 'step': 2, 
    'jobName': 'Job20230722topDownClampRotY', 'severe': 13, 'iterations': 13, 
    'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job20230722topDownClampRotY']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 17, 
    'jobName': 'Job20230722topDownClampRotY'})
mdb.jobs['Job20230722topDownClampRotY']._Message(STATUS, {
    'totalTime': 1.465966796875, 'attempts': 1, 'timeIncrement': 0.0474609375, 
    'increment': 18, 'stepTime': 0.465966796875, 'step': 2, 
    'jobName': 'Job20230722topDownClampRotY', 'severe': 5, 'iterations': 6, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230722topDownClampRotY']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 18, 
    'jobName': 'Job20230722topDownClampRotY'})
mdb.jobs['Job20230722topDownClampRotY']._Message(STATUS, {
    'totalTime': 1.515966796875, 'attempts': 1, 'timeIncrement': 0.05, 
    'increment': 19, 'stepTime': 0.515966796875, 'step': 2, 
    'jobName': 'Job20230722topDownClampRotY', 'severe': 7, 'iterations': 8, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230722topDownClampRotY']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 19, 
    'jobName': 'Job20230722topDownClampRotY'})
mdb.jobs['Job20230722topDownClampRotY']._Message(WARNING, {
    'phase': STANDARD_PHASE, 
    'message': 'DISPLACEMENT INCREMENT FOR CONTACT IS TOO BIG.', 
    'jobName': 'Job20230722topDownClampRotY'})
mdb.jobs['Job20230722topDownClampRotY']._Message(WARNING, {
    'phase': STANDARD_PHASE, 
    'message': 'DISPLACEMENT INCREMENT FOR CONTACT IS TOO BIG.', 
    'jobName': 'Job20230722topDownClampRotY'})
mdb.jobs['Job20230722topDownClampRotY']._Message(WARNING, {
    'phase': STANDARD_PHASE, 
    'message': 'DISPLACEMENT INCREMENT FOR CONTACT IS TOO BIG.', 
    'jobName': 'Job20230722topDownClampRotY'})
mdb.jobs['Job20230722topDownClampRotY']._Message(STATUS, {
    'totalTime': 1.515966796875, 'attempts': ' 1U', 'timeIncrement': 0.05, 
    'increment': 20, 'stepTime': 0.515966796875, 'step': 2, 
    'jobName': 'Job20230722topDownClampRotY', 'severe': 4, 'iterations': 5, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230722topDownClampRotY']._Message(STATUS, {
    'totalTime': 1.528466796875, 'attempts': 2, 'timeIncrement': 0.0125, 
    'increment': 20, 'stepTime': 0.528466796875, 'step': 2, 
    'jobName': 'Job20230722topDownClampRotY', 'severe': 6, 'iterations': 7, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230722topDownClampRotY']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 20, 
    'jobName': 'Job20230722topDownClampRotY'})
mdb.jobs['Job20230722topDownClampRotY']._Message(STATUS, {
    'totalTime': 1.547216796875, 'attempts': 1, 'timeIncrement': 0.01875, 
    'increment': 21, 'stepTime': 0.547216796875, 'step': 2, 
    'jobName': 'Job20230722topDownClampRotY', 'severe': 13, 'iterations': 14, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230722topDownClampRotY']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 21, 
    'jobName': 'Job20230722topDownClampRotY'})
mdb.jobs['Job20230722topDownClampRotY']._Message(STATUS, {
    'totalTime': 1.561279296875, 'attempts': 1, 'timeIncrement': 0.0140625, 
    'increment': 22, 'stepTime': 0.561279296875, 'step': 2, 
    'jobName': 'Job20230722topDownClampRotY', 'severe': 3, 'iterations': 4, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230722topDownClampRotY']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 22, 
    'jobName': 'Job20230722topDownClampRotY'})
mdb.jobs['Job20230722topDownClampRotY']._Message(STATUS, {
    'totalTime': 1.575341796875, 'attempts': 1, 'timeIncrement': 0.0140625, 
    'increment': 23, 'stepTime': 0.575341796875, 'step': 2, 
    'jobName': 'Job20230722topDownClampRotY', 'severe': 3, 'iterations': 4, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230722topDownClampRotY']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 23, 
    'jobName': 'Job20230722topDownClampRotY'})
mdb.jobs['Job20230722topDownClampRotY']._Message(STATUS, {
    'totalTime': 1.596435546875, 'attempts': 1, 'timeIncrement': 0.02109375, 
    'increment': 24, 'stepTime': 0.596435546875, 'step': 2, 
    'jobName': 'Job20230722topDownClampRotY', 'severe': 2, 'iterations': 3, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230722topDownClampRotY']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 24, 
    'jobName': 'Job20230722topDownClampRotY'})
mdb.jobs['Job20230722topDownClampRotY']._Message(STATUS, {
    'totalTime': 1.628076171875, 'attempts': 1, 'timeIncrement': 0.031640625, 
    'increment': 25, 'stepTime': 0.628076171875, 'step': 2, 
    'jobName': 'Job20230722topDownClampRotY', 'severe': 5, 'iterations': 6, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230722topDownClampRotY']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 25, 
    'jobName': 'Job20230722topDownClampRotY'})
mdb.jobs['Job20230722topDownClampRotY']._Message(STATUS, {
    'totalTime': 1.675537109375, 'attempts': 1, 'timeIncrement': 0.0474609375, 
    'increment': 26, 'stepTime': 0.675537109375, 'step': 2, 
    'jobName': 'Job20230722topDownClampRotY', 'severe': 7, 'iterations': 8, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230722topDownClampRotY']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 26, 
    'jobName': 'Job20230722topDownClampRotY'})
mdb.jobs['Job20230722topDownClampRotY']._Message(STATUS, {
    'totalTime': 1.725537109375, 'attempts': 1, 'timeIncrement': 0.05, 
    'increment': 27, 'stepTime': 0.725537109375, 'step': 2, 
    'jobName': 'Job20230722topDownClampRotY', 'severe': 6, 'iterations': 8, 
    'phase': STANDARD_PHASE, 'equilibrium': 2})
mdb.jobs['Job20230722topDownClampRotY']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 27, 
    'jobName': 'Job20230722topDownClampRotY'})
mdb.jobs['Job20230722topDownClampRotY']._Message(WARNING, {
    'phase': STANDARD_PHASE, 
    'message': 'DISPLACEMENT INCREMENT FOR CONTACT IS TOO BIG.', 
    'jobName': 'Job20230722topDownClampRotY'})
mdb.jobs['Job20230722topDownClampRotY']._Message(WARNING, {
    'phase': STANDARD_PHASE, 
    'message': 'DISPLACEMENT INCREMENT FOR CONTACT IS TOO BIG.', 
    'jobName': 'Job20230722topDownClampRotY'})
mdb.jobs['Job20230722topDownClampRotY']._Message(WARNING, {
    'phase': STANDARD_PHASE, 
    'message': 'DISPLACEMENT INCREMENT FOR CONTACT IS TOO BIG.', 
    'jobName': 'Job20230722topDownClampRotY'})
mdb.jobs['Job20230722topDownClampRotY']._Message(STATUS, {
    'totalTime': 1.725537109375, 'attempts': ' 1U', 'timeIncrement': 0.05, 
    'increment': 28, 'stepTime': 0.725537109375, 'step': 2, 
    'jobName': 'Job20230722topDownClampRotY', 'severe': 3, 'iterations': 4, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230722topDownClampRotY']._Message(STATUS, {
    'totalTime': 1.738037109375, 'attempts': 2, 'timeIncrement': 0.0125, 
    'increment': 28, 'stepTime': 0.738037109375, 'step': 2, 
    'jobName': 'Job20230722topDownClampRotY', 'severe': 2, 'iterations': 3, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230722topDownClampRotY']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 28, 
    'jobName': 'Job20230722topDownClampRotY'})
mdb.jobs['Job20230722topDownClampRotY']._Message(STATUS, {
    'totalTime': 1.756787109375, 'attempts': 1, 'timeIncrement': 0.01875, 
    'increment': 29, 'stepTime': 0.756787109375, 'step': 2, 
    'jobName': 'Job20230722topDownClampRotY', 'severe': 3, 'iterations': 4, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230722topDownClampRotY']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 29, 
    'jobName': 'Job20230722topDownClampRotY'})
mdb.jobs['Job20230722topDownClampRotY']._Message(WARNING, {
    'phase': STANDARD_PHASE, 
    'message': 'THE STRAIN INCREMENT HAS EXCEEDED FIFTY TIMES THE STRAIN TO CAUSE FIRST YIELD AT 11 POINTS', 
    'jobName': 'Job20230722topDownClampRotY'})
mdb.jobs['Job20230722topDownClampRotY']._Message(WARNING, {
    'phase': STANDARD_PHASE, 
    'message': 'THE STRAIN INCREMENT HAS EXCEEDED FIFTY TIMES THE STRAIN TO CAUSE FIRST YIELD AT 208 POINTS', 
    'jobName': 'Job20230722topDownClampRotY'})
mdb.jobs['Job20230722topDownClampRotY']._Message(WARNING, {
    'phase': STANDARD_PHASE, 
    'message': 'THE STRAIN INCREMENT IS SO LARGE THAT THE PROGRAM WILL NOT ATTEMPT THE PLASTICITY CALCULATION AT 2 POINTS', 
    'jobName': 'Job20230722topDownClampRotY'})
mdb.jobs['Job20230722topDownClampRotY']._Message(STATUS, {
    'totalTime': 1.756787109375, 'attempts': ' 1U', 'timeIncrement': 0.028125, 
    'increment': 30, 'stepTime': 0.756787109375, 'step': 2, 
    'jobName': 'Job20230722topDownClampRotY', 'severe': 2, 'iterations': 3, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230722topDownClampRotY']._Message(STATUS, {
    'totalTime': 1.756787109375, 'attempts': ' 2U', 
    'timeIncrement': 0.00703125, 'increment': 30, 'stepTime': 0.756787109375, 
    'step': 2, 'jobName': 'Job20230722topDownClampRotY', 'severe': 7, 
    'iterations': 7, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job20230722topDownClampRotY']._Message(STATUS, {
    'totalTime': 1.758544921875, 'attempts': 3, 'timeIncrement': 0.0017578125, 
    'increment': 30, 'stepTime': 0.758544921875, 'step': 2, 
    'jobName': 'Job20230722topDownClampRotY', 'severe': 4, 'iterations': 5, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230722topDownClampRotY']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 30, 
    'jobName': 'Job20230722topDownClampRotY'})
mdb.jobs['Job20230722topDownClampRotY']._Message(STATUS, {
    'totalTime': 1.761181640625, 'attempts': 1, 'timeIncrement': 0.00263671875, 
    'increment': 31, 'stepTime': 0.761181640625, 'step': 2, 
    'jobName': 'Job20230722topDownClampRotY', 'severe': 2, 'iterations': 3, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230722topDownClampRotY']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 31, 
    'jobName': 'Job20230722topDownClampRotY'})
mdb.jobs['Job20230722topDownClampRotY']._Message(STATUS, {
    'totalTime': 1.76513671875, 'attempts': 1, 'timeIncrement': 0.003955078125, 
    'increment': 32, 'stepTime': 0.76513671875, 'step': 2, 
    'jobName': 'Job20230722topDownClampRotY', 'severe': 3, 'iterations': 4, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230722topDownClampRotY']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 32, 
    'jobName': 'Job20230722topDownClampRotY'})
mdb.jobs['Job20230722topDownClampRotY']._Message(STATUS, {
    'totalTime': 1.7710693359375, 'attempts': 1, 
    'timeIncrement': 0.0059326171875, 'increment': 33, 
    'stepTime': 0.7710693359375, 'step': 2, 
    'jobName': 'Job20230722topDownClampRotY', 'severe': 3, 'iterations': 4, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230722topDownClampRotY']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 33, 
    'jobName': 'Job20230722topDownClampRotY'})
mdb.jobs['Job20230722topDownClampRotY']._Message(STATUS, {
    'totalTime': 1.77996826171875, 'attempts': 1, 
    'timeIncrement': 0.00889892578125, 'increment': 34, 
    'stepTime': 0.77996826171875, 'step': 2, 
    'jobName': 'Job20230722topDownClampRotY', 'severe': 4, 'iterations': 5, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230722topDownClampRotY']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 34, 
    'jobName': 'Job20230722topDownClampRotY'})
mdb.jobs['Job20230722topDownClampRotY']._Message(STATUS, {
    'totalTime': 1.79331665039063, 'attempts': 1, 
    'timeIncrement': 0.013348388671875, 'increment': 35, 
    'stepTime': 0.793316650390625, 'step': 2, 
    'jobName': 'Job20230722topDownClampRotY', 'severe': 3, 'iterations': 4, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230722topDownClampRotY']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 35, 
    'jobName': 'Job20230722topDownClampRotY'})
mdb.jobs['Job20230722topDownClampRotY']._Message(STATUS, {
    'totalTime': 1.81333923339844, 'attempts': 1, 
    'timeIncrement': 0.0200225830078125, 'increment': 36, 
    'stepTime': 0.813339233398438, 'step': 2, 
    'jobName': 'Job20230722topDownClampRotY', 'severe': 7, 'iterations': 8, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230722topDownClampRotY']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 36, 
    'jobName': 'Job20230722topDownClampRotY'})
mdb.jobs['Job20230722topDownClampRotY']._Message(STATUS, {
    'totalTime': 1.84337310791016, 'attempts': 1, 
    'timeIncrement': 0.0300338745117188, 'increment': 37, 
    'stepTime': 0.843373107910156, 'step': 2, 
    'jobName': 'Job20230722topDownClampRotY', 'severe': 14, 'iterations': 15, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230722topDownClampRotY']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 37, 
    'jobName': 'Job20230722topDownClampRotY'})
mdb.jobs['Job20230722topDownClampRotY']._Message(STATUS, {
    'totalTime': 1.88842391967773, 'attempts': 1, 
    'timeIncrement': 0.0450508117675781, 'increment': 38, 
    'stepTime': 0.888423919677734, 'step': 2, 
    'jobName': 'Job20230722topDownClampRotY', 'severe': 12, 'iterations': 13, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230722topDownClampRotY']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 38, 
    'jobName': 'Job20230722topDownClampRotY'})
mdb.jobs['Job20230722topDownClampRotY']._Message(STATUS, {
    'totalTime': 1.93347473144531, 'attempts': 1, 
    'timeIncrement': 0.0450508117675781, 'increment': 39, 
    'stepTime': 0.933474731445312, 'step': 2, 
    'jobName': 'Job20230722topDownClampRotY', 'severe': 10, 'iterations': 11, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230722topDownClampRotY']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 39, 
    'jobName': 'Job20230722topDownClampRotY'})
mdb.jobs['Job20230722topDownClampRotY']._Message(STATUS, {
    'totalTime': 1.98347473144531, 'attempts': 1, 'timeIncrement': 0.05, 
    'increment': 40, 'stepTime': 0.983474731445313, 'step': 2, 
    'jobName': 'Job20230722topDownClampRotY', 'severe': 4, 'iterations': 5, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230722topDownClampRotY']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 40, 
    'jobName': 'Job20230722topDownClampRotY'})
mdb.jobs['Job20230722topDownClampRotY']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 41, 
    'jobName': 'Job20230722topDownClampRotY'})
mdb.jobs['Job20230722topDownClampRotY']._Message(STATUS, {'totalTime': 2.0, 
    'attempts': 1, 'timeIncrement': 0.0165252685546875, 'increment': 41, 
    'stepTime': 1.0, 'step': 2, 'jobName': 'Job20230722topDownClampRotY', 
    'severe': 6, 'iterations': 7, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230722topDownClampRotY']._Message(END_STEP, {
    'phase': STANDARD_PHASE, 'stepId': 2, 
    'jobName': 'Job20230722topDownClampRotY'})
mdb.jobs['Job20230722topDownClampRotY']._Message(COMPLETED, {
    'phase': STANDARD_PHASE, 'message': 'Analysis phase complete', 
    'jobName': 'Job20230722topDownClampRotY'})
mdb.jobs['Job20230722topDownClampRotY']._Message(JOB_COMPLETED, {
    'time': 'Sat Jul 22 16:19:43 2023', 
    'jobName': 'Job20230722topDownClampRotY'})
mdb.models['Model-1'].boundaryConditions['mfEnd3'].setValuesInStep(stepName=
    'cyclicLoading', u1=0.0, ur3=0.05)
mdb.models['Model-1'].boundaryConditions['mfEnd4'].setValuesInStep(stepName=
    'cyclicLoading', u1=0.0, ur3=0.05)
mdb.Job(name='Job20230722topDownClampRotZ', objectToCopy=
    mdb.jobs['Job20230722topDownClampRotY'])
# Save by xinlo on 2023_07_22-16.34.53; build 2017 2016_09_27-14.54.59 126836
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['Job20230722topDownClampRotZ'].submit(consistencyChecking=OFF)
mdb.jobs['Job20230722topDownClampRotZ']._Message(STARTED, {
    'phase': BATCHPRE_PHASE, 'clientHost': 'DESKTOP-A24BAF5', 'handle': 0, 
    'jobName': 'Job20230722topDownClampRotZ'})
mdb.jobs['Job20230722topDownClampRotZ']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'WHENEVER A TRANSLATION (ROTATION) DOF AT A NODE IS CONSTRAINED BY A KINEMATIC COUPLING DEFINITION THE TRANSLATION (ROTATION) DOFS FOR THAT NODE CANNOT BE INCLUDED IN ANY OTHER CONSTRAINT INCLUDING MPCS, RIGID BODIES, ETC.', 
    'jobName': 'Job20230722topDownClampRotZ'})
mdb.jobs['Job20230722topDownClampRotZ']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'MPCS (EXTERNAL or INTERNAL, including those generated from rigid body definitions), KINEMATIC COUPLINGS, AND/OR EQUATIONS WILL ACTIVATE ADDITIONAL DEGREES OF FREEDOM', 
    'jobName': 'Job20230722topDownClampRotZ'})
mdb.jobs['Job20230722topDownClampRotZ']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'FINITE ROTATION BOUNDARY CONDITION SPECIFIED IN MULTISTEP THREE-DIMENSIONAL ANALYSIS. TYPE=VELOCITY SHOULD BE USED', 
    'jobName': 'Job20230722topDownClampRotZ'})
mdb.jobs['Job20230722topDownClampRotZ']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'FINITE ROTATION BOUNDARY CONDITION SPECIFIED IN MULTISTEP THREE-DIMENSIONAL ANALYSIS. TYPE=VELOCITY SHOULD BE USED', 
    'jobName': 'Job20230722topDownClampRotZ'})
mdb.jobs['Job20230722topDownClampRotZ']._Message(ODB_FILE, {
    'phase': BATCHPRE_PHASE, 
    'file': 'C:\\temp\\Job20230722topDownClampRotZ.odb', 
    'jobName': 'Job20230722topDownClampRotZ'})
mdb.jobs['Job20230722topDownClampRotZ']._Message(COMPLETED, {
    'phase': BATCHPRE_PHASE, 'message': 'Analysis phase complete', 
    'jobName': 'Job20230722topDownClampRotZ'})
mdb.jobs['Job20230722topDownClampRotZ']._Message(STARTED, {
    'phase': STANDARD_PHASE, 'clientHost': 'DESKTOP-A24BAF5', 'handle': 39040, 
    'jobName': 'Job20230722topDownClampRotZ'})
mdb.jobs['Job20230722topDownClampRotZ']._Message(STEP, {
    'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job20230722topDownClampRotZ'})
mdb.jobs['Job20230722topDownClampRotZ']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 0, 
    'jobName': 'Job20230722topDownClampRotZ'})
mdb.jobs['Job20230722topDownClampRotZ']._Message(MEMORY_ESTIMATE, {
    'phase': STANDARD_PHASE, 'jobName': 'Job20230722topDownClampRotZ', 
    'memory': 7975.0})
mdb.jobs['Job20230722topDownClampRotZ']._Message(PHYSICAL_MEMORY, {
    'phase': STANDARD_PHASE, 'physical_memory': 32620.0, 
    'jobName': 'Job20230722topDownClampRotZ'})
mdb.jobs['Job20230722topDownClampRotZ']._Message(MINIMUM_MEMORY, {
    'minimum_memory': 844.0, 'phase': STANDARD_PHASE, 
    'jobName': 'Job20230722topDownClampRotZ'})
mdb.jobs['Job20230722topDownClampRotZ']._Message(STATUS, {'totalTime': 0.1, 
    'attempts': 1, 'timeIncrement': 0.1, 'increment': 1, 'stepTime': 0.1, 
    'step': 1, 'jobName': 'Job20230722topDownClampRotZ', 'severe': 27, 
    'iterations': 27, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job20230722topDownClampRotZ']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 1, 
    'jobName': 'Job20230722topDownClampRotZ'})
mdb.jobs['Job20230722topDownClampRotZ']._Message(STATUS, {'totalTime': 0.2, 
    'attempts': 1, 'timeIncrement': 0.1, 'increment': 2, 'stepTime': 0.2, 
    'step': 1, 'jobName': 'Job20230722topDownClampRotZ', 'severe': 9, 
    'iterations': 10, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230722topDownClampRotZ']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 2, 
    'jobName': 'Job20230722topDownClampRotZ'})
mdb.jobs['Job20230722topDownClampRotZ']._Message(STATUS, {'totalTime': 0.3, 
    'attempts': 1, 'timeIncrement': 0.1, 'increment': 3, 'stepTime': 0.3, 
    'step': 1, 'jobName': 'Job20230722topDownClampRotZ', 'severe': 7, 
    'iterations': 8, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230722topDownClampRotZ']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 3, 
    'jobName': 'Job20230722topDownClampRotZ'})
mdb.jobs['Job20230722topDownClampRotZ']._Message(STATUS, {'totalTime': 0.45, 
    'attempts': 1, 'timeIncrement': 0.15, 'increment': 4, 'stepTime': 0.45, 
    'step': 1, 'jobName': 'Job20230722topDownClampRotZ', 'severe': 4, 
    'iterations': 5, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230722topDownClampRotZ']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 4, 
    'jobName': 'Job20230722topDownClampRotZ'})
mdb.jobs['Job20230722topDownClampRotZ']._Message(STATUS, {'totalTime': 0.675, 
    'attempts': 1, 'timeIncrement': 0.225, 'increment': 5, 'stepTime': 0.675, 
    'step': 1, 'jobName': 'Job20230722topDownClampRotZ', 'severe': 2, 
    'iterations': 3, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230722topDownClampRotZ']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 5, 
    'jobName': 'Job20230722topDownClampRotZ'})
mdb.jobs['Job20230722topDownClampRotZ']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 6, 
    'jobName': 'Job20230722topDownClampRotZ'})
mdb.jobs['Job20230722topDownClampRotZ']._Message(STATUS, {'totalTime': 1.0, 
    'attempts': 1, 'timeIncrement': 0.325, 'increment': 6, 'stepTime': 1.0, 
    'step': 1, 'jobName': 'Job20230722topDownClampRotZ', 'severe': 7, 
    'iterations': 8, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230722topDownClampRotZ']._Message(END_STEP, {
    'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job20230722topDownClampRotZ'})
mdb.jobs['Job20230722topDownClampRotZ']._Message(STEP, {
    'phase': STANDARD_PHASE, 'stepId': 2, 
    'jobName': 'Job20230722topDownClampRotZ'})
mdb.jobs['Job20230722topDownClampRotZ']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 0, 
    'jobName': 'Job20230722topDownClampRotZ'})
mdb.jobs['Job20230722topDownClampRotZ']._Message(MEMORY_ESTIMATE, {
    'phase': STANDARD_PHASE, 'jobName': 'Job20230722topDownClampRotZ', 
    'memory': 7424.0})
mdb.jobs['Job20230722topDownClampRotZ']._Message(PHYSICAL_MEMORY, {
    'phase': STANDARD_PHASE, 'physical_memory': 32620.0, 
    'jobName': 'Job20230722topDownClampRotZ'})
mdb.jobs['Job20230722topDownClampRotZ']._Message(MINIMUM_MEMORY, {
    'minimum_memory': 822.0, 'phase': STANDARD_PHASE, 
    'jobName': 'Job20230722topDownClampRotZ'})
mdb.jobs['Job20230722topDownClampRotZ']._Message(STATUS, {'totalTime': 1.05, 
    'attempts': 1, 'timeIncrement': 0.05, 'increment': 1, 'stepTime': 0.05, 
    'step': 2, 'jobName': 'Job20230722topDownClampRotZ', 'severe': 10, 
    'iterations': 11, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230722topDownClampRotZ']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 1, 
    'jobName': 'Job20230722topDownClampRotZ'})
mdb.jobs['Job20230722topDownClampRotZ']._Message(STATUS, {'totalTime': 1.1, 
    'attempts': 1, 'timeIncrement': 0.05, 'increment': 2, 'stepTime': 0.1, 
    'step': 2, 'jobName': 'Job20230722topDownClampRotZ', 'severe': 7, 
    'iterations': 7, 'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job20230722topDownClampRotZ']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 2, 
    'jobName': 'Job20230722topDownClampRotZ'})
mdb.jobs['Job20230722topDownClampRotZ']._Message(STATUS, {'totalTime': 1.15, 
    'attempts': 1, 'timeIncrement': 0.05, 'increment': 3, 'stepTime': 0.15, 
    'step': 2, 'jobName': 'Job20230722topDownClampRotZ', 'severe': 4, 
    'iterations': 5, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230722topDownClampRotZ']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 3, 
    'jobName': 'Job20230722topDownClampRotZ'})
mdb.jobs['Job20230722topDownClampRotZ']._Message(STATUS, {'totalTime': 1.2, 
    'attempts': 1, 'timeIncrement': 0.05, 'increment': 4, 'stepTime': 0.2, 
    'step': 2, 'jobName': 'Job20230722topDownClampRotZ', 'severe': 5, 
    'iterations': 6, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230722topDownClampRotZ']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 4, 
    'jobName': 'Job20230722topDownClampRotZ'})
mdb.jobs['Job20230722topDownClampRotZ']._Message(STATUS, {'totalTime': 1.25, 
    'attempts': 1, 'timeIncrement': 0.05, 'increment': 5, 'stepTime': 0.25, 
    'step': 2, 'jobName': 'Job20230722topDownClampRotZ', 'severe': 7, 
    'iterations': 8, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230722topDownClampRotZ']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 5, 
    'jobName': 'Job20230722topDownClampRotZ'})
mdb.jobs['Job20230722topDownClampRotZ']._Message(WARNING, {
    'phase': STANDARD_PHASE, 
    'message': 'THE STRAIN INCREMENT HAS EXCEEDED FIFTY TIMES THE STRAIN TO CAUSE FIRST YIELD AT 103 POINTS', 
    'jobName': 'Job20230722topDownClampRotZ'})
mdb.jobs['Job20230722topDownClampRotZ']._Message(WARNING, {
    'phase': STANDARD_PHASE, 
    'message': 'THE STRAIN INCREMENT IS SO LARGE THAT THE PROGRAM WILL NOT ATTEMPT THE PLASTICITY CALCULATION AT 1 POINTS', 
    'jobName': 'Job20230722topDownClampRotZ'})
mdb.jobs['Job20230722topDownClampRotZ']._Message(STATUS, {'totalTime': 1.25, 
    'attempts': ' 1U', 'timeIncrement': 0.05, 'increment': 6, 'stepTime': 0.25, 
    'step': 2, 'jobName': 'Job20230722topDownClampRotZ', 'severe': 5, 
    'iterations': 6, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230722topDownClampRotZ']._Message(STATUS, {'totalTime': 1.2625, 
    'attempts': 2, 'timeIncrement': 0.0125, 'increment': 6, 'stepTime': 0.2625, 
    'step': 2, 'jobName': 'Job20230722topDownClampRotZ', 'severe': 5, 
    'iterations': 6, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230722topDownClampRotZ']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 6, 
    'jobName': 'Job20230722topDownClampRotZ'})
mdb.jobs['Job20230722topDownClampRotZ']._Message(STATUS, {'totalTime': 1.28125, 
    'attempts': 1, 'timeIncrement': 0.01875, 'increment': 7, 
    'stepTime': 0.28125, 'step': 2, 'jobName': 'Job20230722topDownClampRotZ', 
    'severe': 6, 'iterations': 7, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230722topDownClampRotZ']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 7, 
    'jobName': 'Job20230722topDownClampRotZ'})
mdb.jobs['Job20230722topDownClampRotZ']._Message(STATUS, {
    'totalTime': 1.309375, 'attempts': 1, 'timeIncrement': 0.028125, 
    'increment': 8, 'stepTime': 0.309375, 'step': 2, 
    'jobName': 'Job20230722topDownClampRotZ', 'severe': 6, 'iterations': 7, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230722topDownClampRotZ']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 8, 
    'jobName': 'Job20230722topDownClampRotZ'})
mdb.jobs['Job20230722topDownClampRotZ']._Message(STATUS, {
    'totalTime': 1.3515625, 'attempts': 1, 'timeIncrement': 0.0421875, 
    'increment': 9, 'stepTime': 0.3515625, 'step': 2, 
    'jobName': 'Job20230722topDownClampRotZ', 'severe': 5, 'iterations': 6, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230722topDownClampRotZ']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 9, 
    'jobName': 'Job20230722topDownClampRotZ'})
mdb.jobs['Job20230722topDownClampRotZ']._Message(STATUS, {
    'totalTime': 1.4015625, 'attempts': 1, 'timeIncrement': 0.05, 
    'increment': 10, 'stepTime': 0.4015625, 'step': 2, 
    'jobName': 'Job20230722topDownClampRotZ', 'severe': 6, 'iterations': 7, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230722topDownClampRotZ']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 10, 
    'jobName': 'Job20230722topDownClampRotZ'})
mdb.jobs['Job20230722topDownClampRotZ']._Message(STATUS, {
    'totalTime': 1.4515625, 'attempts': 1, 'timeIncrement': 0.05, 
    'increment': 11, 'stepTime': 0.4515625, 'step': 2, 
    'jobName': 'Job20230722topDownClampRotZ', 'severe': 8, 'iterations': 8, 
    'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job20230722topDownClampRotZ']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 11, 
    'jobName': 'Job20230722topDownClampRotZ'})
mdb.jobs['Job20230722topDownClampRotZ']._Message(STATUS, {
    'totalTime': 1.5015625, 'attempts': 1, 'timeIncrement': 0.05, 
    'increment': 12, 'stepTime': 0.5015625, 'step': 2, 
    'jobName': 'Job20230722topDownClampRotZ', 'severe': 17, 'iterations': 18, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230722topDownClampRotZ']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 12, 
    'jobName': 'Job20230722topDownClampRotZ'})
mdb.jobs['Job20230722topDownClampRotZ']._Message(STATUS, {
    'totalTime': 1.5515625, 'attempts': 1, 'timeIncrement': 0.05, 
    'increment': 13, 'stepTime': 0.5515625, 'step': 2, 
    'jobName': 'Job20230722topDownClampRotZ', 'severe': 16, 'iterations': 17, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230722topDownClampRotZ']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 13, 
    'jobName': 'Job20230722topDownClampRotZ'})
mdb.jobs['Job20230722topDownClampRotZ']._Message(STATUS, {
    'totalTime': 1.5890625, 'attempts': 1, 'timeIncrement': 0.0375, 
    'increment': 14, 'stepTime': 0.5890625, 'step': 2, 
    'jobName': 'Job20230722topDownClampRotZ', 'severe': 3, 'iterations': 4, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230722topDownClampRotZ']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 14, 
    'jobName': 'Job20230722topDownClampRotZ'})
mdb.jobs['Job20230722topDownClampRotZ']._Message(STATUS, {
    'totalTime': 1.6265625, 'attempts': 1, 'timeIncrement': 0.0375, 
    'increment': 15, 'stepTime': 0.6265625, 'step': 2, 
    'jobName': 'Job20230722topDownClampRotZ', 'severe': 6, 'iterations': 7, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230722topDownClampRotZ']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 15, 
    'jobName': 'Job20230722topDownClampRotZ'})
mdb.jobs['Job20230722topDownClampRotZ']._Message(STATUS, {
    'totalTime': 1.6765625, 'attempts': 1, 'timeIncrement': 0.05, 
    'increment': 16, 'stepTime': 0.6765625, 'step': 2, 
    'jobName': 'Job20230722topDownClampRotZ', 'severe': 14, 'iterations': 15, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230722topDownClampRotZ']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 16, 
    'jobName': 'Job20230722topDownClampRotZ'})
mdb.jobs['Job20230722topDownClampRotZ']._Message(STATUS, {
    'totalTime': 1.7265625, 'attempts': 1, 'timeIncrement': 0.05, 
    'increment': 17, 'stepTime': 0.7265625, 'step': 2, 
    'jobName': 'Job20230722topDownClampRotZ', 'severe': 11, 'iterations': 12, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230722topDownClampRotZ']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 17, 
    'jobName': 'Job20230722topDownClampRotZ'})
mdb.jobs['Job20230722topDownClampRotZ']._Message(STATUS, {
    'totalTime': 1.7265625, 'attempts': ' 1U', 'timeIncrement': 0.05, 
    'increment': 18, 'stepTime': 0.7265625, 'step': 2, 
    'jobName': 'Job20230722topDownClampRotZ', 'severe': 4, 'iterations': 4, 
    'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job20230722topDownClampRotZ']._Message(STATUS, {
    'totalTime': 1.7390625, 'attempts': 2, 'timeIncrement': 0.0125, 
    'increment': 18, 'stepTime': 0.7390625, 'step': 2, 
    'jobName': 'Job20230722topDownClampRotZ', 'severe': 5, 'iterations': 6, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230722topDownClampRotZ']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 18, 
    'jobName': 'Job20230722topDownClampRotZ'})
mdb.jobs['Job20230722topDownClampRotZ']._Message(STATUS, {
    'totalTime': 1.7578125, 'attempts': 1, 'timeIncrement': 0.01875, 
    'increment': 19, 'stepTime': 0.7578125, 'step': 2, 
    'jobName': 'Job20230722topDownClampRotZ', 'severe': 3, 'iterations': 4, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230722topDownClampRotZ']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 19, 
    'jobName': 'Job20230722topDownClampRotZ'})
mdb.jobs['Job20230722topDownClampRotZ']._Message(STATUS, {
    'totalTime': 1.7578125, 'attempts': ' 1U', 'timeIncrement': 0.028125, 
    'increment': 20, 'stepTime': 0.7578125, 'step': 2, 
    'jobName': 'Job20230722topDownClampRotZ', 'severe': 5, 'iterations': 5, 
    'phase': STANDARD_PHASE, 'equilibrium': 0})
mdb.jobs['Job20230722topDownClampRotZ']._Message(STATUS, {
    'totalTime': 1.76484375, 'attempts': 2, 'timeIncrement': 0.00703125, 
    'increment': 20, 'stepTime': 0.76484375, 'step': 2, 
    'jobName': 'Job20230722topDownClampRotZ', 'severe': 5, 'iterations': 6, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230722topDownClampRotZ']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 20, 
    'jobName': 'Job20230722topDownClampRotZ'})
mdb.jobs['Job20230722topDownClampRotZ']._Message(STATUS, {
    'totalTime': 1.775390625, 'attempts': 1, 'timeIncrement': 0.010546875, 
    'increment': 21, 'stepTime': 0.775390625, 'step': 2, 
    'jobName': 'Job20230722topDownClampRotZ', 'severe': 4, 'iterations': 5, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230722topDownClampRotZ']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 21, 
    'jobName': 'Job20230722topDownClampRotZ'})
mdb.jobs['Job20230722topDownClampRotZ']._Message(STATUS, {
    'totalTime': 1.7912109375, 'attempts': 1, 'timeIncrement': 0.0158203125, 
    'increment': 22, 'stepTime': 0.7912109375, 'step': 2, 
    'jobName': 'Job20230722topDownClampRotZ', 'severe': 4, 'iterations': 5, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230722topDownClampRotZ']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 22, 
    'jobName': 'Job20230722topDownClampRotZ'})
mdb.jobs['Job20230722topDownClampRotZ']._Message(STATUS, {
    'totalTime': 1.81494140625, 'attempts': 1, 'timeIncrement': 0.02373046875, 
    'increment': 23, 'stepTime': 0.81494140625, 'step': 2, 
    'jobName': 'Job20230722topDownClampRotZ', 'severe': 8, 'iterations': 9, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230722topDownClampRotZ']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 23, 
    'jobName': 'Job20230722topDownClampRotZ'})
mdb.jobs['Job20230722topDownClampRotZ']._Message(STATUS, {
    'totalTime': 1.850537109375, 'attempts': 1, 
    'timeIncrement': 0.035595703125, 'increment': 24, 
    'stepTime': 0.850537109375, 'step': 2, 
    'jobName': 'Job20230722topDownClampRotZ', 'severe': 8, 'iterations': 9, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230722topDownClampRotZ']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 24, 
    'jobName': 'Job20230722topDownClampRotZ'})
mdb.jobs['Job20230722topDownClampRotZ']._Message(STATUS, {
    'totalTime': 1.900537109375, 'attempts': 1, 'timeIncrement': 0.05, 
    'increment': 25, 'stepTime': 0.900537109375, 'step': 2, 
    'jobName': 'Job20230722topDownClampRotZ', 'severe': 5, 'iterations': 6, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230722topDownClampRotZ']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 25, 
    'jobName': 'Job20230722topDownClampRotZ'})
mdb.jobs['Job20230722topDownClampRotZ']._Message(STATUS, {
    'totalTime': 1.950537109375, 'attempts': 1, 'timeIncrement': 0.05, 
    'increment': 26, 'stepTime': 0.950537109375, 'step': 2, 
    'jobName': 'Job20230722topDownClampRotZ', 'severe': 5, 'iterations': 6, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230722topDownClampRotZ']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 26, 
    'jobName': 'Job20230722topDownClampRotZ'})
mdb.jobs['Job20230722topDownClampRotZ']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 1, 'frame': 27, 
    'jobName': 'Job20230722topDownClampRotZ'})
mdb.jobs['Job20230722topDownClampRotZ']._Message(STATUS, {'totalTime': 2.0, 
    'attempts': 1, 'timeIncrement': 0.0494628906249998, 'increment': 27, 
    'stepTime': 1.0, 'step': 2, 'jobName': 'Job20230722topDownClampRotZ', 
    'severe': 5, 'iterations': 6, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job20230722topDownClampRotZ']._Message(END_STEP, {
    'phase': STANDARD_PHASE, 'stepId': 2, 
    'jobName': 'Job20230722topDownClampRotZ'})
mdb.jobs['Job20230722topDownClampRotZ']._Message(COMPLETED, {
    'phase': STANDARD_PHASE, 'message': 'Analysis phase complete', 
    'jobName': 'Job20230722topDownClampRotZ'})
mdb.jobs['Job20230722topDownClampRotZ']._Message(JOB_COMPLETED, {
    'time': 'Sat Jul 22 18:57:27 2023', 
    'jobName': 'Job20230722topDownClampRotZ'})
# Save by xinlo on 2023_07_22-19.04.05; build 2017 2016_09_27-14.54.59 126836
# Save by xinlo on 2023_07_22-19.04.10; build 2017 2016_09_27-14.54.59 126836
